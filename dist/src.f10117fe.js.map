{"version":3,"sources":["node_modules/vector_class/src/Vector2D.ts","node_modules/vector_class/src/Vector3D.ts","node_modules/vector_class/src/index.ts","src/Camera.ts","src/Properties.ts","src/graphics/Graphic.ts","src/Media/Video.ts","src/Events/CircleEvents.ts","src/Media/Picture.ts","src/Scene.ts","src/Render.ts","src/LinearGradient.ts","src/Color.ts","src/Media/Animation.ts","src/graphics/Ellipse.ts","src/graphics/Poligon.ts","src/graphics/Circle.ts","src/graphics/Rect.ts","src/graphics/Line.ts","src/graphics/Text.ts","src/graphics/Arc.ts","src/graphics/BezierCurve.ts","src/graphics/QuadraticCurve.ts","src/Events/Event.ts","src/Events/Mouse.ts","src/Events/KeyBoard.ts","src/index.ts"],"names":[],"mappings":";;AAAA,ACCA;AGDA,IJIE,ACEA,AGNU,OAAZ,SJIe,CAAa,CCEb,CDFe,ACEN,CDFmB,CCEjB,CAAS,EAAE,CAAS;AEN9C,ASAA,AWiBA,AZhBA,AEDA,AHCA,ALDA,IFAA,ASAA,AWiBA,AZhBA,AEDA,AHCA,ALDA,ILIe,ACGX,CWPJ,AWiBA,GtBVQ,CAAC,CAAC,GAAG,CAAC,AEPd,AQCA,AEDA,AHCA,ALDA,CJOc,EEPd,AQCA,AEDA,AHCA,ALDA,KLIe,EAAA,AGJf,AQCA,AEDA,AHCA,ALDA,CFAA,AQCA,AEDA,AHCA,ALDA,ILI4B,UGJ5B,AQCA,AEDA,AHCA,ALDA,CFAA,AQCA,AEDA,AHCA,ALDA;AHCA,AUDA,AWiBA,AnBjBA,CAAA,OJI8B,ACI1B,GGRQ,CHQJ,CAAC,CAAC,GAAG,CAAC,AGRd,CHQc,CGRK,MJIW,EAAA,KAAa,uBEHV;AAI/B,ACFF,ASHA,AWiBA,AZdA,AEDA,ATDE,AMEF,ALFA,EDAE,EDEF,AQAA,AEDA,AHCA,ALFA,ILII,ACIA,CGRF,CAAA,AMEF,CPAA,CHEQ,ACIA,AWTR,AWiBA,CvBZS,ACIA,AYPT,CbGU,ACIA,AENV,ECFE,ACAF,CLIa,ACIA,AGRX,CJIY,ACIA,AUNd,CXEc,ACIA,ACRP,AGAP,CDAE,CDEF,CAAA,ICFE,ACAF,CAAA,IFEA,CAAA,QDFe,CAIL,CGJV,CAAA;AHCA,AUIE,AWWF,AZdA,AEDA,ATAE,AMCF,ENDE,EHQA,CAAC,GDJC,CIJF,CAAA,CQIA,AWWF,CvBXQ,CAAC,CAAC,EYAR,AWWF,CvBXa,AYAE,CZAD,AIJZ,CJIY,AuBWd,AnBfE,CQIA,EAAsB,ARJtB,KQIA,EAAiC,CRJjC,GQIA,EAA2C,KAA3C,EAAoD,cVJrB;AAI/B,ACDF,ASCe,AWYN,AZfT,AEDA,ATCE,AMAF,ALAA,EDAE,EJIA,ACKA,AEPF,AEFA,CLIG,GYDY,CWYN,AnBfP,CDEF,ACFE,CQGa,APHf,CMAA,AEDA,AHCA,GaeS,CXZM,CRHb,CmBeqB,AnBfrB,CFDK,EUIQ,ARHb,CQGa,EAAA,EXMV,EGTH,CHSA,UAAK,CCVQ,CAIL,IDMa;AEPvB,ASCe,AWaX,AZVF,AEOA,ATZD,AMKC,ALNF,AqBHA,CtBAA,EAAY,CJSV,A0BTI,EdMS,EXOX,CWPW,CRNI,COSjB,AEOA,AHPA,CTIM,AWPO,CXON,AWPM,ARNH,CHaF,AyBbM,GhBSd,AgBTiB,CzBaL,ASJA,EGOZ,AThBU,CSgBE,AThBF,GJSP,ACIe,ASJlB,CTImB,AUJnB,AeTyB,CzBaL,AUJR,ADA4B,AgBTd,C1BS1B,ACIoB,CGbV,GMSV,CCAA,CPTU,AMS8C,CCAhC,AEOxB,EAA8B,CbPzB,EUAL,AgBTiB,CtBAP,AsBA8B,CtBA9B,AMS6D,EVApD,I0BTF,CtBAP,AsBAZ,GtBAmB,EAAP,CAAZ;ADKA,ASCsB,AWclB,AZVA,AEPK,AHMP,ADRF,AJEA,AqBFA,IjBAA,EcmBI,EvBVA,ACIA,ASLF,CCCO,AEPA,CaFC,CAAC,C1BSH,ACIA,AETR,AMJA,AJEA,CLOS,ACIA,AYXA,AHMP,CVCQ,ACIA,CsBMG,AdnBb,AiBAA,CfSI,AEPqB,AHMvB,CaWa,CvBVD,ACIA,AyBbI,CHiBK,AZRJ,CEPV,AHMP,IVCkB,ACIA,CDJC,ACIA,AUJI,CXAH,ACIA,AUJI,CXAJ,ACIA,CyBbtB,EjBAA,CAAA,EESI,KFTJ,CAAA,UAAA,CAAA,CAAA;ANiBE,AoBGE,AZVA,AEPK,ATET,ACuBE,AqB3BF,ItBIY,EmBeR,EvBVA,ACIA,CUJK,AEPA,CaFC,CvBgBR,AEWA,AqB3BS,C1BSH,ACIA,AGTR,CJKS,ACIA,AsBME,AZVP,AEPK,CbOC,ACIA,CsBMG,CZVG,AEPU,CVcxB,AoBAqB,CvBPT,ACIA,AEGC,AEWb,CAAY,CQzBgB,AaF9B,EfSsB,CAAC,ANkBrB,AqB3BqB,C1BSH,ACIA,CDJC,ACIA,AEGnB,AEWsB,CLlBF,ACIA,CDJA,ACIA,AEG0B,AQPhC,GAAc,IEPA,CAAA,CFOM,CAAC,IAArB,EEPU,CFOkB,AEPL,EAAb,EFOsB,AEPL,EAAjB,CAAjB,WFOuC,CAAA,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAxC,kBeTJ;AvBKS,ASDe,AWgBpB,AZVA,AEDK,AHJA,ADLT,AJES,AqBST,I1BDE,ACIA,AQdF,CTUG,ACIA,CsBMC,EXhBoB,AcOhB,CvBNC,AQKA,AEDA,AHJA,ALHA,AqBSA,EjBXT,EGIwB,AcOxB,CbFS,AJTT,AiBWc,CvBNL,AoBeI,AlBlBJ,EkBkBM,AZVX,AEDsB,CVJR,ASDM,AFCf,ALHkB,CkBcJ,CZNH,CEDU,AHJD,EEDL,CAAA,CDMC,AeCzB,CdPwB,AcOE,EhBNU,CDLpC,CCKS,ADLT,AJE2B,CAAA,CMQP,CAAa,EEDH,CAAA,AaE9B,CjBXA,CAAA,AJE2B,CAAQ,KQOT,CAAa,ARP9B,CQOiB,EAAgB,CAAhB,CAAjB,GFCW,AFVpB,CEUsD,AFVtD,CAAA,IEU2D,QAAL,CAAc,CAAhD,EAAmD,KAAK,QAAL,CAAc,CAAjE,EAAoE,KAAK,IAAL,CAAU,CAA9E,EAAiF,KAAK,IAAL,CAAU,CAA3F,CAAhB;ARLgB,ASDI,AWiBpB,AZVA,AEAK,ATPT,ACCS,CDDT,GJQE,ACIA,EEXkB,ASDI,AWiBpB,EpBhBkB,AQMd,CEAC,ARNA,CFAe,CSDA,ARAZ,EDCM,AEAT,CODe,CAAA,ADOT,CNNU,EMMP,CAAd,APPJ,CCCS,CkBgBU,AnBjBC,EmBiBC,CvBThB,CaDI,CZKJ,CDJH,CuBIqB,AVLc,CZKnC,IYLO,IbCF,ECIA,IDJc,ECIE;AEXM,ASDI,AWkB7B,AVPA,ATVF,AMGE,ADPJ,AJKS,AqBOT,EtBRE,EKJF,AiBYA,EvBR6B,AoBiBzB,EvBTA,ACIA,ASTI,CGOC,ARTA,CFDwB,ACA/B,CAAA,AsBQF,C1BAQ,ACIA,AEZ2B,CHQ1B,ACIA,AYFL,AJdJ,CTYU,ACIA,AYFI,AHPV,AgBKJ,CvBRkB,AECT,CKEO,ADPhB,ETYc,ACIA,AGZZ,ACCyB,CDDzB,EmBiBiB,CnBjBjB,CmBiBmB,AlBhBZ,CLOW,ACIA,CDJC,ACIA,CDJC,ACIA,CDJA,ACIA,AYFK,CUCJ,AVDK,CTV1B,AsBQF,CAAA,CbEI,AJdJ,CAAA,KiBYA,CAAA,CjBZA,CAAA,OiBYA,CAAA,CAAA,QjBZA,CAAA,CAAA;ANIwC,AoBkBpC,AZXA,AEIA,ATVF,AMGI,ALFG,EDDP,IDDsC,AoBkBpC,EvBTA,ACIA,CUNkB,AEIb,ARTA,CFFmC,ACC1C,CAAA,AMGS,CVKH,ACIA,AEbsC,CHSrC,ACIA,AUNa,AEIlB,CbFM,ACIA,CEbQ,AQOI,ANLb,CQSO,CHPV,CVKQ,ACIA,AUNQ,APNpB,ACC0B,CkBgBX,AZXK,APNpB,CMGkB,CacD,AZXG,CPNpB,ACC8B,CMKV,CXEF,ACIA,CDJC,ACIA,CDJC,ACIA,AsBFC,AZJD,ADHhB,CVKgB,ACIA,EYFO,ATV3B,CSU4B,EFJF,CAAC,CEIb,ERTgB,CQSK,ARTL,EMK5B,EAAkB,EAAA,ENLM,CMKN,ANLmB,EMKnB,CAAA,ANLM,CQSsB,CAAC,ARTL,GAAlB,CMKxB,AEIY,ARTP,EMKa,CEIoC,CFJpC,EAAlB,CEIA,CFJiC;ARPc,ASDhB,AWqB/B,AZbK,AEKL,ATVF,AMGG,ADNL,AJIS,AqBoDP,EtBrDA,EJQA,ASXF,CTWG,AUPC,CPH+C,CuBuDjD,CzBzCE,AWf+B,AcwDjC,Cb3CO,AJbT,AJIS,CMII,APLX,CDFsD,ACEtD,AMGS,CTSH,AWf2B,CXe1B,AEdiD,AUYtD,Aa2CF,CzBzCQ,CUPQ,CEKF,AaJT,CdT4B,API1B,CJWK,AUPI,APLhB,CAAA,COKgB,ANJY,CMIZ,CCRiB,ARGjC,CQHiC,ADQjB,AeCX,CzBMa,AUPX,ANJyB,AqBK3B,CzBMc,AWfc,CXeb,CAAA,EYFO,ATV3B,CSU4B,GaJvB,CbIS,Aa2Cd,Gb3CmC,CRTH,CAAA,QAAJ,CAAa,CAAb,CQSoB,CAAC,ARTL,CAAhB,CAArB,EQSO,GAA0C,IAAI,cAAA,CAAA,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAtD;AVZc,ASDiB,AWsB/B,AZbE,AEKF,ATVH,AMGK,ADPN,AJKS,CDLT,EAAY,CJaV,ACGA,CAAC,AEfM,CSD0B,AWsB/B,GVRK,ARTA,COL0B,CDSxB,APTS,AMOT,EEPwB,CAAA,AWsBvB,AVRR,ATdQ,ACKH,EkBiBK,CVRG,AHPX,ALFmB,CkBOF,CZHjB,CAAc,ADFA,CNPR,CAAA,CCKH,ELQH,GAAJ,AUN0B,CAAC,CGOC,ATdlB,CScmB,CFLzB,CAA2B,EPTrB,CScK,EbDT,CaC+B,CFLjC,EAAoC,APT9B,AMOQ,CNPR,AMO+B,CVMrB,GWJhB,EAD+B,CAE/B,CPVM,AMOQ,CGOgC,AHP9C,CGO+C,CTdjC,EAAR,CAAZ,CSciB,GAA4C,IAAI,cAAA,CAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAzD;AVZK,ASFkC,AWuBvC,AVRA,AHPE,ADRN,AJMS,AqBIT,IzBQE,AyBRF,EHaI,AbfE,EVMF,CGZK,AUaA,ARTA,EkBiBA,CvBTD,ASdR,AiBUA,C1BIS,AuBSE,CvBTD,AUNI,CaIS,AbJR,ALFN,AqBIT,EvBRS,CHYK,AaCV,ARTsB,CKEpB,CPNwB,AOMV,CGOC,GbDD,AGZc,CHYd,AKRX,EJYH,GAAJ,AyBRF,ChBFM,AgBEN,ChBFgC,EGOE,CAAC,EHPE,CPNH,AuBQlC,CvBRkC,AuBQlC,CzBQQ,GSVF,CGOe,EZGC,CEhBQ,AUaiB,CVbJ,CAAb,AuBQ9B,CAAA,CvBR8C,AuBQ9C,CvBR8B,CAArB,OUamD,CAAC,SAAxC,GAAoD,EAArE;AVXM,AoBoBN,AZbE,AEKF,ATVJ,AMGK,ADAH,AJFO,IDDG,EmBkBR,AZbE,EXIF,ACIA,CEfM,AUYD,ARTA,EDDT,AKGE,CTMM,ACIA,CDJC,ACIA,AsBKE,AZbE,CXIH,ACIA,CsBKG,CdfX,AJFO,CkBKc,AZDN,AFFH,CTMA,ACIA,CYHV,ARTuB,EMIN,CRPX,AUYY,EbDF,ACIA,CDJA,ACIA,AEfgB,AMKlC,EEEyB,AFFG,CEEF,CRPY,EEGb,CAAA,EMIN,CAAc,AEKA,CAAC,GRTT,CAAQ,CMI7B,ERPkC,CAAA,CEG/B,CQSL,MVZgC,CAAa,CAAb,EAAgB,CAAhB,CAA1B;AACA,ASLmC,AWyBzC,AZbC,AEKD,AJPA,AJFK,AqBiDP,I1BzCA,CAAC,CuBSC,CGgCF,CzBrCE,AWpByC,AcyD3C,CvBpDQ,AUYD,AJPA,AJFA,CQSL,EZGI,CAAC,AWpBoC,ACiBhC,CZGH,AYHN,AawCF,CjB/CE,EJFK,AqBEF,CzBUO,AWpB+B,AHU3B,CNLR,CoBoBQ,Adfd,AJFwB,EFHI,AoBoBZ,CXzByB,CXoBzB,AWpByB,CXoBzB,AyBVb,CdVsC,AcUtC,CvBLG,AoBOa,KlBJK,CAAA,EqBErB,CA+CL,KrBjD0B,CAAS,KAA5B;AFFC,ASNmC,AW0BzC,AZbD,AEKC,ATZJ,AMKI,ADAA,AJFK,CDHT,GJYE,EYlB2C,AW0BzC,EtBLA,ASVI,CPLE,AUYD,AJPA,AJFA,CQSL,CDlByC,ARMjC,CHeJ,CAAC,AYHI,AHPA,CTUH,AWrBmC,ACkBzC,CDlByC,EFW5B,CTUH,AGfd,AKKI,AJFK,CFHC,AoBoBO,CnBpBE,CmBoBA,AdfE,AJFQ,CFHG,AMK5B,CCAA,CVOC,ACGe,CAAA,ASVK,CaCF,CvBMrB,AGZQ,QEGD,ELSF,MAAc;AGXX,ASP4C,AW2BlD,AVRD,ATZD,AMKI,ADAF,AJFK,AqBCT,EtBJE,EHeA,AyBXF,CzBWG,CsBKC,EvBRA,CGZM,ACAR,AKKO,AJFA,CDHP,CMKS,CVOH,CAAC,CAAC,GuBQK,AbfT,ADAF,CTOU,AIZZ,AMKgB,ALFT,CkBiBQ,AnBpBf,CKKkB,AiBDpB,CrBD6B,CDH3B,CMKI,AgBDN,C1BQoB,CAAA,CUPM,EPLhB,AMKN,CJFK,CDHP,CDAuC,AOKnC,KPLI,EuBIV,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;AvBHU,AoBIa,AZEvB,APNE,AMKI,ADAF,AJFK,EDHP,EHgBA,CsBZO,GvBQL,CGZM,AQMV,APNE,AKKO,AJFA,CDHP,CMKS,CVOH,CAAC,CAAC,GGZA,AOKJ,CVOQ,AUPI,EPLa,ACA7B,ACGO,CDHP,EOMF,ANH+B,CLSX,AGZe,ACAjC,AMKI,ADAF,CTOgB,CCIf,CSXsB,ADAA,ERWzB,ISXI,CNLJ,AKKE,INL+B,CFgB5B,AEhB4B,EEG1B,IJaY,EEhBU,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,ASRN,AWkCH,AZtCD,AEwBE,ATZA,AMKG,ADAD,AJFK,AqB6BP,Cf5CF,CEwBE,ATZA,COZF,CXwBE,CAAC,AUVC,EgB8BF,CzBhBE,AyBgBF,CvBhCQ,ASRD,ARQP,AKKO,AJFA,CDHP,CSYA,AHPS,CTWH,AWxBJ,ACoBF,CZIO,CAAC,CWxBO,CHab,ERWU,CWxBO,AHaF,CGbG,ARQpB,CDAQ,AUYR,ATZA,ACGO,CQSP,AaoBA,EzBhBkB,AEhBe,ACAjC,AKKsB,AJFQ,CJaZ,AWxBH,AcUV,CdVqB,ETQW,CSRR,GAAG,AHaf,AJFV,CIEwB,CLL/B,CQRe,ACoBf,CDpBE,ECoBF,EJPE,CiBHG,CvBFgC,AuBEhC,CvBFgC,KUYtB,GVZkB,AuBE5B,CvBFyC,AUY9C,AaoBA,CvBhCiC,CUYN,CVZsB,CAAhB,CAAzB;AACA,ASRN,ACoBA,ATZF,AMKI,ADAF,AJFK,EDHP,EJaA,ICGE,AYJI,CVZE,ASRD,ACoBA,ATZP,AKKO,AJFA,CDHP,CMKS,CTWH,CAAC,AIbA,CJaC,AWxBN,ACoBU,CJPV,CJFoB,CFHd,ASRO,AFaX,CTWQ,ASXI,ADAA,AJFT,EFHoB,CSRR,ARQnB,CQRoB,ARQpB,AKKoB,CNLZ,AOKJ,CTWc,CAAA,AGhBlB,CMKwB,CEbT,CZqBR,AYrBmB,ECoBxB,AJPkB,CTQpB,ASRoB,CIOU,AHPA,CEbC,AFaA,GEbG,ARQlC,GQRe,CAAb,AHakB,CAAJ,CAAW,CCAvB,IDA4B,OAAhB,CAAd;ANFA,ASVA,AW2BK,AZdT,AEOM,ATZL,AMKK,ADAH,AJFM,AqBFT,CtBNA,CmBwBS,CnBxBG,CsBMZ,GHkBS,AZdT,CXQI,ACGA,AsBGK,AZdT,CRHS,ASVA,APWA,CDRU,CSiBR,AHPA,CVQH,ACGA,CDHC,ACGA,AWxBL,ARGQ,CJkBF,ACGA,EEdN,ASVa,CW2BR,AZdT,ADAM,ALFG,CLUK,ACGA,AsBGL,AZdT,ADAkB,AgBJlB,C1BYe,AGXI,CHWH,AYrBK,ARGT,ACQgB,CLUZ,AYrBM,ADaP,APVH,ACQH,AqBFT,GzBeoB,ASXd,CTWc,CEdhB,ASVa,CAAW,AW2BnB,AVPH,AHPqB,CNVf,AsBMZ,CAAA,CHkBE,AVP4B,CDpBE,ERGpB,AMUqB,CEbE,ACoB7B,AHP4B,CCAlC,ECbiB,CAAb,EW2BgB,AnBxBR,CAAA,EsBMZ,CHkBE,AGlBF,ChBIM,Cac0B,EnBxBpB,GAAO,EAAP,CAAZ;ADQG,ASVC,AW0BF,AVNI,AHPD,ALFI,IJaP,CAAC,GDHC,AuBKF,CX1BO,APWA,EQSE,CbCH,CAAC,AuBKP,CvBLQ,AYrBN,EW0BF,AVNI,ARTG,COXQ,ACoBA,CbCH,AaDR,CbCS,AKVY,CLUX,AuBKd,AlBfO,CLUO,AaDK,CDpBjB,ACoBE;ADlBF,ACmBE,ATZN,AKKE,AJFO,AqBiCP,EjB/BA,ETQA,ACIA,AGjBU,CJaT,ESRD,AiB+BA,Cd3CM,AHYN,AiB+BA,CrBjCO,EQSE,ATZX,EQPa,GAAL,ACmBF,AawBJ,CbxBe,AJPf,CIOI,AJPJ,AJFO,COVU,AcMV,EbaY,ARTQ,COVzB,APUK,EOVe,ECmBE,EJPxB,CGZ2B,CXwBpB,CQZP,CGZsB,CXwBtB,AyBlBO,CAAA,CdN0B,CCmBd,CAAgB,CDnBb,CAApB,ECmBiB,CawBnB,CbxByC,AJPzC,CGXO,ACkBY,CAAf,GDlBO,KAAK,GAAL,GAAW,CAAf,EAAkB,KAAK,GAAL,GAAW,CAAX;ATSzB,ASPE,AWsBA,AVLE,AHPF,ADAA,AJFK,EFDP,EHYA,AuBGE,ItBAA,AEfF,ASPM,CTON,AOGO,ALFA,EQSE,CZKH,AsBAI,CtBAH,AWtBI,AWsBA,CtBAH,ESZN,ETYU,AEfZ,ASPM,CXsBO,AEfb,AOGiB,ALFV,CJcO,CAAA,AWtBK,CPQS,ELWzB,AYnBD,AFUoB,ALFf,EORiB,CZmBxB,AGZA,EoBeE,AVLE,CVVJ,AoBe4B,AVLA,AHPX,CEVY,AFUA,GaY3B,AVLE,EDjBoB,AWsBU,GXtBG,CTO5B,COGQ,CEVO,AFUgB,CEVtC,ETOF,CoBemC,AbZlB,CPHO,AOGtB,CETK,GWqB2B,CXrBvB,CWqB6B,IXrBxB,KAAL,GAAa,CAAjB,EAAoB,KAAK,KAAL,GAAa,CAAb;ATOzB,ASLA,AWoBE,AVLD,ATdL,AMOI,ADAA,AJFK,AqBLT,CtBAA,GMOI,AgBPJ,EHmBM,EvBHF,ACGA,AWpBI,AHQE,CNHD,AECA,CKEC,CaYA,AnBnBE,AMOD,AgBPX,CzBmBQ,AsBAG,CtBAF,AWpBI,CXoBH,AyBnBV,C1BgBW,CSTO,CGRV,CXoBM,AsBAR,AnBnBN,CJgBe,ACGA,AsBAG,AdZG,AJFZ,CLWO,ACGA,AWpBI,ARCD,CHmBH,AEfZ,CAAkB,AECQ,CON1B,AWoBE,AlBdG,CLWW,ASTM,CTSL,AGZjB,ASLqB,AWoBD,CpBfE,COGtB,CAAwB,CVSH,A0BhBzB,C1BgB0B,AYjBI,AHQT,AiBPrB,C1BgB2B,AGZvB,AMG6B,CcY3B,CAA0B,CvBHF,AYjBL,EFQrB,CERiC,AHQhB,AiBPrB,C1BgBkC,AUTI,ADAE,AiBPxC,C1BgBmC,CAAC,AYjBX,CAArB,EZiBmC,AuBGN,GXnBxB,CZgBkC,AuBGX,AGnBhC,C1BgB4C,ASTH,AiBPzC,C1BgB6C,AuBGE,AGnB/C,CdAa,AFOyB,EVSU,CSTR,EGPtB,AHO4B,CTSM,CAAC,CAAC,CAAC,AYhB1C,CZgB0C,EYhB9B,CAAhB,EAAmB,KAAK,IAAL,GAAY,CAAZ;ATKzB,ASHC,AWiBgD,AVJjD,ATdD,AMOI,ADAA,AJFG,EDLP,CDEA,AUKA,CbSA,CAAC,CUTG,ETYF,AWlBI,CRDN,ACKO,CDLP,AKOQ,CCAA,CTYF,ASZG,CTYF,AWlBI,CXkBH,CsBD0C,AdXrC,GRYD,AWlBN,AFMF,CTYS,AsBDyC,AnBlBtD,AMOgB,CTYF,AsBDyC,AnBlBvD,CHmBc,AWlBK,CAAjB,APIK,CDLP,CQCsB,AFMlB,CaWkD,AlBbvB,CAAxB,CkBasD,AbXrC,ADAC,EGNE,GWiB2B,AnBlBtD,CmBkBkD,AbXpB,CENR,AFMS,EDAN,CGNU,AHMV,CGNH,CAApB,KACK,AFKH,EDAqB,CAArB,CGLO,CHKuB,IGLlB,GHKyB,EGL9B,EHKuB,CGLV,CAAjB,EAAoB,KAAK,KAAL,GAAa,CAAb;ATG7B,ASFG,ALvBH,AgBsCqE,AErCrE,ADAA,AhBDA,AFAA,AFqBE,AMOI,ADAA,AW5BN,ACAA,ALCA,AFDA,AT0BS,Aa1BT,AHAA,AOAA,ALAA,AEAA,AOmDE,EtB9BA,EJiBA,ACEA,AMxCF,AkBCA,ADAA,AhBDA,AFAA,AcAA,ACAA,ALCA,AFDA,AIAA,AHAA,AOAA,ALAA,AEAA,ClBwCG,CSZG,CaUA,AGaJ,CAAA,CtB9BA,ACKO,CDLP,AKOQ,CgB3BV,Af2BU,CAAC,CH5BX,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,AOmDE,CDlDF,ChB2Be,CF5Bf,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,AOmBO,EFlBP,AhBDA,AJqBE,AMOI,AU5BN,AJCA,CZoBE,AMOgB,Ec3BlB,AhBDA,AYAA,AJCA,CZoBE,ACKO,CqBPF,C1BmBF,A0BnBE,ChBSD,ALF2B,CAAxB,CLYP,ASVyB,Ce3B3B,AhBDA,AE4B2B,Ce3B3B,ADAA,AhBDA,CiBCA,ArBoBE,CGrBF,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,CZAA,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,COmBO,ChBS0B,ADAN,AiBuBzB,ChBvBgC,ADAP,CW5B3B,AJCA,AUoBA,C1BiBO,AyBrCP,ALDA,AJCA,CSAA,ClBDA,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,CZAA,ADAA,AeAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,GnBsCqB,AwBrCrB,AhBDA,CgBCA,AhBDA,AC4B2B,AW5B3B,AJCA,CP2BM,AW5BN,AJCA,CN2BM,Ce3BN,AhB2BkC,CgB3BlC,CAAA,EJDA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,CEAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,CEAA,APAA,AIAA,AHAA,AOAA,ALAA,AEAA,CV4ByC,IAAP,GF5BlC,ADAA,CCAA,ADAA,CCAA,ADAA,McAA,AJCA,CIDA,AJCA,CIDA,AJCA;AOsCK,AVHH,ATdA,AMOG,ADAC,AJFG,EQSP,ATdA,EHoBA,CsBLE,AbXA,GVaA,CIjBF,ACKO,CDLP,CScA,CAAA,CJPW,ETUF,AKZF,GDLP,AKOI,AJFwB,CLYf,AIjBb,CJiBc,AKZP,CLYQ,AaHf,CAAA,ATdA,EJiBkB,ECGf,GAAH,CDHwB,AIjBxB,CJiByB,CAAC,GAAG,IAAI,CAAC,AaHlC,CbGmC,EaHnC,CbGsC,MAAM,CAAC,CAAC,CAAA,AaH1B,IAApB,EAAgC;ADXhC,ALvBF,AgBsCG,AErCH,ADDA,AXkCE,ALnCF,AFAA,AFsBE,AMOC,ADAE,AW5BL,ACAA,ALCA,AFFA,AIAA,AHAA,AOCA,ALAA,AEAA,AOoBA,EdGE,ARFA,CmBaO,CvBIP,AOtCF,AkBCA,ADDA,AhBDA,AFAA,AcCA,ACAA,ALCA,AFFA,AIAA,AHAA,AOCA,ALAA,AEAA,AOoBA,C1BkBG,ASdkB,CAAjB,CGDF,AHDA,AWtBF,CnByCI,AWlBF,ACWA,AJJE,AQ9BJ,AEAA,CfqBE,CAAA,AYpBF,CQDA,CCCA,CZiCE,CWlCF,CvByCW,AoBzCX,AKoBA,CbcE,ATbA,CQEA,ARFA,CQEA,ALvBF,ACDA,AFAA,AQAA,AIAA,AHAA,AOCA,AIoBA,CzBqBe,CAAC,AYPd,ATbA,CGrBF,ACDA,AFAA,AQAA,AIAA,AHAA,Gd0CoB,AWlBlB,CXkBmB,CGpBnB,CQEA,CLvBF,ADDA,AQAA,AIAA,AHAA,Cd0CyB,AMzCzB,AiBAA,AlBDA,AQAA,AIAA,AHAA,Cd0C0B,AuBzC1B,CvByC2B,EyBrB3B,CzBqB8B,AyBrB9B,ElBrBA,CIwBU,AYvBV,AhBDA,CP0CkC,AuBzClC,CvByCmC,CAAC,CyBrBpC,CdGE,AcHF,CzBqBuC,AMzCvC,ADDA,AQAA,AIAA,AHAA,CHwBuB,ALvBvB,ACDA,AFAA,AQAA,AIAA,AHAA,CPAA,EP0C2C,AuBzC3C,CvByC4C,AuBzC5C,CvByC6C,AuBzC7C,GvByCgD,IAAI,CAAC,CAAC,GAAG,AyBrBzD,CAAA,CAAA,EzBqB6D,CAAC,CAAC,EO1C/D,CP0CkE,AO1ClE,CAAA,EAEA,CPwCsE,CAAC,CAAC,CAAC,CAAA;AWjBrE,AavBJ,ArBqBC,AgBtBD,ACAA,ALCA,AX2BI,AiB5BJ,ALAA,AEAA,CfiBA,EAAY,CJuBV,ACEA,CAAC,GWlBK,APIA,EDXW,ECWf,COJS,ARPD,CCWE,EOJE,GAAZ,CRPQ,CQOS,ARPT,OAAA,CJuBF,GAAR,CIvBU,OAAA,CAAA,CJuBA,MAAc,AIvBd,GAAO,EAAP,CAAZ;AQQM,ALvBN,AgBqCA,AEtCA,ADCA,AXiCI,APlCJ,AI6BE,ADCE,AW/BJ,ACAA,ALCA,AFDA,AT6BM,Aa5BN,AHAA,AODA,ALAA,AEAA,AOkDE,EhBpBA,ETcA,AM1CG,AiBAL,AlBDA,AQDA,AICA,AHAA,GWiDE,C1BTE,AUXF,AQ7BF,AQiDE,CHXF,ACrCA,AXiCS,APlCT,AI6BE,Ce7BF,AZkCI,AOnCJ,ACAA,ALCA,AX4BU,AiB7BV,ALAA,AEAA,CPyBW,AHMA,AM9BX,CN8BY,CIIC,CDVP,ALvBN,AgBqCA,AlBVc,CLYH,AKZI,CoB5Bf,ALDA,ACAA,ALCA,AMDA,ALAA,AEAA,CPyBiB,AcyBf,CDjDF,AZkCkB,AHLhB,AU9BF,ACAA,ALCA,AMDA,ALAA,AEAA,CT8BE,CELI,AHMc,AK/BpB,AYoBO,C1BqBU,ASVI,AJFX,CLYQ,AaNL,CAAU,ACnCvB,CDmCa,CbMQ,ASVT,CTUU,ACGjB,AQbqB,AJFA,CQMC,AHLzB,ETcA,CDHwB,AUXxB,CgBVK,C1BqBqB,AaNI,AafzB,GrBSD,CIEqB,CIIA,ARNU,CLYH,AaNI,ACnCtC,CdyCmC,ACG5B,AYTH,ACnCJ,CdyCoC,C0BrB7B,ChBUL,AgBoBA,C1BTqC,ASVb,ETUe,ACGlB,AQbW,CTUO,AczCzC,CAAA,mBAAA,CAAA,CAAA;AF0BK,AWXL,AEduB,ADCvB,AXkCI,ALlCJ,AFDA,AI8BI,ADAmC,AW/BrB,ACAQ,ALCL,AX6Bb,Aa7BR,AHAA,AOD6B,ALAV,AEAA,CIenB,CEduB,ALDL,ACAQ,ALCL,AMDQ,ALAV,AEAA,CIenB,CvB2BE,AQxCI,CRwCH,AYlBC,GXqBA,CYTK,CAAL,ALlCQ,CIwBD,AazBY,Af8BZ,AU/BO,ACAQ,ALCL,AMDQ,ALAV,AEAA,CMCI,ALDL,ACAQ,ALCL,AX6BT,AiB9BiB,ALAV,AEAA,CNoCN,ALlCE,AC6BwB,CAAC,CRc7B,AWnBI,AQ1BG,CV+BF,AO/BG,AEAA,CCAD,CPoCA,AGnCG,ACDF,AEAA,ClB6CJ,AIfI,CJeH,AWnBI,AazBG,ATAF,Cf4CJ,AO3CM,AC6BwB,CgB9BxB,AZmCV,ALlCW,AE6Bb,ADAqC,CGLzB,ACUA,AHLA,AU/BL,ACAQ,AhB8BH,CJeH,AWnBT,ACUE,AOpCK,Af8BM,AY9BL,AEAA,CEAO,AJAP,AEAA,CP0BO,AIzBL,AMDQ,CToCF,AJLY,AO9BlB,CSAE,Af8BnB,AY/ByB,CGCN,CxB4CG,AIfd,CJee,AoB7CD,CpB6CE,AYTI,AQpCN,ECAG,CrB6CE,AO3ChB,AH4BoB,AiB9BN,CdES,CKkCX,CAAW,CZSH,AYT/B,CZSgC,CAAC,GAAG,AO3CzB,AH4BP,CG5BR,CH4B8C,IJeA,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;AWlB9D,ALzBN,AiBAA,AXmCI,ALlCJ,AFFA,AI+BG,ADDkD,AK7BrD,AT6BU,Aa9BV,AHAA,AWoBA,CnBnBA,EG4BE,CVcA,ACEA,AO3CI,AMDN,AYmBA,CzByBG,AQfS,CAAR,GIMK,CWnCT,AlBDA,AYAA,AHAA,CH0BW,ALzBN,ACCQ,AMDb,EYmBA,CdMM,ACUF,ALlCY,CKkCD,ARNA,CmB7Bf,AXmCI,APpCJ,AYAA,AHAA,AWoBA,CdMiB,CAAX,AYzBN,AlBDA,AYAA,AHAA,EFoCoB,ALlCE,CDDtB,AMmCI,ALlCmB,AH4Bb,EE7BK,CF6BS,ELajB,EKbqB,CLa1B,AKb2B,EG5Bb,AkBkBhB,ClBlBkC,AkBkBlC,GrBUU,CG5BM,CAAhB,EkBkBA,CAAA,oBAAA,CAAA,CAAA;AdOK,ALzBH,AgBsCF,AExCA,ADCoB,AlBDA,AG+BjB,AW5BD,ACDA,ALCA,AFFF,AT8BS,Aa/BU,AHAG,AOIpB,ALDA,AEEA,EZHA,AiBDkB,AlBDA,AYAD,AHAG,CNqBpB,CR0BA,CWtBS,EWeX,CvBII,AuBJJ,ClBXQ,EOFG,Aa3BX,ADCoB,AlBDA,AcGlB,ACDA,ALCA,AEHiB,AHAG,AOIpB,ALDA,AEEA,CZHA,AiBDkB,AlBDA,AYAD,AHAG,CREpB,CaCA,CpByCS,AoBzCG,Af4BC,AY5Bb,AEEA,CDLiB,ADGL,AEEA,CImCd,ACvCoB,AlBDA,AUGlB,COqCF,APrCe,AEHI,ClB4CJ,AyB5Cf,ADCoB,AlBDA,ASAE,Cf4CN,AiBzCd,CMqCa,ARxCO,CUAtB,AJEE,AJCqB,CIDR,CdAb,ASCA,AEHiB,ClB4CE,AO1CnB,AiBDkB,AlBDA,AYAD,AIIjB,CtBwCoB,AuBJtB,ACvCoB,AlBDA,AUGO,AMCZ,CPJO,CREpB,AaCA,ALHoB,CMEpB,AFGA,CnBuCwB,AoBzCO,CpByCN,ACGjB,AoB7CgB,AFGM,CnBuCJ,AsBxC1B,EtBwC4B,ACG5B,AqB3CwB,ItBwCQ,CAAC,AO1CjC,CP0CkC,CAAC,CAAA,ECGzB,MAAgB;AWnBtB,ALzBJ,AkBHF,AZqCI,ALjCJ,AE6BE,AU9BA,ACDA,ALCA,AFFF,AT+BU,AiB5BR,ALDA,AEEA,AOqDA,EnBvDA,AG8BA,EVYA,AQzCF,CRyCG,E0BaD,CzBVE,AwBhDJ,AZqCQ,AHJN,AU9BA,ACDA,ALCA,AMCA,ALDA,AEEA,AOqDA,ChBzBA,CIhCF,AT+BU,COJC,AJxBX,CDDE,CAAA,AkBHF,AZqCa,AOlCX,ACDA,ALCA,AMCA,ALDA,AEEA,CPuBI,CXoBK,AyBUT,CD1DF,ALII,ACDA,ALCA,AFHJ,AQII,ALDA,AEEA,CPsBa,APIA,CQKT,AHJN,AIhCF,AT+BkB,AqBZX,CbiBY,AHJjB,CGIM,EDTF,Aa5BN,ALII,ACDA,ALCA,AX4BM,AiB3BN,ALDA,AEEA,ClB0Ce,AmB5Cf,ACDA,ALCA,AX4BmB,AiB3BnB,ALDA,AEEA,ClB0CgB,AM7ClB,AMkCsB,CNlCtB,EN6CqB,AwBhDvB,ALII,ACDA,ALCA,AMCA,ALDA,AEEA,AOcG,CzB4BiB,AM7CtB,AG8BA,AU7BE,ACDA,ALCA,AMCA,ALDA,AEEA,AOcG,CbiBsB,EYrC7B,AfiCE,CTe0B,AmB5CxB,ACDA,ALCA,AMCA,ALDA,AEEA,ElB0C0B,AmB5CpB,ACDA,ALCA,AMCA,ALDA,AEEA,CMNV,ECoBO,CThBH,ASsDF,CnBvDA,AMkCsB,CZWY,AYXI,AQlCpC,ALCA,AMCA,CrB2CiC,AwBhDrC,CxBgDsC,AwBhDtC,CfiCE,AO7Ba,CJiCS,CZWiB,AoB7CxB,ALCA,AMCA,CTgC6B,CZWH,AwBhD3C,AZqCwB,AOjCpB,AHDF,AEGE,ClB0CuC,AwBhD3C,AZqCI,CQnCF,ALCA,AMCA,CTiCgD,EYrClD,ALIwB,ADEA,EMNxB,ApBgCU,Ee7BR,ADEA,OMLF,CAAA,IAAA,IAAA;Ab6BK,ALzBH,AiBCA,AXiCI,ALlCN,AFUE,AIoBE,ADDF,AKhCoB,ATgCb,Aa7BP,AHDA,ERCA,AE6BA,AKhCoB,Ed8CpB,ACEA,CAAC,EQhBD,CAAA,Ge5BA,AXiCS,APxBT,AIoBS,AIjCW,AIGpB,AHDA,CRCA,AOHoB,CPGpB,EWAA,CMCA,AlBSA,AIoBc,AQ9BF,CZUA,AGmBZ,CAAA,AM9BA,CSEA,AVJoB,ACER,CGCZ,CZUA,AGmBA,AKhCoB,CPGpB,AG8BS,AQ9BY,CXArB,ADUqB,AIoBA,CDDrB,CTcI,CO3CJ,CMkCI,ACrCgB,Cd8CpB,Ac9CoB,CJiClB,CGI0B,EEnC5B,EN8BI,AM9B0B,CRC9B,AMkCI,MJLJ,EAAgB;ANHhB,ASAC,ALzBF,AkBJQ,ADIP,AXkCG,ALnCL,AFUE,AIqBC,ADDC,AWlCK,ACIL,ALHK,AXiCF,Aa9BL,AHDA,AOGE,ALNK,AECA,AOoBT,CnBpBA,CJ6BE,CSRA,ALrBG,AGgCH,CTkBA,AwBlDO,AhBiCL,AWlCK,ACIL,ALHK,AMKL,ALNK,AECA,AOoBT,CbgBI,ERTE,CLoBF,AGlBF,AqBzBA,AlBSA,AYVA,AHDA,CZ2BA,AsB7BO,ALDA,ACID,ALHC,AMKD,ALNC,AECA,CMAA,AjBGT,AYJS,ACIA,ALHA,AMKA,ALNA,AECA,CNsCE,AJLA,CAAC,CFjCG,AiBIb,AlBSA,ADoBW,Aa9BX,AHDA,AWkBF,CDpBS,CzB+CE,AqB5CP,ACEA,ALNK,COML,AhBFJ,AFWI,AUdK,AEIL,AHDA,AWiBJ,CDpB+B,CtB6B7B,AI7BG,ACGL,AYJS,ACIQ,ACEA,ALNQ,CjBgDV,AGlBb,AsB7BO,AhBiCL,AOjCsB,ACDjB,CDCA,AGAA,CCDmB,CIMxB,AlBSA,AGmBkB,AWlCb,AFKL,AHDA,CSEA,AlBSA,AYVA,AHDA,AIH0B,CEGP,ACEA,CtB0CF,AqB5CG,ACEA,AHLf,CnB+Ca,CGlBpB,AqBxBE,AlBSA,AGmBuB,AS7BvB,AHDA,Cd+CG,AMlDQ,AiBKX,AlBSA,AYVA,AHDA,Ef4CsB,AGlBxB,AkB1Be,ACEA,CtB0CU,ACGzB,AMlDa,AmBoBf,C1B2B4B,AwB1CxB,AlBSA,AYVA,AHDA,AWiBJ,CnBpBe,AcGiB,ACEA,CtB0CF,AO/C9B,ADcU,AGmBN,AS7BM,AHDA,GSEC,CxB0CuB,AMjC9B,AYVA,ClB2C+B,AqB5CG,ACEA,AIetC,C1B2BoC,AqB5CG,ACEA,AIevC,C1B2BqC,AwB3CnC,CxB2CmC,AGlBnC,CGfa,AYVA,EGDE,ACEA,EhBQf,AYVA,AHAE,CMA2C,ACEA,CDFC,CAAC,EAAD,ANAxB,EMA6B,CCEjD,CDF4C,AND9C,CMC6C,EAAW,CAAC,AKiB3D,CAAA,CLjB0D,AKiB1D,ELjB+D,EAAL,CAAX,EAAqB,CAAC,EAAD,EAAK,EAAL,CAArB,CAA3C;AlB2BA,AUSE,ALpCgB,AC+BlB,AWlCK,ANIP,AT8BM,AiB5BJ,ALNK,AECA,EXEa,ER6CpB,AoBhDO,AEML,ALNK,AECA,CnB+CN,CaTG,EZYF,CQjBK,AWlCA,AEMD,ALNC,AECA,CCDA,AEMA,ALNA,AECA,ChB6BE,AK3BW,AMCpB,CNDoB,CH+BT,EJiBF,AQjBP,Aa5BA,CTiCY,AJLA,AQlCP,CJuCQ,CCnCf,AQEe,CrB6CF,AOhDO,AMCR,AT8BN,AYlCkB,ChBmDV,AQjBZ,AWlCK,AHAA,AECA,CXEa,AC+BD,CJAC,CelCQ,ADCA,CGKP,CrB6CF,AErBV,AmBxBa,AHLf,ClBkDa,AErBX,CK3BW,AYHY,AfkC1B,CG/Bc,AC+BlB,AWlC+B,CPuClB,CZYS,AmBnDjB,AEMQ,CrB6CU,CAAC,Aa/C1B,CQE8B,CrB6CF,AErBnB,AW1BsB,CX0Bb,GFqBc,AErBvB,CFqBwB,AErBX,AmBxBc,CrB6CF,AqB7CG,CrB6CF,CAAA,GqB7CpB,CnBwBO,CAAA,CmBxBuB,CAA3C,GnBwBoB,CAAM,QAAnB,EAA6B,KAAK,QAAlC,CAAP;AACD,ASAD,ALzBF,AkBoCC,ADzCQ,AXsCc,APlCd,AI+BP,ADDE,AY/BD,ALAC,AFAF,AT+BK,AanCE,AHIL,AOGA,ALHA,AEFK,AO0CP,EdbA,AFKA,CPPA,CHqBA,ACEA,AM9CF,AiBLS,AlBIA,AYLA,AIOL,AHLK,ClBkDN,EWrBD,AcaA,CdbA,AFKA,AMhCM,AFAN,ACAM,AEAA,ASwCN,CF3CO,AlBIA,AI+BP,ADDO,ASnCA,AIOD,AHLC,CKDA,AlBIA,AYLA,AIOA,AHLA,EFEG,CHAV,AGAW,CXCJ,AUDL,CHmCmB,AKvCd,AIOL,AIqCF,CnBtCF,ASFgB,AFCZ,CF0BF,AN1BsB,CM0BtB,AY9BO,AdmCP,AQpCyB,AIOV,ALHb,AEFK,AOkBF,ChBgBL,CGGyB,AInCP,COHU,AXsCF,AEnCP,AIFO,CbGnB,AQAL,AIL2B,AHIT,CDClB,CQEmB,AHLd,CKDyB,AfkC9B,Aa5BoB,ALHA,CL2BtB,AFKA,AOhCuB,CHCrB,ACDA,AWgBG,CZfH,AYeG,CdWL,AFKA,AKhC2B,Cf8ClB,AsB3CM,CLHG,CHChB,Cd6CF,AsB3C8B,CRFtB,ACDuB,AEAA,CFAC,CGJH,CAAA,AQoBxB,CThB8B,ASwCnC,CdbU,AY9BsB,AXsCX,AShCe,ALHA,COHJ,AXsCa,AEnClB,AOGU,CZ6BrC,EKhCwC,CH2BxC,ACQqB,AInCH,CJmCG,AKvCI,AIOV,CVwBQ,AM/Be,CJKpC,AILuB,CMCG,AFMiB,CENJ,ANDA,AIOK,CENlB,ANDH,AIOsB,CJPxC,CMCqC,AVItB,AQEwB,CENlB,CAArB,AFM4C,ERHnD,ACAqD,CAAC,AOGR,CAAD,EAAY,CAAC,CPH/B,EOG8B,EAAM,EAAN,CAAZ,CAA3C;AVyBA,AL1BJ,AiBJS,AXqC2C,ALtBlD,AFVO,AI8BL,ADDD,AWhCC,AJCE,AEJG,AHIL,AEAA,GR2BF,CRsBA,AuBpDO,AlBKA,AYNA,EFIH,CHkCU,CbYZ,AYnBI,AQ5BA,ALCA,AEAA,COHC,AXqC6C,APhC7C,AYNA,CMCA,AlBKA,AYNA,CVgBP,AEoBS,AMhCD,ChB8CF,AgB9CG,ACAC,CjB8CH,AYnBI,AM/BJ,ADII,CJkC8C,CPhClD,AI8BM,CVcH,AYnBI,AM/BS,ClBkDZ,AwBjDJ,ChBeP,AFVwB,AUFpB,CJ2BF,AJfU,ASZV,COHwB,ANDC,ClBkDZ,AYnBI,AQ5BjB,AJCgB,ADAC,AEAA,CjB8CH,Ae9CI,CFkCN,ALtBd,AFVO,AcHc,CPmCjB,CbYe,AwBjDZ,AhBec,CSZE,CjB8CF,ACGjB,AejDoB,ACAA,CjB8CF,AgB9CG,ADAvB,Cf8CoB,AUdT,CTiBb,ASjBa,AKhCe,GEAT,CDAD,AEJS,CAAA,AHIK,CAAC,AEAA,CDAC,CNgCzB,CACL,COjCiC,CAAC,CFAV,CCAY,AEJjB,CRqCd,AMjCgC,AEJL,CAAb,AHImB,EGJH,ADIpB,CCJI,CAAhB,CRqCH,AMjCc,CNiCF,EMjCkC,CAA9C,ENgCK,EAEL,AKlCmD,CAAC,ILkC/C,EKlCmB,ILkCxB,CAAY,MAFP,CAAP;APJF,ASAI,AL3BN,AkBJE,AZsCG,ALvBH,AFTO,AIgCN,AUnCG,ACCJ,ALAG,AFLI,ATmCH,AU9BF,AOED,AHFC,AOeJ,EvBYE,AsB/BA,AJIA,CX8BA,CVgBA,AM5CO,AQPA,AYoBT,C1B+BG,CoB/CG,EnBkDF,AEtBF,AKhBA,AOXM,AIAA,ChB2BN,AGzBO,AQPA,CPKT,AkBJE,AnBMO,AQPA,ATmCC,COHC,Aa/BT,ALGQ,CAAC,CZYT,AaXA,AKeF,CpBbS,AeFP,AhB8BY,CJmBH,AInBI,COHT,AL3BN,ACYI,AkBGJ,CpBbiC,AQPxB,CXgCP,AI3BF,CNiDe,AEtBb,ASAiB,ANzBV,AD4BC,CoBlCR,ALGI,ANJqB,CWCzB,AVImB,AIAjB,CP2BE,AJfF,AMjBK,ACKa,CPYlB,AYbkB,ACCpB,AFAqB,CEArB,AhB8BsB,EoBlCtB,CxBqDqB,AOrCnB,AOZA,CdiDoB,AOrCpB,CiBhBF,AVI2B,CMA3B,CKeF,CzBkC4B,AOrCxB,AkBGJ,CzBkC6B,AoBjD3B,AhB8BI,CJmBwB,AOrCpB,AOZuB,CV8BE,AU9BD,CdiDF,AmBlDG,CAAC,CjB4BlC,AKfE,CiBhBK,ACmBT,CzBkCoC,AcjDP,AWe7B,CzBkCqC,AEtBnC,CFsBoC,AwBrDpC,CjBgBa,AOZ2B,CdiDF,AwBrDlB,CLGA,ACCpB,EbWA,CPsC0C,AwBrD1C,ALG6C,CnBkDF,CAAC,AwBrDV,CxBqDW,CAAA,CEtB7C,CAEC,CAFD,CY3BqD,CAAC,GWexD,CNhB4D,AMgB5D,CNhB6D,ALCnB,AWe1C,CXf8D,KAApB,CAA0B,CKD9C,ALCoB,EAA6B,CKDC,CAAlE,WLC8E,CAAC,KAAd,CAAoB,MAAjD,CAAb;AH4BxB,AL5BsB,AkBJzB,ADIE,AXmCD,APhCM,AG6BP,AWhCI,ACCF,APLK,ATmCD,AahCJ,AHEA,AEDD,AECG,EZDqB,AEgCzB,CINA,CbsBA,ACEA,AuBlDE,AlBGK,AQPA,CbsDN,AWxBC,CQ1BE,ADCA,CV+BJ,CgBpCA,AhBoCA,ASjCM,AHEA,CSDA,AlBGC,AeFA,APLA,CUIA,AlBGA,AQPA,CFgCE,AL5BgB,AaAjB,ADCA,CZDiB,AaAhB,Af+BC,AahCR,ACEO,CMLT,CDIE,ANDU,CN6BC,AY5BD,CCJZ,AnBOO,AeFL,CZ+BF,AY/Be,APLR,CLoCP,CH7B4B,AD4BX,Ac9Bb,CP2Bc,AahClB,AXAyB,CROlB,AeFL,APLK,ACKY,CKDf,ALCgB,AIAD,CP2BE,APGA,COHZ,AL5BgB,AEgCzB,AJDsB,CmB/BT,AJAS,CR4BE,AL5BC,AQCvB,Cf+CI,AShBN,CJDU,AU9BgB,CSDd,CxBgDZ,CwBhDwB,CjBAC,CAAA,AF+BM,AU9BD,CAAC,CIAC,CKDpB,ALCqB,CV+B1B,CehC2B,AJAC,ALCT,CKDU,CpBgD5B,Ce/C8B,CV8BhC,CLiBa,AmB/CA,CV+BnB,AJD0C,EICnB,AU/BoB,GCDrB,GAA2B,ELCE,CAAC,IAA1B,AIA8B,CAAC,KCDK,CAAC,CDC5C,GAAgD,EAA/D,ICDkB,GAAsD,IAAI,CAAC,EAA7E;AjB+BJ,ASFI,AY5BA,AhBYF,AFTK,AIgCP,ADHE,AWhCC,ACCD,AhB8BM,AahCJ,AHEF,AOEF,AHFG,AO6CH,EvBhBA,AOKA,AYhCA,ErBgDA,AOvCE,AFTK,ASFL,ESDE,CE8CJ,C1BEE,AGlBF,AOKA,ADHM,AiBcN,CvBhBA,AKlBM,AFTC,AIgCP,AWlCO,ANAD,CPWC,AFTA,AYJC,AHED,CH2BE,AY5BD,CxBgDF,AwBhDG,CxBgDF,AShBI,CSjCC,CbgCC,AahCA,AQ+Cb,CdlBI,AHIU,AY/BZ,ACEF,CDFe,ACEf,CnB2BA,AKlBE,AEuBF,AKlCE,AWaG,CvBgBL,ASFiB,AFOjB,ALJQ,COHJ,AY5BA,ANDA,CMCc,AhBYA,ACoBC,AM/BD,Cf+CF,AwBhDZ,AlBGG,AD4Ba,AahCA,ElBiDF,CAAA,AwBhDI,AhBYA,AFTS,CeF7B,AhB8BsB,AiB5BxB,Cb6Bc,AJDW,AahCD,AIIxB,AIWK,CjBkBqB,ASjCD,AQepB,EFdsB,AlBGpB,CkBHqB,AnB+BpB,CJoBC,CShBT,AQpCoB,AIIpB,CPF+B,CdkD/B,AQnBc,AM/BkB,CLkChC,ADHkC,ASjCD,AIIjC,CnB2BA,AuBhBK,CFdD,AE8CJ,ClBlCsB,CLkBtB,AKlBsB,AUbe,AHEnB,CGFoB,AHEA,EN+BxB,CAAZ,ESjCkB,AHEF,CAA0B,CPW1B,AEuBlB,AKlCkB,AOElB,CdS+B,AOX7B,CPWgB,ELkBlB,AKlBkC,CAAhB,CAAhB;ALkBF,ASDG,ALXH,AkBtBE,ADKE,AXmCJ,ALvBE,AFTK,AIgCL,AWlCA,ALFD,AFDC,ATiCK,AahCH,AIIF,ALHF,EJmCA,AInCA,ETYE,AFTK,CMuBE,CY1BL,APAJ,CAAA,CjBgDE,ACGA,AEtBF,AsBlCQ,AXGF,CNcA,AFTC,AeFA,AhB4BD,AiB1BC,CdSA,AFTA,AYJC,CN6BC,ALXT,AiBjBQ,AXmCR,AHAS,CVaH,ACGA,AuBnDG,AXmCT,CbaO,ACGA,AEtBP,AsBlCa,CPID,CbgCC,AahCA,CjBoDH,AEtBV,AsBlCgB,AjBiBd,AEuBY,AWlCZ,ACEA,ALHF,CjBgDW,ACGA,AoBlDI,ACEA,ALHf,CjBgDY,AkBjDR,CVaY,CLiBhB,AqB7BI,ANDc,ClBiDH,ACGA,AuBnDG,AXmClB,ACrCE,AQKA,CtB6Cc,ACGA,AuBnDZ,AXmCJ,APhCO,AIgCE,CVaO,AO/BhB,ACLoB,AEuBC,AIrCA,CPmBT,AchBV,CpBkDiB,AwBxDX,ADKc,AlBGe,AYJf,CAAC,CjBoDF,AKhDd,AeFkB,AJDzB,ChBmDsB,CAAA,AiBpDJ,COJF,ADKW,APA3B,CQLiB,ADKW,AXmC5B,CHAS,AWlCqB,AHFD,ELoC7B,AHAE,CexCc,CPIiB,CXkBjC,AkBtB4B,AjBiBR,AUbc,CMC9B,AhBYgB,CDKU,AchB5B,CHFgB,EOJF,ARKhB,EQLsC,EZwCtC,ALvBgB,CKyBf,ALzB4B,CKuB7B,ALvBgB,EAAgB,CAAhB,CAAd;AIiBE,ALZJ,AkBrBI,ADKD,AhBYD,AFNA,AI6BD,ADJC,AY9BA,APHE,ATiCI,AahCJ,AHCF,AOGA,ALHA,ASaJ,GhBoBE,CVeA,ACGA,AOvCE,AFNA,ASNA,AWaJ,C1BmCG,ACGA,AuBtDC,CVCE,EPkBJ,AEeM,AQ/BA,CTYA,AFNA,AeLC,ANDD,AOGC,CdSA,AFNA,ADyBC,AahCA,AHCD,CH4BE,AE9BD,CAAC,CPkBT,AEeW,AQ/BA,ASab,CRdc,CVaV,AFNA,AYPW,AHCX,CH4BE,ALXF,AchBA,ANDW,AOGX,AIUJ,CjBkBiB,AY9BA,AhB8BA,AiB5BA,ALHb,CTYa,AFNA,AGyBb,AJAc,COHC,AK5BA,CR+BC,AShCd,CJDA,CPmBF,AFcM,AahCY,AHClB,CRiBA,ACLA,AHmBmB,AU/BD,CH4BhB,AE9BiB,ERQE,AeLrB,ACEA,CfcA,ADXsB,AYPA,CXkBtB,AWlBuB,CGEE,EKY7B,CnBII,AmBJJ,CRdsB,AHCC,CRiBb,AchBwB,EHFC,AHCb,CDFc,CAAC,ACEX,CWa1B,CpBPiB,AYPsB,AQcvC,CpBPwC,AYPA,EGEpC,GHFkB,CXkBlB,AOnBmB,CRQN,CAAb,CQR6C,EPmBzB,AFcd,IEfR,CAA8B,AmBHhC,CnBdE,AmBcF,CAAA,IZf8D,CAAC,SAAxC,GAAoD,KAAI,CAAC,SAA1E;AX+BF,ASAC,AajCC,AZ0CJ,ALzBE,AFNA,AGyBE,AWjCH,ACGC,ALFF,AFDI,ATiCG,AahCH,AHCA,AOGF,ALHE,AEDH,ENsCD,AGtCA,EhBkDA,ACGA,AOxCE,AFNA,EQRE,EECJ,Cb6BO,AKhBD,AFNA,AeLC,ALFP,AMIO,CdSA,AFNA,AYPC,CLsCR,AJNS,AKjCD,AGEC,CJqCT,ACvCS,CCEE,CGDC,CZOV,AYPW,CVaX,AFNW,AeLX,ACEA,Cb4BE,AY9BW,ANDA,AOGA,Cb4BC,AOhChB,ACCI,CTYY,AFNd,AUPF,ACCiB,CCDb,CLsCJ,ALzBE,AMdE,CDuCJ,AP/BmB,AYPC,ETgChB,AKjCiB,AQKnB,Cb4BqB,CHzBA,CAAC,AYPA,AIIC,ALHrB,Cd4BF,AkB3BA,AHFuB,ADEnB,CjBgDE,ACGF,AYfN,AGtCA,CVOE,AGyBE,CNHyB,AkB3BA,ANDd,CfiDf,ACGA,AYfA,AJN8B,AOhC9B,ADCe,AOGe,Cb4B1B,AQ9BO,Ed2BT,CkB3BgC,AHFd,CJDc,CAAC,CICC,AIIlC,CPHS,CAAa,AEClB,CjBgDI,ACGF,AYfA,AIpCY,CCFoB,ADCpC,CDDJ,AEAyC,AHCd,CdoDR,AoBnDjB,AND0B,AEEtB,CJmCN,AErCwB,CfiDD,AcnDF,CDuCC,CAAW,AKtCb,AHCY,CFqChC,ACvC+C,AGIpC,IFFyB,CAAC,GEE/B,CAAc,CAFhB,EAGE,CHLsD,ACE5B,CDF6B,ACEf,CAAnC,EAAsC,AEGtC,GFHyC,CAAC,CAAJ,AEA7C,CHFiB,CGMf,CFJmD,CDFgB,GGM9D,CFJkD,CDFgB,ACEf,CDFgB,GGE1E,IFAqD,CAAc,CDFnE,ACEO,CAAP;AZ6BF,ASAD,AajCG,AjBiBF,AEuBF,ADJG,AY9BD,ALFA,AFDE,ATiCC,AahCD,AHCD,AOGD,ALEC,ASsCH,EhBRA,CEfA,CTQE,AKhBA,COdA,CDAE,AICA,Cb0BA,AqBkBJ,C1BME,ACGA,ASjBF,AgBQA,ClB/BM,AEuBN,AWlCO,ALFA,AMIA,CGRC,AjBiBD,CMdC,AICA,ClBkDA,ACGF,AExBI,AW9BD,AICA,CjBqDF,AExBI,AEGA,CGnBT,CiBjBW,APIT,AQ4CJ,CDhDc,AJMZ,ALFA,AMIA,CdSY,AaXC,ALFA,AMIA,CZgCf,AQpCe,AQYV,CDhBG,AjBiBN,AEuBF,AIrCI,CECF,ChBkDe,AgBlDE,CfqDH,AatDG,AICA,ElBkDC,ACGF,AwBzDI,CxByDJ,AoBnDhB,ACEA,CNJsB,CSJpB,ACgBC,C1BsCmB,AqBhDE,ACEA,AIQrB,C1BsCoB,AGrBvB,AsBjCyB,AfwC3B,CPP4B,EHqBA,AUd5B,CWlC+B,ACEA,CtB8CD,AgBlDX,ChBkDW,AgBlDG,AFDD,CEC9B,AFD+B,AICd,CAAA,AQYd,CVZ+B,AU4CpC,EvBfE,CkB3BA,ACEA,CnByBsC,Ca7BC,AFDtB,CJqCnB,CQpCe,CJD4B,AICf,KFAQ,AEAJ,Cf6BS,Aa7BS,AEAjB,Cf6BO,Aa7BtC,Eb6BwC,Aa7BW,AEAzB,CAAS,CAAT,EJD4B,CECE,AFDD,AIChB,KAAI,CFA3C,AEA4C,CJD3B,CEC+C,CAAhE,CFDiE,CECE,AEA5B,CAAW,CAArC,EFA0D,AFDF,AIChB,CJDiB,GECK,CAAC,AEAnB,CAAC,CFA1D,CFDE,CICmD,CAAS,CAAT,GAAa,KAAI,CAAC,KAAL,CAAW,CAAhE,CAAX;Af8BA,AI/BI,AkBFF,ADGL,AXuCD,ALxBE,AFRA,AI6BF,ADHC,AWjCD,ACGE,APHE,ATiCE,AahCH,AIID,AHJF,ENsCA,AOvCA,ADCA,CV2BA,CF7BQ,ACgBN,AFRA,CcPF,CAAA,ANAI,AKCJ,CAAA,CnBmDE,ACEA,ASlBF,CHrCQ,ACgBF,AFRA,AeJC,ACEA,CnByBC,AI/BA,ACgBD,AFRA,CHuBE,AUST,ACvCQ,CdoDF,ACEA,AExBI,AUSV,ACvCS,CdoDF,ACEA,ASlBP,ALHW,CLmBH,CGtBA,AKfN,AFRA,AcPF,CjB8Bc,AGvBD,AI6Bb,AUpCA,ACGE,ACEA,AHJF,CnBmDW,ACEA,AoBnDI,AhB8BT,AiB5BS,AHJf,ClBqDY,AOvCG,CMfX,CROF,AI6BF,ALHkB,CJqBH,AMvDP,AMwCR,CZegB,AYfhB,ALxBmB,AMfA,CbsDH,CMvDe,AFkCzB,CchCN,CnBmDoB,AabpB,AOvCA,ACGE,ACEA,CnByBM,AKfO,AaZU,CFFzB,CnBmDuB,AOrDf,AMwCR,ALxBE,AYfF,AEK2B,GDFG,CrBiDH,CAAC,AGtBI,AmBzBA,CRLA,CAAC,CdoDF,CAAC,CGtBI,AUS/B,ASlCH,CnByBmC,AkB3BZ,AFFzB,CCDA,ACGuC,CRoCvC,AQpCE,CrBiDmC,AcpDlB,CdoDmB,AabtB,AQpC0B,CrBiDJ,CGtBN,AW9BW,CX8BC,EAAxC,AkB3B2C,ElB2BC,MkB3BN,CAAc,CAAtD,APHsD,CAAC,OAAtC,GAAgD,KAAI,CAAC,OAApE;AX+BE,ASAN,AL/BQ,AkBFF,AZ0CJ,ALxBA,AYfA,ACGA,ALFA,AFDE,ATiCC,AiB5BH,ALEA,AENA,AOWJ,EdkBE,EXwBA,AMvDQ,ACgBN,AkBHJ,CzB0CG,CatDG,CF8BJ,CZsBE,AGtBI,ASAN,AajCM,ATIA,ACMA,AENA,CZFE,AMwCD,ALxBD,AYfC,ACGA,ACEA,AHJA,CZFC,ACgBD,CMfC,CdoDF,AyBvDI,AXGD,AKCC,AOWZ,C1BwCS,AGtBG,AsBjCC,ATIA,ACMA,CjB6CH,AGtBG,AUST,CLxBA,AkBHJ,ClBGe,AYfX,ACGA,ACEA,CtB+CU,AYtBZ,ACSe,AOvCA,ACGA,ALFb,AMIa,AHJA,CP6Bf,AajCU,AXGN,CNeF,AQde,ACMf,CQVe,ALGf,CPuCiB,AOvCA,ANAD,AGOC,CduBb,AI/BE,ACgBW,AYfjB,CjB8BkB,CiB9BE,CR8BtB,AL/BgC,AkBFtB,ALGR,ADCQ,CnBmDW,AyBvDf,AZ0CS,ALxBQ,AWdC,ChB6BA,AKfA,AYfC,ADCvB,CP6BF,ACSE,ASlCA,CtB+CsB,COrDhB,ACgBN,AaZA,AKSJ,CLT+B,ACEA,AIO/B,CNZgC,CpBoDF,CAAC,AcpDE,CAAC,COGE,ACEA,CtB+CF,CAAC,AYtBxB,AQ9BP,AMYJ,CAAA,CNZwC,CjB8Bd,AkB3BK,APHX,AQKhB,CnByBsB,AkB3BgB,CrBiDF,AYtBtC,AS3B6B,CrBiDU,AcpDE,CdoDF,AYtBjB,AQ9BqB,ACGA,CAAd,CAA3B,EAA6C,ClB2B3B,CAAa,CAAb,CiB9BlB,CjB8BkC,AkB3BgB,CDHC,CjB8BjC,CAAd,AW9BgD,CAAC,AYYzD,CLTiD,AKSjD,CNZ4D,ACGA,AKS5D,CLTiD,EAAc,CAAd,APH7B,COGhB,EAA+D,APHD,GMA9D,EAAoE,ACGA,APHF,CAAC,GMAnE,CCG+D,CAAW,CAAX,APH7D,EOG2E,CAAd,CAA/D,EAAiF,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAjF,EAAmG,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAnG,EAAqH,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAArH;AlB4BG,ASAH,AL/BM,AkBFH,ADGL,AXuCE,ALxBA,AFTA,AI6BA,ADFF,AY9BE,ALFE,AFDA,ACAH,AOKC,ALEE,AENF,EKDF,AfiCA,ETmBA,ACGA,AMxDQ,ACgBN,AFTA,CN8CD,CcpDG,CUAJ,AfiCA,CGHM,AY9BN,AdmCM,ADFN,AUhCM,CZFE,AMwCD,APjCD,AeHC,ACEA,AHJA,CZFC,ADOD,CESE,AQdA,AFDD,AGOC,CTQC,AMfD,AKCC,CP6BC,CCST,AHJU,CGIC,ALxBX,AFTA,CMwBY,AJfA,AFTD,AeHX,ACEA,CELF,AdmCe,ADFf,AY9Be,APHX,AQKW,AHJA,CKDf,AXuCE,AJNF,AOhCI,ACMA,CLuBF,AI7Be,ACMA,CHPA,CF8BE,ACSA,ALxBD,CgBflB,AhBemB,AEoBjB,CWhCA,ALFE,AMIF,CfNM,AMwCN,ASlCoB,CELtB,ALCU,CAAc,CZFU,ACgBhC,AFTA,AaLA,EVgCF,Aa5B2B,ALEvB,CXDuB,AWErB,ChB+CE,CMxDA,AEkCR,CKjC8B,CbuD9B,AavD+B,CUAzB,APQK,EKHW,CAAc,CELpC,AVAiB,AQKf,EELkB,AlBMlB,AgBDqC,CRLA,CGQjC,ChB+CI,AQtBV,AQzBoB,CADhB,CKFwC,CLItC,EhB8CiB,GgB9CZ,EKJ4B,CRLa,AQKC,CRLA,AQKnD,ILII,CHTW,AGSG,CAFhB,EHPyD,AGUvD,KHV2D,AGUtD,CHVuD,IGO9D,CHPA,CGWE,KAAK,MAJP;ALwBA,AL/BI,AkBFL,ADGD,AXuCD,AHJC,ADFA,AWjCA,ACGA,ALFC,AFDC,ATgCA,AajCH,AIMC,ALOC,AEXD,AOoCF,GbDA,CbiBA,AOtDQ,AGoCN,Ce7CA,CXUE,CYqCJ,CzBkBE,AuBvDI,AJAA,ADCA,AOoCN,CnBtCQ,AiBCD,AfiCA,AY9BA,ACEA,CfNC,CK+BC,AE9BD,ATgCC,CJuBD,ASpBE,AInCD,CJmCE,AUnCA,ADCA,CKDC,AEqCZ,CdPI,CHGF,AY9BA,APHE,AQKF,AHJY,CVgCC,AWjCb,ACGa,AhB6BX,AiB3BW,AIKV,CdoBW,CQ9BC,ANAD,CUAT,AnBgCW,CJuBD,AWzBb,AY9Be,AfiCjB,AUhCiB,GlBsDC,AMxDZ,AcIN,AhB6BoB,CAAC,AqBtBlB,CAAA,CnBX6B,CNwDV,AkBtDV,CnBoDN,ACEiB,ASpBvB,ASlCyB,CTkCC,EVkB5B,ACE4B,AMxDpB,AOCqB,ATgCX,CShCY,AQK5B,CrBkD4B,AqBlDE,AHJlB,ClBsDgB,AIvBG,Ac/BA,AOS5B,CFVH,AEqCF,ChBFE,AInCc,CUAoB,ALCtB,CTkCuB,ALHA,AiB3BA,AHJnC,CLDmC,ATgCC,ELqB5B,EsBhDsB,CAAW,CAAX,CtBgDT,AKrBL,CiB3B4B,CAAd,CjB2BgB,AiB3B9C,CZ8BmC,CY9Ba,CRLA,CAAC,GQKI,CRLvC,GAA0C,CTgCV,AiB3BE,CjB2BF,AiB3Ba,CAAX,ERLY,AQKE,CRLD,AQKb,CAAhD,EjB2B8C,AiB3BoB,CRLhE,ATgCoD,IiB3BiB,EjB2BrE,GiB3BgE,CAAW,CAAX,EAAc,CAAd,CAAlE,EAAoF,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAApF;AnByBE,ASCD,AL/BK,AiBCJ,AhBcF,AFRA,AI6BE,ADFF,AWjCE,ACGH,AhB6BG,AUhCJ,AOKE,ALOD,AEXC,EJDF,CMRA,AJEA,CVKQ,ACeN,AFRA,CMsBA,GZyBA,ACGA,AkBvDI,CZFE,ACeF,AFRA,AG2BC,AMjCP,AOKO,CnBwBC,AI9BA,ACeD,AFRA,AI6BC,AKnCR,CZ6BS,ASCA,AY9BA,AdmCA,AUnCA,AfgCA,CLqBH,ACGA,AE3BI,AgB5BA,CnBoDH,ACGA,CAAC,CE3BA,ASCK,AJhBX,AFRA,AaLW,ChB4BC,AKfD,AFRA,AG2BX,Aa5BA,CrBmDS,ASrBP,ADFW,AJDX,AiB3BW,AHJb,CCDE,CVmCa,AUnCA,ALAjB,CH8BkB,AY9Bd,AnBgCc,AUhClB,CfqDe,AwBrDI,CxBqDH,CYvBK,AQ9BjB,AEKF,CVyBO,AL/BD,AFiCc,CAAC,CLqBH,ACGA,AW1BI,AG9BxB,CfqDqB,AGxBb,AI9B0B,ENyDX,AQvBrB,AMjCF,CNiC4B,CAA1B,AJDgB,CLqBQ,AOtDlB,AiBCJ,AhBcF,AFRA,CLkDyB,AO1CG,AFRA,AG2BC,CToBH,ACGA,AE3BI,AMI9B,AJD8B,EICE,CToBH,ACGA,AQvB7B,CRuB8B,AIxBI,CFHA,AKflC,ACmBmC,AJDA,CFHA,AMInC,CDnBoC,AOdtC,CfqDoC,ASpBI,CToBH,ACGA,AQvBnC,CToBmC,ACGC,CAAA,AQvBK,AJDzB,CFHc,AMI9B,CNJ0C,CEGE,CC1B5C,EHuBE,AGvB4C,CD0BE,CFHA,AKfZ,UFRU,GD0BE,CAAA,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAA1C;AFFE,ASCF,AL/BI,AkBFN,ADGE,AXuCJ,ALzBI,AFRA,AI6BE,ADFJ,AWjCC,AJCD,AFFE,ATiCA,AajCJ,AHCE,AOKA,AIIJ,Eb8BE,AKxCA,ElBsDA,AOtDQ,AmBUV,C1B4CG,CQvCG,AFRA,AYPJ,CAAA,CjByDE,AE3BI,AsBhCA,AfsCA,AMlCA,CTFE,AkBFD,AhBoCA,AMjCA,AOKA,CfNC,AOAA,CF+BC,AY9BA,AXuCT,ALzBQ,AFRA,AD0BC,AqBvBX,CzB+CQ,AYjBN,ALzBS,AFRA,CLkDF,AE3BG,AOMA,AMlCC,CfuDH,AE3BG,AsBhCC,AfsCD,AgB1Bb,CdqBM,CHGF,ASlCF,AHCE,AOKA,CrBmDU,AuBxDR,AhBcA,AFRA,AG2BW,ASlCf,AHCe,AOKA,CVyBC,AY9BA,CZ8BZ,AI7BF,AX+BE,CoBnCG,AjBiBU,AFRA,AI6BX,CetCa,AZ0CnB,AHJkB,AMlCC,Cb4Bb,AUUN,ARPoB,CFHA,AW9BC,CNejB,AFRA,AQPkB,AQMpB,ErBmDmB,AMzDb,AEkCN,AJDsB,AUhCtB,CZ6BsB,AEGC,AajCzB,EjByDwB,AMzDY,AMwCpC,AJN2B,AiBxB7B,CRVE,AQUF,Eb8BE,CZiB4B,AuBxDxB,CvBwDyB,AMzDrB,AEkCwB,CgBpC9B,ApBmCkB,CmBhCc,CvBwDF,AwB3DG,ACYrC,CzB+CmC,AazD7B,ATiCgC,AqBvBtC,EFTM,AVDkC,CX8Bd,CAAA,AEGgB,AajCxC,CjByDsC,AIxBG,CJwBF,AYjBvC,AHJM,CTqBiC,IQvBrC,CNJkB,CAAa,AEGb,CFHA,CuBpBtB,CvBoBsC,AEGgB,AqBvBtD,CvBoBuC,AuBpBvC,EvBoBsB,CAAd,AEGkD,cAAA,CAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhD;AFFC,ASCF,AL/BK,AkBFJ,ADGD,AXuCD,ALzBE,AFRA,AI6BC,ADFH,AY/BJ,ALDM,AFFE,ATiCF,AajCF,AHCA,AOKD,ALMH,AEVI,GGPF,CtB4DA,ACEA,AMzDQ,CNyDP,AW5BQ,CJdL,AFRA,EQPE,CPAE,AEkCD,AY/BT,ANFS,AEWT,AEVQ,CZFE,CK+BC,AajCA,AZ0CA,ALzBD,AQbC,AX+BA,CGlBA,CFRE,AQPD,AGYZ,AEVY,CbKE,AQPD,AKEA,CNsCE,CJNX,AMjCA,CUHE,AjBiBA,ACmBW,AMjCA,AICD,CMJE,AnBSZ,AULA,AX+BA,Ac/BF,CbKe,AULA,CRaA,AaZnB,AFDmB,Cd+BE,Ac/BD,GXaG,AWbA,CXaC,ACmBpB,AOhCE,AX+BmB,CLsBlB,AOvDG,AEkCgB,AJDA,CICtB,CKlCI,ACCJ,CfsDF,AOvDoC,AMwCvB,AJNc,AUhCD,CNsCb,ALzBI,AFRS,AG2BxB,AUhCyB,CLFC,ACCC,CUHzB,AhBoC0B,CDnBA,AHkBX,CEjCX,ADOsB,CmBTG,AnBSF,CD0BG,AUhCA,AIChC,CXagC,CKyBzB,ALzB0B,AFRlB,AG2BmB,AUhCD,CnBqD5B,AyBzDH,AZ0CkB,AJNe,AUhCD,Cd+BE,CC1BJ,AD0BK,Ac/BrC,EXae,AWbuB,CNsCb,ACxCc,CduDpB,AcvDqB,ACCxC,CPcyC,EKyBrB,ARPH,CQOa,AJN9B,CIMoB,CLzByB,ACmBE,AJDA,CGlBD,AHkB5C,CQOgC,ILzBO,ACmBY,CIMd,ALzBa,ACmBE,CKlClD,CADgC,CRQlC,AQNE,EDuC8B,ALzBhC,CKyB2C,CAAtC,EAAyC,EJNhD,GIMqD,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAAlE,CAAP;ADRE,ALpBF,AkBbE,AZ0CH,ALzBG,AFRA,AI6BD,ADFD,AWjCA,ACnBJ,ALoBK,AFDE,ATgCD,AUhCF,AEnBJ,AEoBM,AOuBJ,CL3CF,AJAA,CIA0B,AJAP,CJwDjB,CZoBA,AM/CE,CGqBA,CFjBE,AFRA,CoBkBJ,C1B8BE,AoBtDI,AMwBN,CnBdM,AEuBC,AMjCA,CRUA,AYTC,CP6BC,AajCA,AjBiBD,AajCgB,AhBmDf,AYnDQ,CjByEX,AQxCG,AajCe,AJAP,CXyBN,AcNA,AMwBX,CpBlBY,CMwBR,CZwBM,ASrBR,AMjCA,AWOG,C1B+CM,AMhDP,AG2BW,AMjCA,CH8BC,AJhBZ,AFRY,AaLA,CCDd,CpBsDY,AyBzDV,ClBaF,AkBbiB,AjBiBD,AYdC,ACnBK,AhBmDpB,AYnDa,AEoBE,CnBqDH,AqBzElB,AJAA,CLiDM,ANxBgB,AezBtB,AJAA,AS0BO,CnBGgB,ADJA,AG2BnB,AJDoB,AUhCpB,AWOG,C1B+Cc,AQxCG,AWbC,CZSrB,ACIqB,COdE,CTMrB,AD0BsB,Ac/BA,Cd+BC,ELsBF,ACGjB,AwB5DJ,CjBiBc,AOdY,CfsDH,AmBrDI,AOM1B,CzBkDL,AkBxDgC,AOuBhC,ClBVgC,AWbD,CAAZ,GXaiB,AHkBd,AUhCpB,AICmC,CXaA,EHkBG,Ac/BpC,ElBwDM,EO3CQ,AHkB0B,CAAC,EJyBtB,AO3CuB,KAAI,CAAC,EHkB7B,GGlBwB,AHkBY,CGlBD,AHkBrD,MGlBA;ALeA,ASED,ALpBD,AkBbC,ADED,AlBOE,AI6BH,ADFA,AWjCG,AJCH,AFDE,ATgCC,AUhCF,AOIJ,AHHM,GT2BJ,ADDA,AOpCA,CTmBE,EDJE,ELmDF,CM/CI,AiBXC,ATCA,AOIT,CnBwBU,AIlBD,AYTC,ChB2BC,AiB5BA,AfgCA,CLsBL,ACGE,AE7BI,CF6BH,AKnDI,CAAC,CHsBJ,AqB7BN,CxBuDM,AG1BM,AqB7BA,ATCZ,CfsDO,AMhDL,ASNW,AICA,CbKC,AcNZ,CAAa,CDCC,ClBwDH,CAAC,AM/Cd,CP4Ca,AMhDK,AgBFtB,CtBkDkB,AMhDK,AD0BjB,CEtBkB,AiBXpB,AJCE,ADCmB,ClBwDH,AuB1DI,ATCtB,CdyDmB,AE7Bb,AIlBN,AFsBuB,EUhCE,CfsDL,AwBvDpB,AlBOE,CNgDmB,AwBvDM,AnBiCA,CLsBN,ACGG,AIzBI,Ac/BZ,CAAa,ClBwDH,AE7BI,AY5BA,CSD9B,EvB0D6B,EE7BK,AY5BlC,CZ4BmC,EF6BD,CAAC,CAAA,AkBxDnB,Cd+BO,Ac/BkB,ChB2BX,CAAY,CEIE,GFJ1C,CEI8C,CFJA,AEIC,Ac/BjC,CAAd,Yd+BqB,GAA0C,CAA/D;AFHE,ASEL,ALpBC,AiBXD,AXwCD,AL1BI,AYbD,ACCL,AhB+BM,AUhCF,AOrBJ,AL+BA,AETM,AOKN,CJ3BA,CT4DE,AS5D2B,CV2C3B,AY7BA,CvBgEA,AM/CE,AmBJJ,CzBmDG,CO5CG,CaZN,AJSA,CdkBQ,AkB3BR,AJSA,CjB4CK,AO5CG,AQVC,CRUA,AYTC,AOKV,CbiCE,AL1BQ,AHmBC,AiBrDkB,CT4D3B,AL1BS,AclCkB,CnBiDjB,AuBtBZ,CvBsBa,EKfP,AObF,CPaY,AaZhB,ANDiB,AEUjB,CITA,AJSA,CETmB,ENsCjB,AQtCa,ACtBc,AL+Bd,CdkBP,AUWN,AS5DF,AHsBsB,ChB2BA,AmBjDtB,Cf+BI,ACGE,AHmBA,CGnBkB,AObpB,AEUJ,EdkB0B,AIlBA,AFsBC,CQOzB,AEvC0B,AWM5B,CnBII,AYTyB,AOK7B,CPL8B,CNsC5B,ARP6B,CgB/B/B,AhB+BgC,CUhCC,EPaR,AWZnB,COKN,CAAA,ClBOwB,EAAM,CLeJ,AKfF,AObpB,CZ4BsB,CUWxB,AL1B6B,EHmBJ,GAAqB,EFJ1B,CAAa,CEIiB,CFJ9B,AEI+B,CqB1BrD,CvBsBuC,AuBtBvC,CvBsBsB,AuBtBtB,CvBsBQ,SEImB,GAA0C,CAA/D;AFHC,AIlBH,AkBdA,AZ2CA,AL1BI,AFRF,AI8BJ,ADFA,AWjCC,AJAH,AXgCM,AUhCF,ELmCF,ADFA,CW3CA,CpBgEA,ACIA,AMhDE,CP4CD,CMjDG,CG4BJ,CDpBM,AEsBN,ADFA,CFvBM,AkBdC,AZ2CA,AHJP,AMnCF,ADAS,CRUA,CCGE,AFRD,AD2BC,CGnBA,AFRA,GmBTP,ATIJ,CSJgB,AZ2CZ,APlCE,ASLF,CFuCa,AL1BT,AFRQ,AG4Bd,AMjCe,CPaN,AEsBT,ADFA,CCEA,GLHI,CGnBK,ACoBT,AMjCE,CRUA,AkBdA,AjBiBI,AFRF,ASLkB,CUJC,AnBSD,AD2BC,CQOrB,AL1BW,ACoBb,CFvBwB,AM8BpB,AHLJ,CTuBK,CMhDH,AkBdA,ApBoCyB,AUhCA,CUJC,AfuC5B,ALH4B,CJ0B5B,AO7CiB,CK2BR,AL3BS,EObI,CUJpB,AnBSqB,ASLU,CNiC3B,AMjCgB,CFuCpB,CL1BW,AFRS,ASLc,CFyChC,AL5BqB,AObvB,CPaW,AFRe,AI8BnB,CTuBF,AO7CD,AFRgB,AG4BtB,AJDuB,AUhCgB,ETKV,AG4BT,CIQX,ARTiC,CQOxC,AHJF,CKnC4C,Cd0DvB,AYhBjB,AHPiB,CLHyB,CAAC,EUhCR,CF0C9B,AE1CyC,CFuChD,AEvCqC,EF2CnC,AE3CiD,CAAnD,IF2CO,ARXc,GAAsC,CQWzD,CAAU,CAJZ,EAIe,KAAK,IAAL,CAAU,ARXvB,CQOF,EAKE,KAAK,QAAL,CAAc,CALhB,EAME,KAAK,QAAL,CAAc,CANhB,EAOE,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAP3B,EAQE,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAR3B;ADRF,ALpBE,AkBdD,ADGD,AXiDC,ALnCI,AFRC,AI8BJ,ADFA,AOvDJ,AFoBG,ATkCG,AiB7BN,AHHM,AO4BJ,CVlDF,CJoDE,AY/BA,ARrBmB,CSGnB,AZwDA,CbkBA,AO7CE,GKoBF,AY/BA,AhBYI,AcRN,AIyBE,CzB8BE,AW5BF,AY/BA,AlBMM,AG4BA,Aa9BR,AIyBE,CnBlBM,AGyBC,CHzBA,AYVC,CbKC,AD2BA,CJ0BH,AKrDG,AoBuBT,CjBKW,CCET,CgB/BG,CzBsDK,AehFS,CfgFR,AW5BX,AY/BA,AlBMM,AI8BS,AMzDI,AMyBrB,CV2BE,AY/BA,AlBMS,AgBFX,CHHmB,ClB0DH,AuB3Dd,AfkCM,CAAa,AJDf,AiB7BS,AICR,CzBsDW,AW5BhB,AFKE,ASnCkB,AOIf,CFLL,AlBMS,CCKP,ADLI,AD2BgB,CJ0BH,AW5BnB,CNzBa,AU3BM,CTgCK,AShC1B,AGsB2B,CHtB3B,AXsD4B,CEtBxB,AFsByB,EJ0BF,AKrDR,AoBDZ,C1BmDM,AMlDO,AoBuBlB,CzB8B2B,AuB3DvB,ExBwDJ,AsBpDF,AHHU,EP8BR,AY/BA,ClBMa,CkBNK,AlBMO,AD2BH,AchCe,CbKxB,AaLyB,CbKhC,CG4BJ,AJDsC,CchCC,CViCC,AUjCtC,CnBuDS,CKvB+B,AchCA,CdgCC,ILuBlB,EAAE,IKvBP,CLuBwB,EAAE,AKvBU,EAAtD,ELuB4D;AG3B5D,ASGF,ALpBA,AiBXA,AhBcC,AFRE,AI8BH,ADFE,AWlCN,AfiCM,AajCH,AHAC,AICI,IZUJ,CCJA,EFHE,CNmDyB,AwBvDvB,CjBWA,AiBXC,AdoCA,AUpCT,AFAQ,AHAC,CZ4BC,AIjBD,CJiBE,ASGA,AHGA,AJDA,CJ0BL,AE/BM,AiB5BZ,CLAa,AICA,CKDC,AdoCV,AKpCU,CZ4BJ,AOQK,CTuBL,AE/BM,Ae5Bb,CjB2DQ,AiB3DK,AHAC,CNkCX,AJDA,AUjCF,CNkCe,CelCV,ATAW,AICZ,CP8BW,AY/BE,AnBiCA,AUjCA,AICA,ElB0DJ,ASvBb,CTuBc,Ac3DM,CViCC,COFD,ALpBpB,AGyBsB,ALHA,AajCvB,Cf4BO,ESGC,ALpBgB,AQXE,AICrB,CnBsDuB,ACIP,ASvBpB,ASnC0B,ClB0DL,AMhDrB,CP4C2B,ACIN,AW5BE,CPEN,CFLa,AqB5B9B,ATAoB,AIChB,CJD2B,CH+BxB,AY/ByB,AnBiCA,AchCA,CAA5B,EhB2B8B,ASGN,AO9BO,ChB2BA,AMMjC,AJDkC,AchChC,CnBsDwC,AKtBP,AUjCrC,ENkCuC,AMlCA,CH+BN,AG/BO,EZ4BV,AY5B9B,CZ4B0C,CMMxC,AJDe,AUjC2B,CH+BrC,EPEwC,CFL7C,ASGoC,ETHW,ESG1C,GAAoC,IPEI,COFC,APED,IOFxC,GAA6C,APEL,CAAQ,GOFhD,EPEL,COFuD,KAAK,KAAvD,GAA4D,GAAnE;ATFI,ASGL,ALpBC,AkBdF,ADGI,AXiDJ,AP3CG,AI8BD,ADFC,AW1DL,AJwBA,AFDE,ATkCI,AajCF,AHAE,AICE,AOGR,CN5BA,CKqBE,AZoDA,AOzEgB,ANuBhB,CF8BA,CLlBE,AmBPJ,CpBNI,AGkCA,EOhCJ,ChBsDkD,AG1B1C,Aa5BR,AGCQ,ClB0DH,AMhDG,AGyBC,AIrCP,AICO,CXWA,AkBdP,AXEA,AYKF,CDPE,ADGS,AXiDT,AJfS,AJDA,AUjCA,CFiDT,AMhDU,ChB2BA,AuBxBZ,CvBwBa,AOQT,CAAW,ADFA,AUjCA,CCzBG,AfyDZ,AajCF,CExBc,AJwBlB,AEAiB,CFAjB,ADAM,CDDJ,ATkCiB,AUjCA,CUHjB,ADGI,AfkCc,AKnClB,AKEkB,CMJlB,ADGmB,AXiDnB,AGjDa,AGCM,ChB2Bb,AUqBN,AHbE,ASnCgB,ChB2BE,AEKC,AajCnB,ACCW,CdgCS,AajCA,COHtB,AfuCuB,AKpCnB,CRWF,AanCc,ALwBQ,AICA,ChB2BA,AMMX,AW1Df,AJwBA,CSHE,AhBqC0B,AW1D5B,AM4BA,C1BkDkD,AO3CtB,AMsC1B,ARhBiB,AajCU,ACCrB,AOGR,CFJM,AdoCwB,CVkBoB,AO3C9C,AQX2B,CFiD7B,ARhB8B,ESlC9B,ETkCkC,AUjCV,AWI1B,ChBgCI,AIrCF,ATkCmC,AajCb,AHAa,AWIrC,CDPQ,APG8B,AHAZ,CfsDwC,AkBtD9D,CHAoC,CZ4Bd,AsB/BxB,APGuC,AHAf,CZ4BA,AEKP,CoBpCE,CZoDnB,AEjD0C,CViCC,CajCC,EOH5C,CXEA,ACC+C,CZ4B3B,AsB/Ba,CtB+BA,AEK7B,CFL8B,AMMzB,ENNW,AMMgC,ASlCb,AQIzC,CRJuD,AQIvD,CvBwBwC,Ae5BpC,AQIJ,CvBwBsB,AY5BsB,CZ4BpC,AY5BkD,CAApD,EAAuD,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,GAAkB,KAAK,QAAL,CAAc,CAAvF;AZ6BC,AsBhCL,ADII,AXiDF,ALnCA,AEsBA,ADFE,AKnCF,ATkCE,AajCF,AHAC,AICG,IlB0DN,AYVE,ALnCA,CP6CD,GDLC,AyB1DF,ANKM,CXaA,AEsBC,AIrCA,AICA,ACCA,CXaA,CgBdE,AfkCA,AJDA,CLqBH,CyB1DN,ANKW,CTmCT,AIrCA,CNeA,AEsBW,CVkBH,AyB1DV,AjBkBa,AUdX,ClBsDS,AwBtDP,AXiDW,AClDA,ATkCX,AajCW,CMAC,AXiDA,AJfZ,AUjCY,CViCC,CgBtCjB,AfwCE,ALHgB,CKGC,AIrCA,EDkDE,AKjDnB,CbiCoB,AajCA,ClBsDH,AKrBI,CLqBH,AUlBlB,ESnCI,CDDqB,EMAvB,AXiDW,ARhBG,CLqBQ,AaLxB,ALnCA,AUdoB,ClBsDK,AQxCG,AUdC,CMAC,AnBiCA,AajCV,ElBsDQ,CcvDX,AICgB,CMA/B,AVDe,ATkCiB,CAAC,CLqBH,AQxChC,ERwCkC,AQxCG,AUdC,CTkCpC,EJDc,CIC0B,CKnCzB,CAAJ,ATkC+B,CSlCZ,CICC,CTkC/B,ASlC6C,CVcT,AUdtC,EAAkD,CVcb,AHmBnC,EGnBuC,EUdc,GAAL,CAAS,CAAT,GAAa,KAAK,QAAL,CAAc,CAA7E;Af6BC,ASGH,ALpBE,AiBXC,AXiDF,ALnCG,AFRF,AI8BD,ADFE,AWnCL,ANAM,ATkCA,AajCF,ACCG,AO2BL,EdGA,CCgBA,AHhBA,CT6BA,AKtDE,CHSA,AMiBO,CDlBL,AMfA,CFgCJ,AQhCF,ADFM,AO+BJ,CdGA,ALpBM,AaZR,AM6BE,CpBtBM,AYNC,CZMA,CG4BE,AJDA,CLqBL,A0B1BJ,ClBdW,AMfA,AKGF,CXYG,CFRV,AG4BW,AKnCA,AYGR,C1BoDK,AMhDG,AYNX,CN+BF,AJjBI,AYfN,AFCiB,CN+Bf,AJjBgB,AYflB,CfkCM,CLqBU,ASpBI,AKnCA,CFgClB,ALpBE,ACGE,AYfS,AMGR,CrB+Be,AqB/Bf,C1BoDY,AO3CI,AWXnB,CN+BF,AQhCF,EfkC0B,CICX,AKpCqB,ATmCT,CICC,CToBH,CAAC,C0BpDnB,CpBIH,AoBsBF,CpBtB8B,CLsDnB,CI3BS,COFpB,CX6BA,CI3BoC,CLqBH,CAAC,AMhDhC,EAAqC,AD2BC,CAAC,GLqBD,CAAC,ACM5B,GDN+B,CAAC,AKrBzB,EJ2BS,CKtDU,AD2Ba,CJ2BrB,AQ1BtB,EToB0C,ASpBI,EToBF,CCMT,EAAE,CDNW,CAAC,CAAC,CAAA,ACMD,AI3BN,CAAA,QAAA,CAAS,KAAzD;AFJH,ASGC,ALpBE,AkBhBF,ADKD,AhBcG,AFRA,AG4BA,AKnCA,ATkCA,AajCH,AHAC,AIEI,GhBUN,AqBjBA,ANNA,COME,EjBmBE,AFRA,AQPA,Eb6DF,AkB1DI,CMPA,AVKC,CRWC,CKoBC,AHGA,AJDA,CLqBL,ACME,AwBjEG,AXIC,AKGA,CXYC,AFRA,CEQC,AFRA,AQPA,CKGC,CnBoDL,ACME,Ac5DR,CfsDO,ACME,Ac5DI,CNkCX,CDpBA,AFRA,AG4Ba,AKnCA,CFgCD,AJjBE,AFRA,AD2Bd,CLqBS,CAAC,CO3CO,AFsBA,Ac/Bf,CZSgB,CNiDH,AW7BE,CX6BD,AwBjEV,AVKR,CfsDiB,AKrBM,CLqBL,AYvBX,APEiB,CLqBN,CO3ChB,AkBhBK,CboCe,CX6BE,AMjDI,AkBhBT,CxBiEM,Aa/DO,EFkCzB,CX6BqB,CMjDI,AkBhBzB,ApBsCY,COFQ,ALpBM,CkBhBJ,CxBiEG,AI3BI,EJ2BF,CW7BF,CLpBJ,AFsBY,CAAC,CICvC,CFvBwC,CKoBnC,AJjBL,AFRA,CG4B2C,EGHR,GHGnC,AJDiB,COFZ,EPE8C,COFX,ELpBa,CAAC,EKoBT,IAAxC,ALpBqB,GKoBuB,GAAnD,CPEE;AODH,ALpBE,AkBhBC,AZqDN,ALlCK,AFRA,AI6BL,ADDK,AKnCC,ATkCA,AUjCF,AIEG,AODP,Gd4BE,Cc5BF,ClBUI,AFPA,CQLE,GDiDN,AHbA,AKnCS,CULC,AXIA,AYEV,CrBgCW,CLqBL,ACMA,Aa7DM,CYEZ,EDNe,AfwCf,CVmBU,ACME,AwBjEI,AXIA,ACCZ,CfsDO,AetDM,CFgDjB,CYrDU,CzB2DI,ACME,AI3BV,CLqBS,AetDX,Ed4De,AI3BI,CoBtCC,CzB2DL,CAAC,CAAA,AyB3Dd,ApBsCqB,CAAC,AqBhC5B,CDN6B,ACM7B,CZFgB,Cb6DW,Aa7DX,Cb6DY,EwBjEK,CAAC,CCMlC,CrBgCuB,AqBhCvB,EZFY,CWJqB,AXIR,ATkCe,CJ2BH,CAAC,AwBjEE,EpBsCI,CSlCd,ATkCe,EoBtCZ,CxBiEW,AwBjEf,CxBiEgB,CAAA,Ga7DpB,CAAc,ATkChB,AqBhCvB,CZFY,AYEZ,CAAA,CZF0C,ATkCe,KSlCV,GTkCzC,KSlCoC,CAAc,CAAd,GAAkB,KAAK,OAArD,CAHwB;AXiClC,AsBjCG,ADKH,AX7BF,AHCA,AD8DG,AKnCG,ATkCA,AalCN,AHCI,AIEC,CN/BL,AHCA,CPwDE,AqB5BA,CX7BF,AHCA,ADsDE,EgBjCE,CXME,CUCJ,CrB4BA,AqB5BA,ATAM,CfsDH,AG1BH,Ae7BF,EbkCW,CJ2BL,CiB7DN,AHCa,CDDC,Eb6DJ,Aa7DM,Cb6DL,AuB5DT,CrB4BA,AqB5BA,CrB4BA,AY5BE,CDDgB,Cb6DL,Ac5DM,Cd4DL,AuB5Dd,CnBiCI,EFLJ,AqB5BA,CnBiCwB,AUjCA,Cd4DL,CAAC,AEhCpB,CFgCoB,CI3BQ,CAAC,EUjCV,CDDD,ACCc,CSA1B,AVDY,GX6BX,CqB5BP,CTAmB,CSAC,EVDN,ATkCU,CSlCG,CX6B3B,CEK4C,CFLrB,EW7BS,CTkCgB,CAAC,MSlCtB,CAAc,CAA3B,EAA8B,ETkCpB,GSlCyB,ATkCe,QSlCpB,ATkCxC,CSlCsD,CAAd,GAAkB,KAAK,OAAL,GAAe,CAA/D;AX8BZ,ASGK,AY/BL,AhBcA,AFTA,AQXgC,ATuC9B,Aa9DN,AH6BG,AW2BD,CRxDF,CN4DS,AM5DU,CHejB,CfoEA,AQxCE,AFTA,CNiDD,Ac5Dc,EFqCR,AEhCF,AY4BL,CdIO,AY/BD,AE2BN,CvBCO,AqB5BA,AhBcD,AFTA,CESC,AFTA,CD4BE,Aa9DQ,CjByFb,AiBzFa,AQwDjB,EdIO,AY/BK,ChBcV,AFTA,AQXA,ATuCE,AqBlCC,CzB6DG,CAAC,AW7BT,CJjBe,AFTA,AD4BC,EJ2BJ,AuB5DL,CvB4DM,AuB5DM,AN7BF,AQ4BZ,ClBec,AFTA,AD4BC,Aa9DtB,AQ4BO,ClBee,AFTA,AD4BC,Aa9DvB,EjByFmB,AEhCf,CFgCgB,CAAA,AI3BF,CFLU,AKdX,AFTA,CM0Bf,CPE4B,CGnBA,AFTA,AoBNvB,CA4BL,ErBMgC,CFLC,AKdD,AFTA,AD4BC,CFLC,AqB5BhC,AhBc+B,AFTA,EkBLG,CnBiCpB,EGnBD,AFTA,CD4ByB,EFLtC,AKduC,AFTA,AD4BrC,CGnBF,AFTA;AHwBA,ASGA,ALtBD,AkBdC,ADKE,AX+CN,ALjCI,AFTA,AI6BJ,ADAE,AJDI,AchCF,EViCF,ETqBA,AQzCE,AFTA,GO0CJ,AHbA,ADAE,CgBvCM,AZoDR,AHbA,ADAE,CR0BG,AEhCI,AsBjCA,AjBmBD,AFTA,AaJC,CXaA,AFTA,CM0BE,AY/BA,AnBiCA,GoBtCG,CboCC,CO9BX,CN8CJ,ALjCI,AFTA,AI6BJ,ADAE,AUjCe,CN8CjB,AHbA,ADAE,CJDI,COFK,AapCF,ADKH,AhBca,AFTA,CM0BE,AapCA,ADKA,AX+CN,AHbA,CPNX,AEKkB,EGnBC,AFTA,CNkDjB,AG3BmB,ASGA,AJjBD,AFTA,AaJpB,CP8BsB,APEA,AchCA,CTiC1B,ALD2B,CLsBzB,EG3B4B,AUmB9B,AM9CI,EP8BiB,AY/Bf,AhBca,AFTA,AaJa,CAA5B,CP8BO,AapCP,AhBuCF,CDpBgC,AFTA,AD4BZ,AchCa,CP8BC,AapCA,ANMhC,CViCF,CJDoC,CGnBA,AFTA,CM0BE,AJjBD,AFTA,CM0BE,CPEC,CAAC,GFLlB,CAAsB,ASGX,AJjBjB,AFTA,EM0BR,AHGT,CDpB+C,AFTA,CHuBxB,ASG0B,AJjB/C,AFTA,AD4BkB,EFLlB,CEKkD,COFC,APEjD,COFkD,MAAL,EAAxC,CAAP;ATFA,ASGD,AapCG,ADKA,AhBcF,AFTA,AG6BA,AKnCA,ATkCE,AanCN,AHCA,AIEG,AOHH,Gd+BS,AOhDP,ClB+EA,AO9CE,AFTA,AoBPJ,CzB8DG,EiB9DH,ClByDI,AcxDI,AIDR,Cf8BS,AKdD,AFTA,AG6BC,AMnCT,AWDA,ClBgBS,AFTA,CmBVE,ADKA,AnBiCA,CLsBH,A0BzDR,C1ByDS,AcxDI,CdwDH,CQzCN,AFTA,AG6BA,CAAY,AMnChB,CfwDa,AyB5DP,ADKA,AVDF,AIDJ,ClByDc,AyB5DI,ADKA,AhBcD,AFTA,AYPjB,ClByDc,AG3BV,AW7Be,CLmCf,AJDE,CICe,ASpCN,Cf8BO,AKdD,AFTA,CESC,AFTA,AD4BC,EanCvB,Cf8BI,CEKuB,AqBnC3B,ClBgBiB,AFTA,AD4BW,AqBnC5B,GDHM,AjBmBwB,AFTA,AG6BR,CAAD,CelCf,CCL4B,AhBuCT,CDpBS,AFTA,AG6Bb,AiBpCrB,CFEoC,AhBcD,AFTA,AoBPnC,CjBoC0B,AJDH,CoBtCjB,EDKA,AnBiCkC,CGnBvB,AFTA,GES0B,AFTA,AD4BC,CAAC,IGnBE,AFTA,CESC,AFTA,EoBPhD,CAAA,CrBmCuB,AqBnCvB,ClBgB2C,AFTA,CESW,AFTA,CD4BG,CAAnD,GGnBF,AFTA;AHwBA,AInBF,AkBdI,ADKD,AhBcD,AFTA,AG4B2B,AKlCzB,ATkCD,AUjEL,CAAA,CRyCE,AQzCoB,Ed6FpB,AO/CE,AFTA,INkDA,CG3BK,AKdD,AFTA,CESC,AFTA,CmBVE,AXIA,AC/BW,CfuFd,AevFc,CfuFb,AStBsB,CTsBrB,AO9CR,AEwB8B,CFxB9B,AEwB+B,CDnB7B,AFTA,CNkDS,CAAC,AcxDR,CdwDQ,AG3BV,AKdc,AFTA,AQNC,CWJb,CAAe,AV3BC,CZ4DA,AMKS,AMjE/B,CP8CsB,AFTA,ASrCtB,CRyCE,ACKqB,AFTA,CCIrB,AEwByC,CNLvC,AMKwC,CR4BtC,AQ5BuC,CKlCvC,Eb8DJ,AwBlEI,AjBmBY,AFTA,GESc,AFTA,CG4BD,GDnBK,AFTA,CCIlC,ACKmC,AFTA,GCInC,GCKgB,AFTA,GES4B,AFTA,ICI9B,CCKkC,AFTA,CESC,AFTA,GCIjD,EAA6B,ACKe,AFTA,CESW,AFTA,MESrD,AFTA;AHwBD,ASEH,ALrBI,AkBdC,ADKF,AfgCiD,AKjC9C,ATkCH,AchCD,AOuBA,EPvBA,ChBsBA,AqB5BA,CxB4DA,CAAC,ASvBC,CU/BF,CAAA,AOuBA,CzBqCE,AyBrCF,CdMF,ELrBW,AOVA,AYyBT,CzBqCM,CAAC,CAAC,AW/BV,AclCO,EnBaS,AYRd,ClB4DW,AkB5DX,ClB4DY,Aa9DR,Cb8DQ,Aa9DK,AYHZ,CAAA,GPKL,CZQS,CAAc,CYRvB,ELFI,CYHC,CA4BL,CZzB6B,EPUpB,CAAuB,EOVE,EKElC,CZQS,EOVL,EPUqC,KAAK,MAA5C;AK7CJ,AL8CG,ACIA,AFTA,AG4BA,AKjCG,ACDN,AIGI,CPtCJ,EAAA,AL4CE,AEuBA,CT0BO,Ge1DT,Cd+DI,Ac/DJ,CIGS,ELFE,Cb8DH,CAAC,CDLG,ACKF,EkB5DN,CnBuDF,ACKW,Ac/Db,AIGiB,ClB4DH,Aa9DR,ACDN,Cd+Dc,Aa9DK,ECDJ,KDCT,AKEF,CnBuDU,AczDa,CCD3B,CIG6B,GLFG,EdyDH,AmBvDK,EnBuDH,GmBvD3B,CLFuB,CAAc,CAAnC,CdyDwC,CczDF,KAAK,QAAL,CAAc,CAApD,EAAuD,KAAK,OAA5D,EAAqE,KAAK,OAA1E,EAAmF,CAAnF,EAAsF,CAAtF,EAAyF,IAAI,IAAI,CAAC,EAAlG;AX8BJ,AsBlCE,ADKJ,AVAM,ATkCJ,AchCE,AONJ,EvBiCE,AEKA,EqBtCF,I1B6DI,ACKA,AEjCF,CAAA,AsBlCO,ADKT,AnBkCE,AchCO,CdgCP,CSlCS,Cb8DH,CAAC,CAAC,AuB9DV,CxByDW,AyB9DP,CAAY,ANOZ,ClB4DS,AkB5DI,AONjB,CzBkEc,AEjCZ,AW7BI,CdyDS,ACKD,AEjCZ,AW7BiB,ATkCjB,CAAA,AqBtCF,CPMI,EMPA,AXKE,ATkCJ,CoBvCsB,ANOG,CnBuDN,CAAC,AG5BpB,AEKA,EoBvCE,CtBkCF,AsBlC2B,ANOG,InBuDH,CAAC,AyB9D1B,CzB8D2B,AmBvDJ,AON3B,CrBsCM,AqBtCN,E1B6DkC,AmBvDI,ChB2B5B,EEKR,AchCyB,EdgCX,AqBtChB,CPM0C,AON1C,C1B6DyC,CAAC,AG5BxC,CH4ByC,CG5BjB,CH4BmB,AmBvDE,IAApB,GnBuDyB,AmBvDD,CnBuDE,CAAC,GAAG,AmBvD9B,GAA8B,InBuDO,A0B7DhE,C1B6DiE,AmBvDH,AON9D,C1B6DkE,A0B7DlE,C1B6DmE,CAAA,GmBvD/D;AhB4BA,ASCJ,ALpBU,AkBfP,AD7BH,AhBgDE,AFTA,AG4BA,AKjCG,ATkCD,AchCA,CKpCJ,CjB4CU,AiB5CU,AhBgDlB,AFTA,AG4BA,CgBhDA,CzBwEA,ACKA,AI5BE,CLuBD,ACKA,EWhCH,ANzBE,AG4BA,CGHF,ANzBE,AG4BA,CNJO,AqB/DW,AhBgDlB,AHoBO,AchCA,CKpCW,AhBgDlB,AHoBQ,IExBA,CAAA,CYRN,CP4BJ,ANzBE,AG4BA,AJCE,AchCa,CP4BjB,ANzBE,AG4BA,CenEkB,AhBgDlB,CgBhDF,AhBgDE,AHoBkB,COJL,AYhEf,GjB4CU,ADLR,CHwBE,AInBM,AFwBe,COJzB,AO5BI,CbGF,CHwB0B,AMI1B,CU/B2B,EV+B3B,CDnBA,AHoBE,EchC8B,ChB2BC,AKfjC,CLekC,AInB1B,GAAR,ADLA,CAEC,CAFD,AG4BW,EU/BT,ChB2BA,CMIF,EDnBA,ACmB0B,EFvBL,SAArB,EAA4C,OAA5C,EAAoE;AJoBlE,AIpBF,ACKE,ACkBF,AJEE,AchCA,AOKF,I1BmDO,ACKA,AOjDL,GkBPF,CnBEA,AEuBA,AiBzBA,CvBsBO,AEKA,AchCA,EXYE,CAAC,CDLV,AEuBA,CT0BU,CKxBR,CJ6BQ,AMtDV,AEuBA,AJEc,AchCZ,CnBwDF,AmBxDe,ElB6Df,AElCE,AuBtBF,CnBEA,AEuBA,AJEE,CGpBA,AHoBiB,CFLC,AKfA,AkBpBf,ClBoBH,EAAqB,CLerB,AKfA,AHoBA,CLwBU,CQ5Cc,CPiDd,AkB7DV,GAA4B,EnBwDH,AQ5CK,CAAC,AkBpB5B,C1BgEwB,ACKA,AyBrExB,CPQ8B,ClB6DJ,KDLa,ECKI,AOjD9C,AkBpBG,CAaL,ClBO6C,EWZ3C,IXYiD,CAAC,WAAlD;ALgBD,AsBlCD,ADIF,AhBeI,AFPF,AQRE,ATmCD,EoBvCD,AnBYA,CHmBA,AEKA,CGjBE,GgBfJ,AlBQE,CNmDE,ACKA,AuBhEJ,AlBQE,AQRM,EWJN,AjBmBQ,CiBnBR,AjBmBS,EMfE,Ed2DF,ACKA,COjDP,CgBfJ,AlBQE,CkBRF,AlBQE,CNmDa,ACKA,AOjDI,AMff,CWJF,CAAA,ADIa,AVAM,EWJnB,CjBmBsB,CR4CH,CAAC,AyB/DpB,ADIF,CvBgEuB,CAAC,COjDpB,CFPF,GNmD2B,AMnD3B,CNmD4B,CAAC,ACKA,CAAC,AwBpE1B,CxBoE2B,CDLC,CyB/DhC,CxBoEkC,CwBpEjB,IzB+DsB,AyB/DvC,AnBYA,CNmDwC,CAAC,ACKA,AwBpEV,CxBoEW,CDLC,ACKA,EAAE,KDLK,CAAC,CAAC,ACKA,CAAC,CAAC,CDLC,ECKE,KDLK,CAAC,CAAC,ACKA,CDLC,ACKA,CDLA,ACKC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;AMtDxF,AkBdF,AjBoBE,AFPA,AGwBA,AKhCE,AKEF,AORJ,I1BiEE,ACKA,AOjDE,AkBrBJ,C1BiEG,ACKA,GMvDK,AkBdN,AnBaQ,AaNF,CV8BC,CDjBC,CAAC,AMfA,EPSP,AkBdF,ANOW,CbMG,EmBbd,CjBoBE,AFPe,AGwBf,CKhCE,CAAa,AKEf,CMPF,AjBoBkB,ACiBA,AiBtCpB,CPQqB,EORrB,ElBqByB,AFPE,CAAC,EQRtB,GNeF,ACiB2B,AKhCA,CLgCC,IKhCI,EYNpC,CpBcmB,AoBdnB,CpBc0C,IGwBV,CKhC1B,CYNN,CAAA,CpBcmB,CAAf,CADF,CAEE,uBoBfJ,CAAA,CAAA;AvBqCE,AIpBE,ACKA,ACiBE,AKhCA,ATmCJ,AcjCI,EhB4BJ,AEKA,ELyBO,ACKA,AMvDL,ACKA,ILeF,CAAA,AEKA,CIHQ,AJGR,CGpBS,AMfA,AKEA,CZQC,ACKA,CDLC,CEsBP,CT4BO,CCKD,AQjCI,ET4Bd,AG9BA,AW9BI,AKEA,ClB+DJ,AEnCA,AW9BiB,ATmCjB,AcjCiB,CV8BC,AJGlB,CGpBE,CAAkB,ILepB,AEKA,CGpByB,CR6CZ,CCKD,AEnCZ,AIpBE,AFyBF,AcjCI,CZQwB,AOVxB,AKEwB,EXa1B,CMf6B,Cd4DJ,AQ7CK,CAA9B,AWb+B,CnB0DJ,ACKA,COlDM,CPkDJ,AOlD7B,AMfkC,CX8B5B,AIpBN,AFyBK,CGpB+B,CDLC,CPkDI,AmB1DvC,EdiCJ,AcjC0C,ClB+DM,AOlDL,CLe3C,AEKiB,CSnCb,CX8BoB,CgB5BuB,CXa7C,CDLsC,CCKU,IDLX,CCKgB,AWbb,CZQG,AYRW,CAApD,EAAuD,EXazD,GWb8D,QAAL,CAAc,CAArE;AhB6BF,AIpBE,AkBhBF,AjBqBA,AFPA,AQRE,ATmCF,AcjCC,AOAH,IpBME,ECEE,CmBRJ,C1B0DE,ACKA,AwBvEM,ACQR,CvB4BO,AEKA,EEzBE,ACKA,AMfA,CRQC,CmBdG,AnBcF,CCEC,CPkDH,ACKA,AI9BP,CoBzCc,ApByCF,CC3BZ,CCEc,ACKA,AFPA,AQRZ,Cd4DS,ACKA,AOlDI,AMfA,CTmCf,CAAiB,CqBjCnB,G1B0DmB,AG9BjB,AsBpCM,AXMJ,AYRC,C1BoEe,AKzBlB,CJ8BmB,CAAC,AEnCI,CGtBxB,CmBdc,AnBcY,CmBdX,AjBqBR,CR6CiB,AOlDV,ACKc,CR6CH,AOlDX,ACKP,CR6CmB,CCKC,AEnCI,AsBpCjB,AjBqBiB,CPkDH,AEnCI,AKfzB,AFPP,CNoD6B,ACKA,AwBvEH,CjBqBQ,EPkDF,CMvDtB,AmBlBP,CnBkBoB,AkBhBT,ACFX,C1BoEgC,AQ7CI,CLevC,AsBpCoC,CzBkEC,ECKE,AMvDX,CNuDY,AMvDX,ACKtB,CPkDkC,COlDK,CR6CH,ACKA,AyBzExC,C1BoEyC,A0B1D9C,C1B0D+C,C0BlEjD,CnBgBc,ACKyC,CR6CH,COlDV,CNuDY,CAAC,CAAC,COlD7C,CR6C+C,AOlDX,ACK3C,CR6CuD,ACKA,AMvDX,CPkDW,MCKO,AMvDpD,CNuDqD,AMvD7D,CNuD8D,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;AElCxF,AsBpCE,AjBqBH,AFPC,AGuBE,AK/BD,ATmCF,GG1BD,AHwBA,CL2BA,ACKA,CDLC,ACKA,CQlCG,EHvBI,CHsBD,CsBpCC,ChBqCA,CAAC,GgBrCI,AnBcE,CmBdD,EnBcI,AGuBd,CNDF,AsBpCM,GtBoCY,EsBpCE,AnBcE,CAAC,CHsBvB,CsBpCE,EAAuB,IAAI,CAAC,CnBcd,CAAkB,GmBdL,CnBcb,CmBdoB,AnBcpC,KmBd6B,CAAJ;AtBqC1B,AIrBG,AkBfD,AjBqBL,AFPI,AGuBC,AK/BF,AKCC,AORJ,GvBkCE,AW9CA,CdgFO,ACKA,AK1DL,AoBfJ,CDDI,AhBoC2B,EAGxB,EU9BE,CZQC,ADDA,CAAC,AoBfX,CjBsCY,ET8BA,A0BpEZ,CnBgBc,CAAC,ADDX,AaPA,CnB4DF,ACKW,AkBjEI,EbOE,CL0DjB,CQtC6B,CAA3B,EHpBoB,CaPpB,CAAsB,CnB4DZ,EOpDJ,ADDN,AoBfJ,CzByEe,AMzDc,AmBhB7B,CPQ+B,EnB4DH,EAAE,AOpDpB,CNyDqB,AMzDzB,CmBhBN,CzByEiC,AMzDI,AYRjC,AORJ,EPQwC,CnB4DI,GCKG,CkBjEF,QAAL,CAAc,AORtD,CPQI,AORJ,CAAA,CPQyD,KAAK,QAAL,CAAc,CAAnE;AZSI,ADDJ,AGuBD,AJID,AclCC,EdkCD,CITA,AUlCA,CbgBE,INqDA,ACKA,AMzDI,CF0BN,CC3BQ,AD2BR,CC3BS,INqDA,ACKA,AMzDI,CAAC,CDDZ,ENqDW,ACKA,AI/Bb,CC3BkB,AD2BlB,GE1BM,CAAgB,CPoDH,AMrDI,CNqDH,CCKC,AI/BrB,CJ+BsB,EI/BtB,CC3BE,CNqDwB,CAAC,CAAC,ACKA,AMzDL,CNyDM,CAAC,CDLC,ECKE,CMzDX,EAAiB,AF0BvC,CL0BqC,EAAE,ACKA,EAAE,IDLI,CAAC,CAAC,ACKA,CAAC,CAAC,CDLC,ECKE,IDLI,CAAC,CAAA,ACKC,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;AEnC9E,AItB4C,AkBd1C,AnBcA,AQRF,ATmCE,AqB3CJ,EvBsCE,AW9BA,Ed6DA,ACKA,AK1DE,AoBhBJ,C1BqEG,ACKA,GEpCD,AsBpCM,CtBoCN,AsBpCO,AXMP,CAAA,CRQS,AD2BG,CC3BF,EmBdE,ACFd,ErB2CmB,CE3B2B,AmBhB9C,CvBsCE,CAAA,AW9BA,CWNO,AXMP,CWNmB,AnBcjB,CAAmB,AD2BT,CE3BsC,CAAC,CF2B5B,CSnCvB,CRQ0B,CD2Bd,CE3BsC,AORlD,CPQ4C,CF2BjB,CFL3B,AsBpCE,ACFJ,CpBgBuB,AoBhBvB,CDEkC,AnBcC,CHsBjC,AGtBqB,CD2BW,EC3BK,ED2BzB,AqB3Cd,CZQE,AYRF,EpBgB4C,AD2BN,IFLpC,CGtBE,AD2BU,EC3BuC,CD2BT,IC3Bc,CD2BT,IqB3CjD,CpBgBqD,AoBhBrD,CpBgBiE,AD2B7D,AqB3CJ,CpBgBqD,GAAgB,KAAK,MAAtE;AHuBA,AIvBuD,AkBbrD,AnBcF,AGuBF,AK/BE,ATmCD,AcnCH,EV+BE,CJEA,CL6BO,ACKA,AK3DL,GGuBF,CAAA,CNDO,AIvBD,AOPC,AKAT,EMNW,AnBcA,CAAC,CaRZ,GlBmEY,CwBzEN,AhBqCJ,CT+Bc,AyBpEE,AnBcd,AGuBF,CRoCA,AErCE,AGtBe,ENsDjB,CGhCoB,CW9BlB,CRQoB,GHsBpB,EFqCU,AwBzER,AnBcF,ENsDc,CyBpEc,AhBqC9B,GRoC4B,AQpC5B,CgBrCI,CzBoE0B,ACKA,MAAc,IQpC5C;ANAE,AIvBG,AkBbD,AnBcF,AGuBA,AK/BA,AK9CJ,AOsCA,CPtCA,CAAmB,EbsDf,AGuBA,AiBvCE,I1BsEF,ACKA,CErCK,AuBtCE,EDEA,AnBcA,AatDQ,CbsDP,AatDO,AOsCL,G1BsEH,ACKA,CyB3EO,CjBuCD,CAAC,CT+BH,ACKA,AErCX,CsBpCE,CAAe,AnBcjB,AatDe,ChB4EG,AGtBA,AatDtB,CV6EuB,AU7EvB,AOsCkB,CAAA,C1BsEG,CAAC,CCKC,AErCnB,AGtBuB,CL2DH,AwBzElB,GhBqCW,CT+BW,AMtDxB,AGuBA,CT+ByB,A0BtEX,C1BsEY,ACKA,AK3DI,AoBhBpB,CzB2EiB,CAAC,AK3DI,AoBhBpC,C1BsEiC,CAAC,CAAC,ACKA,EDLE,AMtDI,IL2DA,EDLE,ACKA,AK3DP,CNsDQ,AMtDI,CNsDH,AMtDT,GNsDY,AMtDI,CNsDH,ACKA,CDLC,ACKA,CDLC,ACKA,CDLA,CMtDM,CL2DH,IK3DpB,CAA9B,CL2DwD,CK3DK,CL2DH,CK3DK,KL2DC,AK3DI,CL2DH,CAAC,GAAG,CK3DN,CAAY,CAAZ,GL2DY,AK3DI,CL2DH,CAAA,GK3DQ,MAAvB,CAA7D,EAA6F,KAAK,KAAlG,EAAyG,KAAK,MAA9G;AHuBD,AIvBE,AkBbA,AnBcD,AGuBD,AJID,AqBnCA,ErBmCA,CFRA,AMEA,CTiCA,ACKA,AK3DE,CNsDD,ACKA,AMjEC,EmBFF,CAAA,CrBmCA,CAAA,EC3BU,CAAC,AoBRX,GAAA,CpBQE,CAAc,CD2BhB,CAAA,CqBnCA,OrBmCA,CC3BE,CAA0B,CD2B5B,KC3BE,EAVF,CAWE,ID0BF;AE3BC,AF4BC,AcpCJ,AORA,GnBOU,CPiED,ACKA,AyB7EH,GPQN,CAAA,CdoCS,GqB5CK,GAAG,CrB4Cb,CAAa,AcpCjB,CAAA,CnBgEiB,A0BxEI,CzB6EL,CIjCZ,AcpCW,CnBgEb,CCKA,CIjCsB,CcpCxB,IdoC6B,AqB5CR,CAAA,E1BwEF,CCKD,GIjCM,EAApB,CL4B8B,ACKA,AyB7Eb,CAAJ,C1BwEmB,C0BxEpC,M1BwEmD;AGhCjD,AsBrCE,AnBeA,AGuBF,AJIE,AqBpCF,EvB+BA,AMCA,KAAA,AiBhCA,C1BgEE,ACKA,AEtCF,AMCA,AiBhCA,CvB+BA,AsBrCO,ApB0CA,EC3BE,INuDA,ACKA,AwB3EP,CAAY,ApB0CZ,AqBpCF,CjBgCA,AJIe,CFLf,AGtBgB,AGuBhB,CTgCa,ACKA,AEtCb,AGtBiB,AoBTjB,C1BgEc,CyBtEZ,CAAkB,CzBsEH,CAAC,AShClB,EgBtCE,ApB0CA,CJiCmB,AwB3EI,AhBsCzB,AiBhCA,CzBqEsB,CIjCK,EL4BF,AMvDhB,CmBfP,AnBe6B,CNuDJ,AGjC3B,AGtBS,CL4DmB,AIjCI,CJiCH,AK5DK,CL4DJ,AEtC9B,AGtBS,EAA4B,CL4DJ,AQrCjC,AJIE,CL4BgC,ACKA,CDLC,ACKA,CDLC,CCKC,AK5DK,ENuDH,EAAE,CAAA,AGjCzC,AGtBS,CL4DkC,CAAC,AK5DK,CL4DJ,GAAG,CAAC,AK5DK,CL4DJ,EAAE,GK5D3C,CAAP,EL4DwD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AErChE,AIvBF,AkBdC,AnBeA,AGuBC,AJIA,EE5BF,CkBxBA,AnBYA,CNoEA,ACKA,CDLC,ACKA,GQrCK,CNDC,AMCA,AJIA,KE5BP,AEwBY,CFxBZ,CF4BE,CAAa,EFLb,GAAkB,EIvBpB,AEwBO,AJIL,CE5BF,CEwBE,CNDA,AEKuB,CIJC,IJII,EE5B9B,GAAA,EF4BE,QE5BQ,IAAV,EAAwB;AJwBvB,AIvBC,ADCJ,AGuBM,AJIF,GFPF,CHoCO,ACKA,EQtCH,EFxBE,CAAC,AF4BA,IIJI,CFxBC,AEwBA,EJIV,CAAa,CIJX,CAAa,CTiCD,CCKD,EDLf,CCKA,CIlCE,GAAwB,EE5BxB,EAA4B,CPyDZ,AK7Ba,CJkCd,KDLe,ECKE,AIlChC,EJkCkC,OAAiB,AQtCjD;AFvBA,AkBfN,AhBuCM,AJIF,MIJE,ETiCF,ACKA,CwB7EJ,ApB2CS,EE5BE,IPyDA,ACKA,CQtCK,AJIZ,CoB3CJ,AhBuCiB,AJIA,EL6BF,ACKA,CDLC,ACKA,EQtCM,CTiCH,ACKA,CDLC,ACKA,GM9Dd,CEwBW,AJIb,CIJyB,CTiCH,AOzDI,CN8DH,AM9DI,AF4BA,CL6BH,CCKC,AQtCZ,CAAiB,EFxBE,AF4BA,EL6BF,ASjCjB,CTiCkB,ASjCnB,CRsCoB,CAAC,AQtCI,CTiCH,ACKA,EDLE,ASjCxB,CTiCyB,ACKA,AQtCnC,AJIF,CL6BqC,CCKE,CAAA,IM9DrC;AJwBJ,AIvBI,AkB3DN,AhBmFK,AJID,CoBvFJ,CtBkFE,AsBlFqB,EzBoHrB,ACKA,CDLC,ACKA,AQzCC,GNEF,CAAA,AsBlFqB,ApBuFd,CoBvFc,ClB2DZ,AEwBA,KJIP,CAAa,CFLf,CAAA,AsBlFqB,CAAvB,CAAA,ClB2DM,CAAiB,GF4BnB,GAAyB,IFL3B,AIvB+B,CAAC,AF4BA,EFLhC,OIvBI,AF4BF,EE5ByC,GJuB3C,EIvBgD,gBAA5C;AJwBF,AIvBC,AEwBC,AJIF,IL8BK,ACKA,KExCA,AEKA,EIJE,KTkCG,AK9BV,CAAa,EL8Bf,AGnCE,GFwCc,AExCI,AMChB,GRuCJ,CInCE,CFLA,EHmCY,AK9Ba,KAAK,CJmCd,CDLW,EAAE,GCKG,EInChC,EL8B4C;AGlC7C,AsBvCH,AhBwCM,AJIF,GFPF,IsBrCF,CzB0EI,ACKA,AwB/EJ,CpB4CS,EIJE,ITkCA,ACKA,CInCP,CoB5CJ,AhBwCM,AJIW,CoB5CjB,AhBwCkB,CRuCH,CAAC,CwB/ED,CzB0EG,CAAC,ACKA,CDLC,ACKA,CQvCd,CAAoB,CTkCH,CK9BnB,CoB5CJ,CxB+E0B,CInCK,CJmCH,EDLE,CAAC,CAAC,ASlCN,AJIU,EJmCF,CDLC,ACKA,EQvCT,CRuCY,CQvCP,CRuCS,CAAC,CDLC,ACKD,CDLE,AK9BvC,CL8BwC,GAAG,OAAO,CAAC,CAAC,CAAA;AO1DpD,AEwB+B,AJK/B,IL8BF,ACKA,CDLC,ACKA,IMhEM,AF6BA,MIL0B,CJK/B,CAAa,GILuB,CAAC,IFxBrC,CAAsB,CEwBS,EAAA,AJK/B,CE7BA,CAA2B,CF6BC,GE7BG,CAAC,CF6BC,GE7BN,CAAU,IAAV,CAA3B,GF6BA;AFJF,AIxBC,AEuB8C,AJM7C,EFLF,CI9BA,CPkEO,ACKA,GQ1CH,CNCJ,CAAA,AEKO,OAAL,CAAa,CL+BD,ACKF,AEzCZ,CAAA,EHoCA,ACKA,EEzCA,GAAA,CEKE,GAA0B,CL+BZ,ACKF,CDLW,EAAE,CAAS,AK/BH,CFL5B,EFyC0B,EAAE,CEzCjC,EAAsB,EEKpB,EJoCgD,GEzClD,EAAuC;AACrC,AMDE,AJMF,QL+BA,ACKA,CEzCK,AEKA,EINE,ITqCA,ACKA,CEzCP,AEKA,CFLa,AMDX,AJMW,CINC,CTqCH,GCKG,CAAC,CAAC,AQ1Cd,CTqCe,CAAC,AGpClB,CHoCmB,ACKA,AEzCI,AEKvB,GL+BsB,AK/BI,EFLE,CAAC,CHoCH,ACKA,AEzC1B,CHoC2B,ACKA,AIpCI,CJoCH,AEzCI,GFyCD,EDLE,AGpCI,CAAC,CHoCH,AGpCnC,EHoCqC,AK/BrC,CL+BsC,ACKA,CAAC,CAAC,CDLC,ECKE,EDLE,CAAC,ICKI,CAAC,CDLC,ACKA,CAAA,CDLE,CAAC,CAAA;AGnCvD,AIxBF,AEuBG,AK7BF,ATmCC,EE7BF,COrBA,CdiFA,ACKA,CDLC,ACKA,IEzCM,AEKA,KE7BP,CAAA,CJwBE,AEKA,CFLa,AEKA,KFLb,CAAmB,CIxBrB,CAAA,KJwB4B,AEK1B,CFL2B,CAA3B,AIxBF,CF6B+B,CFLC,CIxBhC,GF6BoC,GFLG,CAAC,CAAtC,EIxBM,IAAR,EAAsB,AF6BpB;AFJA,AIxBA,AEuBD,AJMC,GIfF,CT+CO,ACKA,IMlED,CJwBC,AIxBA,AF6BA,KE7BK,EJwBV,AEKA,CLgCW,AGrCE,AEKA,EJqCF,CDLb,ECKA,IE1CE,CAAuB,CAAC,AIxBxB,EP6Da,AO7Da,AF6B1B,CLgC0B,CCKb,CDLe,ACKN,AE1CO,AEKA,CLgCY,AGrCX,CF0CN,AE1CxB,CF0CiC,CE1CA,CF0CE,AE1CD,AEKA,CJqCU,IE1CL,CAAC,CAAxC,MEKA;AFJD,AIxBG,AOPN,AToCG,GFTD,AELA,KL6Ce,ACMb,CazEJ,EPOW,CNkEH,IAAI,AazEZ,CbyEa,MAAM,EAAE,AMlEf,CP4DW,EAAA,ACMO,AMlEI,CAAC,ENkEF,EDNG,ACMD,CMlEK,cAA5B;AACA,AEsBN,AKxFA,ATgGE,CShGF,CAAsB,Md6HU,CSrChC,EFtBW,AOlEW,CboIhB,AapIgB,ELwFtB,KR4Ca,EapIS,CPkEhB,AOlEN,CboIiB,AMlEM,AOlEvB,Gd6HgC,EAAA,GCOP,CAAC,CDPmB,ACOlB,AMlEM,CAAC,ENkEJ,IAAI,CAAC,AMlE7B,EAAqC,INkEF,CMlEO,CNkEL,EAAE,CAAC,GAAG,IAAI,CAAC,EMlEhD,INkEsD,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;AEzChF,AIxBG,AEjEL,CAAA,CNyFE,CMzFF,KT4HI,AGnCF,CF0CG,AE1CH,GHmCM,EAAE,GAAG,CAAC,AGnCZ,CHmCY,AGnCZ,SAAA,GAAA,UAAU,CAAV,EAAqB,CAArB,EAA8B;AAC5B,AWhCJ,OAAA,CdmEI,AcnEJ,CXgCS,GHmCD,CCMG,CDND,GAAG,AGnCT,AWhCJ,CdmEc,AGnCI,AWhClB,CdmEc,AGnCV,EWhCW,EXgCQ,CAAnB,IWhCJ;AXiCI,AIzBA,AEsBJ,OAAA,CTsCI,AStCJ,CNGS,AIzBA,GP4DD,ACMF,IDNM,CAAC,AGnCT,AMHJ,CNGkB,AMHlB,CR4Ca,AEzCT,EMHW,ETsCI,ACMF,AEzCM,AIzBnB,CJyBA,AIzBoB,CP4DH,CStCrB,ETsCwB,AO5DpB,CAAyB,EP4DF,ACMF,CAAC,CAAC,AMlEM,CNkEL,AMlEM,GNkEH,CMlEF,CAAU,ENkEJ,CAAC,CMlEP,CAAzB,INkEsC,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;AExCjF,AIzBD,GAND,MNwEG,AEzCI,GHkCoB,EAAE,EGlC3B,CHkC8B,AGlCjB,CHkCkB,CAAC,CAAA,MGlChC,CAAuB,CAAvB,EAA0B,CAA1B;AACD,GAJD,CF6CA,CAAC,GDPC,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;AO1DzB,ACQA,EDRA,ACQA,EP0DF,KO1DE,CAAA,ERkD2B,EAAE,AO1D7B,CAAA,EP0DgC,CAAC,CAAC,ACQnC,AO1DC,CRkDkC,AQlDlC,IDRA,CAAA,KAAA,ECQA,CDRA,ECQA,QDRM,IAAN,ACQA,EDRoB;ANkEtB,AExCE,AIzBE,ACQA,CPnFJ,AA4IC,CExCC,GFwCD,GDPG,AGjCF,AIzBM,CJyBN,AIzBO,ECQE,GDRG,CP0DH,AQlDI,GLiBb,CHiCa,AGjCb,MHiCmB,AGjCnB,CHiCoB,AO1DlB,CP0DmB,CGjCrB,AIzB0B,CCQb,CRkDW,AQlDX,IRkDe,CAAC,GQlDpB,CAAa,CLiBtB,CHiCmC,EAAE,CQlDV,ERkDa,EAAE,EAAE,CAAC,CQlDvB,CAAc,CRkDY,AQlD1B,GAAmB,CRkDW,CAAC,GQlDP,GRkDa,EAAE,CQlDpB,CAAY,CRkDW,AQlDvB,ERkDyB,CAAC,AQlDV,CRkDU,IQlDL,KAArD,EAA6D,KAAK,QAAL,CAAc,CAAd,GAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAArG,CAAP;AP2DJ,AEzCI,AIzBE,ACQH,GAFD,CRoDA,CAAC,GGjCK,GIzBG,EJyBE,QFyCE,EMlET,GAAoB,CAAC,ENkEJ,CAAA,EEzCnB,AIzB4B,EJyBE,UIzB5B;ANoEN,AE1CM,AIzBA,ACQN,IRkDA,OGjCW,AIzBA,MP0DV,EGjCK,CAAc,EIzBd,CJyBA,AIzBiB,CJyBC,KAAK,IIzBI,CAAC,OJyB5B,EIzBA,EAAuC,KAAK,YAA5C;AP0DN,AGhCM,AIzBD,AF8BH,CL7GF,AAwIC,CK3BC,GL2BD,IK3BC,CAAA,CFLS,QAAL,AEKJ,CFLkB,AEKlB,IFLI,CAAmB,CEKvB,GAAA,CFL4B,QAAxB,GEKJ;AL6BF,AGjCM,AEKF,WFLO,SAAL,CHiCS,AGjCM,KAAK,CHiCL,CAAA,MGjCA,CAAc,CAA7B,EAAgC,KAAK,QAAL,CAAc,CAA9C;AACA,AI1BF,AF+BA,SE/BK,AF+BA,EFLE,KEKP,CAAa,EFLX,CAAc,CI1BhB,CAAkB,CJ0BhB,CAAkB,EI1BpB,AF+BA,CE/BuB,EJ0BE,AEG3B,CAGE,CEhC2B,CAAC,IAAL,CJ0BrB,AI1B+B,IAAV,CAAvB;AJ2BE,AI1BH,GAND,QJgCS,YAAL,CAAkB,IAAlB;AACD,AEKD,SAAK,QAAL;AE9BF,ADEA,AD6BE,EE/BF,ADEA,KAAA,CAAA,CD6BO,KE/BP,CAAA,EDEA,CAAA,CD6BE,GALF,CAME,CEhCF,CAAA,ADEA,GAAA,MCFA,GAAA,CDEQ,IAAR,EAAsB,CAErB,CAFD,CCFU,IAAV,EAAwB;AJ0BtB,AI1BF,AFiCE,QFPI,AI1BN,KJ0BW,AI1BX,GAAA,IAAA,GJ0BM,IAAmB,KAAK,UAA5B,EAAwC;AACtC,AGtBJ,AD6BC,EC7BD,CDqBA,ICrBA,CAAA,EHsBU,MAAM,CGtBhB,CAAA,CHsBmB,WGtBnB,GHsBmB,AGtBnB,CHsBmB,QAAA,CAAS,EGtB5B,CHsBmB,CAAa,KAAK,aAAlB,EAAiC,KAAK,gBAAtC,CAAf;AACA,AI3BF,ADKA,QCLI,CAAC,EJ2BE,AGtBA,GCLG,CDKC,SHsBT,CI3BF,EJ2BuB,AI3BA,EDKZ,CAAA,EHsBiB,MGtBrB,CAAa,KAAK,IHsBF,CAAsB,GGtBzB,CHsBG,AGtBW,CAAd,CHsBlB,EGtBqC,KAAK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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class Vector {\r\n  public x: number\r\n  public y: number\r\n\r\n  constructor (x: number = 0, y: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  add (vector: Vector): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  sub (vector: Vector): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  dot (vector: Vector): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  distance (vector: Vector): number {\r\n    return Vector.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle: number): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector, speed: number = 1, stop: number = 1): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector.normalize(Vector.sub(vector, this))\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  static add (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x + vector2.x, vector1.y + vector2.y)\r\n  }\r\n\r\n  static sub (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x - vector2.x, vector1.y - vector2.y)\r\n  }\r\n\r\n  static mult (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  static div (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector): Vector {\r\n    return new Vector(vector.x * -1, vector.y * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector, vector2: Vector): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector): Vector {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector, vector2: Vector): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static randomP (x: number, y: number): Vector {\r\n    return new Vector(x * Math.random(), y * Math.random())\r\n  }\r\n\r\n  static random (x: number = 1, y: number = 1): Vector {\r\n    let s1 = 1\r\n    let s2 = 1\r\n    if (Math.random() > 0.5) s1 = -1\r\n    if (Math.random() > 0.5) s2 = -1\r\n    return new Vector(x * Math.random() * s1, y * Math.random() * s2)\r\n  }\r\n}\r\n\r\nexport default Vector\r\n  ","\r\nclass Vector3D {\r\n  public x: number\r\n  public y: number\r\n  public z: number\r\n\r\n  constructor (x: number, y: number, z: number) {\r\n    this.x = x\r\n    this.y = y\r\n    this.z = z\r\n  }\r\n\r\n  add (vector: Vector3D): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n    this.z += vector.z\r\n  }\r\n\r\n  sub (vector: Vector3D): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n    this.z -= vector.z\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n    this.z *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n    this.z /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n    this.z *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n  }\r\n\r\n  dot (vector: Vector3D): number {\r\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z\r\n  }\r\n\r\n  distance (vector: Vector3D): number {\r\n    return Vector3D.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector3D {\r\n    return new Vector3D(this.x, this.y, this.z)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle: number): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector3D, speed: number, stop: number): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector3D.normalize(vector)\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n    this.z = 0\r\n  }\r\n\r\n  static add (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x + vector2.x, vector1.y + vector2.y, vector1.z + vector2.z)\r\n  }\r\n\r\n  static sub (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x - vector2.x, vector1.y - vector2.y, vector1.z - vector2.z)\r\n  }\r\n\r\n  static mult (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x * scalar, vector.y * scalar, vector.z * scalar)\r\n  }\r\n\r\n  static div (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x / scalar, vector.y / scalar, vector.z / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector3D): Vector3D {\r\n    return new Vector3D(vector.x * -1, vector.y * -1, vector.z * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector3D, vector2: Vector3D): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector3D): Vector3D {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector3D, vector2: Vector3D): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static random (x: number, y: number, z: number): Vector3D {\r\n    if (Math.random() > 0.5) {\r\n      return new Vector3D(x * Math.random(), y * Math.random(), z * Math.random())\r\n    } else {\r\n      return new Vector3D(-x * Math.random(), -y * Math.random(), -z * Math.random())\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vector3D\r\n\r\n/*\r\n\r\nTO ADD\r\n\r\nimport vector from '../vector'\r\n\r\nfunction rotate (x, y, z, center, vec) {\r\n  let vecR\r\n  vecR = vector.sub(vec, center)\r\n  vecR = rotateX(vecR, x)\r\n  vecR = rotateY(vecR, y)\r\n  vecR = rotateZ(vecR, z)\r\n  vecR = vector.add(vecR, center)\r\n  return vecR\r\n}\r\n\r\nfunction rotateX (vec, t) {\r\n  let vecR = vec\r\n  let newy = vec[1] * Math.cos(t) - vec[2] * Math.sin(t)\r\n  let newz = vec[1] * Math.sin(t) + vec[2] * Math.cos(t)\r\n  vecR[1] = newy\r\n  vecR[2] = newz\r\n  return vecR\r\n}\r\n\r\nfunction rotateY (vec, t) {\r\n  let vecR = vec\r\n  let newz = vec[2] * Math.cos(t) - vec[0] * Math.sin(t)\r\n  let newx = vec[2] * Math.sin(t) + vec[0] * Math.cos(t)\r\n  vecR[2] = newz\r\n  vecR[0] = newx\r\n  return vecR\r\n}\r\n\r\nfunction rotateZ (vec, t) {\r\n  let vecR = vec\r\n  let newx = vec[0] * Math.cos(t) - vec[1] * Math.sin(t)\r\n  let newy = vec[0] * Math.sin(t) + vec[1] * Math.cos(t)\r\n  vecR[0] = newx\r\n  vecR[1] = newy\r\n  return vecR\r\n}\r\n\r\nconst memlength = (vec) => Math.pow(Math.pow(vec[0], 2) + Math.pow(vec[1], 2) + Math.pow(vec[2], 2), 0.5)\r\n\r\nconst normal = (v1, v2, v3) => vector.cross(vector.sub(v2, v1), vector.sub(v3, v1))\r\n\r\nfunction isInTriangle (vec, triangle) {\r\n  let u = vector.sub(triangle.v2, triangle.v1)\r\n  let v = vector.sub(triangle.v3, triangle.v1)\r\n  let w = vector.sub(vec, triangle.v1)\r\n\r\n  let vCrossW = vector.cross(v, w)\r\n  let vCrossU = vector.cross(v, u)\r\n\r\n  if (vector3.dot(vCrossW, vCrossU) < 0) return false\r\n\r\n  let uCrossW = vector.cross(u, w)\r\n  let uCrossV = vector.cross(u, v)\r\n\r\n  if (vector3.dot(uCrossW, uCrossV) < 0) return false\r\n\r\n  let denom = memlength(uCrossV)\r\n  let r = memlength(vCrossW) / denom\r\n  let t = memlength(uCrossW) / denom\r\n\r\n  return (r + t <= 1)\r\n}\r\n\r\nfunction getTriangleArea (triangle) {\r\n  let temp = vector.cross(vector.sub(triangle.v3, triangle.v1), vector.sub(triangle.v3, triangle.v2))\r\n  let x = Math.pow(temp[0], 2)\r\n  let y = Math.pow(temp[1], 2)\r\n  let z = Math.pow(temp[2], 2)\r\n  return Math.pow(x + y + z, 0.5) / 2\r\n}\r\n\r\nfunction dot (vec1, vec2) {\r\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1] + vec1[2] * vec2[2]\r\n}\r\n\r\nfunction getPlaneIntersect (line1, line2, triangle) {\r\n  let normal = triangle.normal\r\n  let u = vector3.dot(normal, vector.sub(triangle.v1, line1)) / vector3.dot(normal, vector.sub(line2, line1))\r\n  return vector.add(line1, vector.mult(vector.sub(line2, line1), u))\r\n}\r\n\r\nconst vector3 = { dot, rotate, normal, isInTriangle, getTriangleArea, getPlaneIntersect, memlength }\r\n\r\nexport default vector3\r\n\r\n*/","\r\nimport Vector2D from './Vector2D'\r\nimport Vector3D from './Vector3D'\r\n\r\nexport {\r\n  Vector2D,\r\n  Vector3D\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport Graphic from './graphics/Graphic'\r\nimport Scene from './Scene'\r\nimport {mouse} from './index'\r\n\r\nclass Camera {\r\n  public context: CanvasRenderingContext2D\r\n  public keyMap = { up: 'w', down: 's', left: 'a', right: 'd' }\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  private followedPosition: Vector2D\r\n  private fLastPosition: Vector2D = new Vector2D(0, 0)\r\n  private followingX: boolean = false\r\n  private followingY: boolean = false\r\n  private keyTranslateEnabled: boolean = false\r\n  private velocity: Vector2D = new Vector2D(0, 0)\r\n  private acceleration: Vector2D = new Vector2D(0, 0)\r\n  private friction: number = 0.9\r\n\r\n  constructor (context: CanvasRenderingContext2D) {\r\n    this.context = context\r\n  }\r\n\r\n  addForce(force: Vector2D): void {\r\n    this.acceleration.add(force)\r\n  }\r\n/*\r\n  enable() {\r\n    document.addEventListener('mousemove', (e) => {\r\n      this.mouse.position.x = e.clientX\r\n      this.mouse.position.y = e.clientY\r\n    })\r\n  }\r\n*/\r\n  getMouse () {\r\n    return Vector2D.add(mouse.position, this.position)\r\n  }\r\n\r\n  disableKeyTranslate() {\r\n\r\n  }\r\n\r\n  enableKeyTranslate() {\r\n    this.keyTranslateEnabled = true\r\n    document.addEventListener('keypress', (e) => {\r\n      if (e.key.toLowerCase() === this.keyMap.up) {\r\n        this.addForce(new Vector2D(0, 10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.down) {\r\n        this.addForce(new Vector2D(0, -10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.left) {\r\n        this.addForce(new Vector2D(10, 0))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.right) {\r\n        this.addForce(new Vector2D(-10, 0))\r\n      }\r\n    })\r\n  }\r\n\r\n  follow(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.fLastPosition = this.followedPosition.copy()\r\n    this.followingX = true\r\n    this.followingY = true\r\n  }\r\n\r\n  followX(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingX = true\r\n  }\r\n\r\n  followY(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingY = true\r\n  }\r\n\r\n  stopFollowing(): void {\r\n    this.followingX = false\r\n    this.followingY = false\r\n  }\r\n\r\n  stopFollowingX(): void {\r\n    this.followingX = false\r\n  }\r\n\r\n  stopFollowingY(): void {\r\n    this.followingY = false\r\n  }\r\n\r\n  zoom(where: Vector2D, howMuch: Vector2D): void {\r\n    this.context.translate(where.x, where.y)\r\n    this.context.scale(howMuch.x, howMuch.y)\r\n    this.context.translate(-where.x, -where.y)\r\n  }\r\n\r\n  translate(x: number, y: number): void {\r\n    this.position.x -= x\r\n    this.position.y -= y\r\n    this.context.translate(x, y)\r\n  }\r\n\r\n  update() {\r\n    if (this.keyTranslateEnabled) {\r\n      this.velocity.add(this.acceleration)\r\n      this.velocity.mult(this.friction)\r\n      this.translate(this.velocity.x, this.velocity.y)\r\n      this.position.add(this.velocity)\r\n      this.acceleration.zero()\r\n    }\r\n    if (this.followingX || this.followingY) {\r\n      const change = Vector2D.sub(this.fLastPosition, this.followedPosition)\r\n      this.fLastPosition = this.followedPosition.copy()\r\n      this.translate(change.x, change.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Camera\r\n","export enum LineCap {\r\n  butt = 'butt',\r\n  square = 'square',\r\n  round = 'round'\r\n}\r\n\r\nexport enum LineJoin {\r\n  bevel = 'bevel',\r\n  round = 'round',\r\n  miter = 'miter'\r\n}\r\n\r\nexport enum Pattern {\r\n  repeat = 'repeat',\r\n  repeat_x = 'repeat-x',\r\n  repeat_y = 'repeat-y',\r\n  no_repeat = 'no-repeat'\r\n}\r\n\r\nexport enum weights {\r\n  lighter = 'lighter',\r\n  normal = 'normal',\r\n  bolder = 'bolder',\r\n  bold = 'bold'\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport { weights, LineCap, LineJoin } from '../Properties'\r\n\r\nclass Graphic {\r\n  public weight: weights = weights.normal\r\n  public context: any\r\n  public linearGradient: any\r\n  public fill: Boolean = true\r\n  public stroke: Boolean = false\r\n  public anchor: Vector2D = new Vector2D(0.5, 0.5)\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public color: String = 'grey'\r\n  public family: String = 'Arial'\r\n  public lineCap: String = LineCap.round\r\n  public lineJoin: String = LineJoin.round\r\n  public lineColor: String = 'rgb(0, 0, 0)'\r\n  public textAlign: String = 'center'\r\n  public shadowColor: String = 'rgba(0, 0, 0, 0)'\r\n  public textBaseline: String = 'middle'\r\n  public size: Number = 12\r\n  public rotation: Number = 0\r\n  public z_index: Number = 1\r\n  public lineWidth: Number = 1\r\n  public miterLimit: Number = 10\r\n  public shadowBlur: Number = 0\r\n  public shadowOffsetX: Number = 0\r\n  public shadowOffsetY: Number = 0\r\n  public childs: Array<any> = []\r\n\r\n  constructor(data?: any) {\r\n    if (data) {\r\n      if (data.stroke !== undefined) {\r\n        if (typeof data.stroke === 'boolean') {\r\n          this.stroke = data.stroke\r\n        } else {\r\n          console.info(`Type of stroke is not boolean`)\r\n        }\r\n      } else {\r\n        this.stroke = false\r\n      }\r\n      if (data.fill !== undefined) {\r\n        if (typeof data.fill === 'boolean') {\r\n          this.fill = data.fill\r\n        } else {\r\n          console.info(`Type of fill is not boolean`)\r\n        }\r\n      } else {\r\n        this.fill = true\r\n      }\r\n      this.weight = data.weights ? data.weights : weights.normal\r\n      this.anchor = data.anchor ? data.anchor : new Vector2D(0.5, 0.5)\r\n      this.position = data.position ? data.position : new Vector2D(0, 0)\r\n      this.z_index = data.z_index ? data.z_index : 1\r\n      this.shadowBlur = data.shadowBlur ? data.shadowBlur : 0\r\n      this.shadowOffsetX = data.shadowOffsetX ? data.shadowOffsetX : 0\r\n      this.shadowOffsetY = data.shadowOffsetY ? data.shadowOffsetY : 0\r\n      this.shadowColor = data.shadowColor ? data.shadowColor : 'rgba(0,0,0,0)'\r\n      this.miterLimit = data.miterLimit ? data.miterLimit : 10\r\n      this.lineCap = data.lineCap ? data.lineCap : LineCap.round\r\n      this.color = data.color ? data.color : 'grey'\r\n      this.family = data.family ? data.family : 'Arial'\r\n      this.lineJoin = data.lineJoin ? data.lineJoin : LineJoin.round\r\n      this.lineColor = data.lineColor ? data.lineColor : 'rgb(50, 50, 50)'\r\n      this.textAlign = data.textAlign ? data.textAlign : 'center'\r\n      this.textBaseline = data.textBaseline ? data.textBaseline : 'middle'\r\n      this.size = data.size ? data.size : 12\r\n      this.rotation = data.rotation ? data.rotation : 0\r\n      this.lineWidth = data.lineWidth ? data.lineWidth : 1\r\n    }\r\n  }\r\n\r\n  add(child: any): void {\r\n    child.context = this.context\r\n    this.childs.push(child)\r\n  }\r\n\r\n  remove(child: any): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  getFont() {\r\n    return `${this.weight} ${this.size}px ${this.family}`\r\n  }\r\n\r\n  setStyle(): void {\r\n    this.context.font = this.getFont()\r\n    this.context.fillStyle = this.color\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.textAlign = this.textAlign\r\n    this.context.shadowColor = this.shadowColor\r\n    this.context.textBaseline = this.textBaseline\r\n    this.context.miterLimit = this.miterLimit\r\n    this.context.shadowBlur = this.shadowBlur\r\n    this.context.shadowOffsetX = this.shadowOffsetX\r\n    this.context.shadowOffsetY = this.shadowOffsetY\r\n  }\r\n\r\n  /*\r\n      Most be somewhere here\r\n  \r\n      this.childs.forEach(c => c.context = this.context)\r\n      this.childs.forEach(c => c.render())\r\n  \r\n  \r\n  */\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.context.beginPath()\r\n    // if (this.context.fill || this.context.stroke) {\r\n    this.setStyle()\r\n    this.selfRender()\r\n    // }\r\n    // this.context.restore()\r\n  }\r\n\r\n  selfRender() { }\r\n}\r\n\r\nexport default Graphic\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n-------------------------------- GRUPO --------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Graphic from './graphics/Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nexport default class Group {\r\n  private childs: Array<Graphic> = []\r\n  private context: CanvasRenderingContext2D\r\n  public position: Vector2D = new Vector2D(0, 0) // la posicion tu la tenias publica, asi que no tiene sentido ese metodo de translate que querias hacer\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number\r\n\r\n  add(child: Graphic): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  scaleObject(child: any) {\r\n    if (child.type == \"arc\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else if (child.type == \"line\") {\r\n      child.end = new Vector(child.end.x * this.scale.x, child.end.y * this.scale.y)\r\n      child.render()\r\n      child.end = new Vector(child.end.x / this.scale.x, child.end.y / this.scale.y)\r\n    } else if (child.type == \"img\" || child.type == \"rect\") {\r\n      child.width *= this.scale.x\r\n      child.height *= this.scale.y\r\n      child.render()\r\n      child.width /= this.scale.x\r\n      child.height /= this.scale.y\r\n    } else if (child.type == \"poligon\") {\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x * this.scale.x, pnt.y * this.scale.y)\r\n      })\r\n      child.render()\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x / this.scale.x, pnt.y / this.scale.y)\r\n      })\r\n    } else if (child.type == \"circle\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else {\r\n      throw \"error, no se puede escalar dicho objeto\"\r\n    }\r\n    return child\r\n  }\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.childs.forEach((child) => {\r\n      child.position.add(this.position)\r\n      child.context = this.context\r\n      child.render()\r\n      child.position.sub(this.position)\r\n    })\r\n    // this.context.restore()\r\n  }\r\n}\r\n\r\n*/","import Graphic from '../graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Video extends Graphic {\r\n  public width: number\r\n  public height: number\r\n  public opacity: number\r\n  public video: HTMLVideoElement\r\n  public angle: number\r\n  public type: string = \"img\"\r\n  public data: any\r\n  public ready: boolean = false\r\n  public todo: Array<Function> = []\r\n  public params: Array<any> = []\r\n  public filterEnable: boolean = false\r\n  public filterColors: Array<number> = []\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.video = document.createElement('video')\r\n    this.video.src = data.src\r\n    this.video.play()\r\n    this.video.crossOrigin = \"Anonymous\"\r\n\r\n    this.video.addEventListener('loadedmetadata', () => {\r\n      this.ready = true\r\n      console.info(`Video ${data.src} correctly loaded.`)\r\n      console.log(this.todo)\r\n      console.log(this.params)\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n\r\n    this.video.addEventListener('error', () => {\r\n      console.error('Error loading the video...')\r\n    })\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.video.width\r\n    this.height = data.height ? data.height : this.video.height\r\n  }\r\n\r\n  filter() {\r\n\r\n  }\r\n\r\n  getImageData() {\r\n    const canvas = document.createElement('canvas')\r\n    // console.log(canvas)\r\n    document.body.appendChild(canvas)\r\n    const context = canvas.getContext('2d')\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.translate((this.anchor.x * this.width), (this.anchor.y * this.height))\r\n    context.rotate(this.angle)\r\n    context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    document.body.removeChild(canvas)\r\n    // return context.getImageData( -this.width / 2 , - this.height/2, this.width + this.width/2, this.height + this.height/2)\r\n    return context.getImageData( 0, 0, this.width, this.height)\r\n  }\r\n/*\r\n  removeColor(color: Array<number>) {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n*/\r\n  onClick(func: Function): void {\r\n\r\n  }\r\n  realPosition() {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n\r\n  renderData(): void {\r\n    if (this.filterEnable) {\r\n      this.filterColor(this.filterColors[0], this.filterColors[1], this.filterColors[2])\r\n    }\r\n  //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    // this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n\r\n  filterColor(r: number, g: number, b: number) {\r\n    if (this.ready) {\r\n      this.filterEnable = true\r\n      this.filterColors = [r, g, b]\r\n      let image = this.getImageData()\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        image.data[pixel] += r\r\n        image.data[pixel + 1] += g\r\n        image.data[pixel + 2] += b\r\n        // image.data[pixel + 3]\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.filterColor.bind(this))\r\n      this.params.push([r, g, b])\r\n    }\r\n    \r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Video\r\n","import Graphic from '../graphics/Graphic'\r\nimport Events from '../Events'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nenum EventNames {\r\n  mousemove = 'mousemove',\r\n  mousedown = 'mousedown',\r\n  mouseup = 'mouseup',\r\n}\r\n\r\nclass CircleEvents extends Graphic implements Events {\r\n  public radius: number\r\n  // Private\r\n  private moveEnabled: boolean = false\r\n  private hoverEnabled: boolean = false\r\n  private dragEndEnabled: boolean = false\r\n  private dragingEnabled: boolean = false\r\n  private mouseUpEnabled: boolean = false\r\n  private dragStartEnabled: boolean = false\r\n  private mouseDownEnabled: boolean = false\r\n\r\n  private moveMethods: Array<Function>\r\n  private hoverMethods: Array<Function>\r\n  private mouseUpMethods: Array<Function>\r\n  private dragingMethods: Array<Function>\r\n  private dragEndMethods: Array<Function>\r\n  private mouseDownMethods: Array<Function>\r\n  private dragStartMethods: Array<Function>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    this.moveMethods = []\r\n    this.hoverMethods = []\r\n    this.mouseUpMethods = []\r\n    this.dragingMethods = []\r\n    this.dragEndMethods = []\r\n    this.dragStartMethods =[]\r\n    this.mouseDownMethods = []\r\n\r\n    if (configuration) {\r\n      if (configuration.radius) this.radius = configuration.radius\r\n    }\r\n  }\r\n\r\n  checkIfInside(point: Vector2D): boolean {\r\n    return this.position.distance(point) < this.radius\r\n  }\r\n\r\n  private enableEvent (eventName: EventNames, methods: Array<Function>): void {\r\n    let mouse: Vector2D\r\n\r\n    document.addEventListener(eventName, (event) => {\r\n      mouse = new Vector2D(event.clientX, event.clientY)\r\n      if (this.checkIfInside(mouse)) {\r\n        methods.forEach((method: Function) => method(mouse))\r\n      }\r\n    })\r\n  }\r\n\r\n  mouseDown(func: Function): void {\r\n    if (!this.mouseDownEnabled) {\r\n      this.mouseDownEnabled = !this.mouseDownEnabled\r\n      this.enableEvent(EventNames.mousedown, this.mouseDownMethods)\r\n    }\r\n    this.mouseDownMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseUp(func: Function): void {\r\n    if (!this.mouseUpEnabled) {\r\n      this.mouseUpEnabled = !this.mouseUpEnabled\r\n      this.enableEvent(EventNames.mouseup, this.mouseUpMethods)\r\n    }\r\n    this.mouseUpMethods.push(func.bind(this))\r\n  }\r\n\r\n  hover(func: Function): void {\r\n    if (!this.hoverEnabled) {\r\n      this.hoverEnabled = !this.hoverEnabled\r\n      this.enableEvent(EventNames.mousemove, this.hoverMethods)\r\n    }\r\n    this.hoverMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseMove(func: Function): void {\r\n    if (!this.moveEnabled) {\r\n      this.moveEnabled = !this.moveEnabled\r\n      let mouse: any\r\n      document.addEventListener('mousemove', (event) => {\r\n        mouse = new Vector2D(event.clientX, event.clientY)\r\n        this.moveMethods.forEach((method: Function) => method(mouse))\r\n      })\r\n    }\r\n    func = func.bind(this)\r\n    this.moveMethods.push(func)\r\n  }\r\n\r\n\r\n  dragStart(func: Function): void {\r\n    this.dragStartMethods.push(func.bind(this))\r\n  }\r\n\r\n  draging(func: Function): void {\r\n    this.dragingMethods.push(func.bind(this))\r\n  }\r\n\r\n  dragEnd(func: Function): void {\r\n    this.dragEndMethods.push(func.bind(this))\r\n  }\r\n\r\n  enableMouseDrag() {\r\n    let isDraging = false\r\n    let distance: Vector2D = new Vector2D()\r\n\r\n    document.addEventListener('mousemove', (event) => {\r\n      if (isDraging) {\r\n        this.position = Vector2D.add(distance, new Vector2D(event.clientX, event.clientY))\r\n        this.dragingMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseDown((mouse: Vector2D) => {\r\n      if (!isDraging) {\r\n        document.body.style.cursor = 'pointer'\r\n        isDraging = true\r\n        distance = Vector2D.sub(this.position, mouse)\r\n        this.position = Vector2D.add(distance, mouse)\r\n        this.dragStartMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseUp(() => {\r\n      if (isDraging) {\r\n        document.body.style.cursor = 'default'\r\n        isDraging = false\r\n        this.dragEndMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n  }  \r\n}\r\n\r\nexport default CircleEvents\r\n","import { Vector2D } from 'vector_class'\r\nimport CircleEvents from '../Events/CircleEvents'\r\n\r\n// Imaginary canvas\r\nconst canvas = document.createElement('canvas')\r\nconst context = canvas.getContext('2d')\r\n\r\nclass Picture extends CircleEvents {\r\n  public data: any\r\n  public angle: number\r\n  public width: number\r\n  public height: number\r\n  public ready: boolean\r\n  public opacity: number\r\n  public anchor: Vector2D\r\n  public params: Array<any>\r\n  public position: Vector2D\r\n  public todo: Array<Function>\r\n  public image: HTMLImageElement\r\n  public context: CanvasRenderingContext2D\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.position = new Vector2D(0, 0)\r\n    this.anchor = new Vector2D(0, 0)\r\n    this.ready = false\r\n    this.params = []\r\n    this.todo = []\r\n\r\n    this.image = new Image()\r\n    this.image.src = data.src\r\n    console.log(this.image)\r\n    this.image.addEventListener('load', () => {\r\n      this.ready = true\r\n      this.width = data.width ? data.width : this.image.width\r\n      this.height = data.height ? data.height : this.image.height\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n\r\n    this.image.addEventListener('error', (err) => {\r\n      console.log(err)\r\n      console.error('Error loading the image...')\r\n    })\r\n\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.image.width\r\n    this.height = data.height ? data.height : this.image.height\r\n  }\r\n\r\n  getImageData() {\r\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight)\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.drawImage(this.image, 0, 0, this.width, this.height)\r\n    return context.getImageData(0, 0, this.width, this.height)\r\n  }\r\n/*\r\n  removeColor(color: Array<number>): void {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n*/\r\n  realPosition(): Vector2D {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n/*\r\n  renderData(): void {\r\n    //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    //this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n*/\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.image, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Picture\r\n","import Render from './Render'\r\nimport Camera from './Camera'\r\nimport Video from './Media/Video'\r\nimport Picture from './Media/Picture'\r\nimport Graphic from './graphics/Graphic'\r\n\r\nclass Scene {\r\n  public backgroundColor: string\r\n  public camera: Camera\r\n  public renderer: Render\r\n  public childs: Array<any>\r\n  public frameRate: number\r\n  public interval: any\r\n  public context: CanvasRenderingContext2D\r\n\r\n  constructor(renderer: Render) {\r\n    this.childs = []\r\n    this.frameRate = 0\r\n    this.renderer = renderer\r\n    this.backgroundColor = 'black'\r\n    this.context = this.renderer.context\r\n    this.camera = new Camera(this.context)\r\n  }\r\n\r\n  dataLoaded(): boolean {\r\n    // Gets all the pictures and videos from the scene.\r\n    const elements = this.childs.filter((child) => {\r\n      if (child instanceof Picture) return true\r\n      if (child instanceof Video) return true\r\n      return false\r\n    })\r\n\r\n    // If there is an image that is not loaded returns false\r\n    return !elements.some((element) => !element.ready)\r\n  }\r\n\r\n  add(element: any): void {\r\n    element.context = this.context\r\n    this.childs.push(element)\r\n    this.organizeByZindex()\r\n  }\r\n\r\n  remove(element: Graphic): void {\r\n    let index = this.childs.indexOf(element)\r\n    if (index >= 0) {\r\n      this.childs.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  clearScreen(): void {\r\n    this.context.save()\r\n    this.context.setTransform(1, 0, 0, 1, 0, 0)\r\n    this.context.fillStyle = this.backgroundColor\r\n    this.context.fillRect(0, 0, window.innerWidth, window.innerHeight)\r\n    this.context.restore()\r\n  }\r\n\r\n  smoth(state: boolean): void {\r\n    if (this.context.imageSmoothingEnabled) {\r\n      this.context.imageSmoothingEnabled = state\r\n    } else if (this.context.mozImageSmoothingEnabled) {\r\n      this.context.mozImageSmoothingEnabled = state\r\n    } else if (this.context.webkitImageSmoothingEnabled) {\r\n      this.context.webkitImageSmoothingEnabled = state\r\n    }\r\n  }\r\n\r\n  organizeByZindex(): void {\r\n    this.childs.sort((a, b) => a.z_index - b.z_index)\r\n  }\r\n\r\n  autoRender(func?: Function): void {\r\n    this.interval = setInterval(() => {\r\n      if (func) func()\r\n      this.render()\r\n    }, this.frameRate)\r\n  }\r\n\r\n  stopAutoRender(): void {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  render(): void {\r\n    if (!this.dataLoaded()) {\r\n      console.info('Waiting for images to load...')\r\n      setTimeout(this.render.bind(this), 100)\r\n    } else {\r\n      this.clearScreen()\r\n      this.childs.forEach(child => child.render())\r\n      this.camera.update()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scene\r\n","import Scene from './Scene'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Render {\r\n  public scene: Scene\r\n  public canvas: HTMLCanvasElement\r\n  public context: CanvasRenderingContext2D\r\n  public frameRate: number = 1000 / 60\r\n\r\n  constructor(canvas?: HTMLCanvasElement, width?: number, height?: number) {\r\n    if (canvas) {\r\n      this.canvas = canvas\r\n    } else {\r\n      this.canvas = document.createElement('canvas')\r\n      document.body.appendChild(this.canvas)\r\n    }\r\n\r\n    if (width && height) {\r\n      this.canvas.width = width\r\n      this.canvas.height = height\r\n    } else {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    }\r\n\r\n    this.context = this.canvas.getContext('2d')\r\n    window.addEventListener('resize', () => {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    })\r\n  }\r\n\r\n  getWidth(): number {\r\n    return this.canvas.width\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.canvas.height\r\n  }\r\n\r\n  getSize(): Vector2D {\r\n    return new Vector2D(\r\n      this.canvas.width,\r\n      this.canvas.height)\r\n  }\r\n\r\n  getCanvasImage(): string {\r\n    return this.canvas.toDataURL()\r\n  }\r\n\r\n  fullScreen(): void {\r\n    let isFull = false\r\n    document.addEventListener('click', () => {\r\n      if (!isFull) {\r\n        this.canvas.webkitRequestFullScreen()\r\n      }\r\n    })\r\n  }\r\n\r\n  setScene(scene: Scene): void {\r\n    this.scene = scene\r\n    this.scene.renderer = this\r\n    this.scene.context = this.context\r\n    this.scene.smoth(false)\r\n  }\r\n}\r\n\r\nexport default Render\r\n","import Graphic from './graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass LinearGradient {\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D\r\n  public gradient: any\r\n  public size: Vector2D\r\n\r\n  constructor(config?: any) {\r\n    this.context = config.context\r\n    this.size = config.size ? config.size : new Vector2D(100, 100)\r\n    this.gradient = this.context.createLinearGradient(this.position.x, this.position.y, this.size.x, this.size.y)\r\n    let counter = 0\r\n    for (let color of config.colors) {\r\n      this.gradient.addColorStop(counter, color)\r\n      // console.log(1 / config.colors.length)\r\n      counter += 1 / config.colors.length\r\n    }\r\n  }\r\n}\r\n\r\nexport default LinearGradient\r\n","class Color {\r\n  public red  : number\r\n  public green: number\r\n  public blue : number\r\n  public alpha: number\r\n\r\n  constructor (red = 0, green = 0, blue = 0, alpha = 1) {\r\n    this.red   = Math.round(red * 255)\r\n    this.green = Math.round(green * 255)\r\n    this.blue  = Math.round(blue * 255)\r\n    this.alpha = alpha\r\n  \r\n    if (this.red > 255) this.red = 255\r\n    else if (this.red < 0) this.red = 0\r\n\r\n    if (this.green > 255) this.green = 255\r\n    else if (this.green < 0) this.green = 0\r\n\r\n    if (this.blue > 255) this.blue = 255\r\n    else if (this.blue < 0) this.blue = 0\r\n\r\n    if (this.alpha > 1) this.alpha = 1\r\n    else if (this.alpha < 0) this.alpha = 0\r\n  }\r\n\r\n  setRed (color: number) {\r\n    if (color > 255) {\r\n      this.red = 255\r\n    } else if (color < 0) {\r\n      this.red = 0\r\n    } else {\r\n      this.red = color\r\n    }\r\n  }\r\n\r\n  setGreen (color: number) {\r\n    if (color > 255) {\r\n      this.green = 255\r\n    } else if (color < 0) {\r\n      this.green = 0\r\n    } else {\r\n      this.green = color\r\n    }\r\n  }\r\n\r\n  setBlue (color: number) {\r\n    if (color > 255) {\r\n      this.blue = 255\r\n    } else if (color < 0) {\r\n      this.blue = 0\r\n    } else {\r\n      this.blue = color\r\n    }\r\n  }\r\n\r\n  rgba () {\r\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`\r\n  }\r\n\r\n  rgb () {\r\n    return `rgb(${this.red}, ${this.green}, ${this.blue})`\r\n  }\r\n\r\n  static random () {\r\n    return new Color(Math.random(), Math.random(), Math.random())\r\n  }\r\n}\r\n\r\nexport default Color\r\n","import { Vector2D } from 'vector_class'\r\n\r\nclass Animation {\r\n  public loop: boolean = true\r\n  public size: Vector2D = new Vector2D(32, 32)\r\n  public scale: Vector2D\r\n  public frameRate: number\r\n  public x: number\r\n  public y: number\r\n  public image: HTMLImageElement\r\n  public interval: any\r\n  public frame:Vector2D = new Vector2D(0, 0)\r\n  public animations: any\r\n  public animationPlaying: boolean = false\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D  \r\n  constructor(configuration: any) {\r\n    this.load(configuration.src)\r\n    this.loop = configuration.loop ? configuration.loop : true\r\n    this.size = configuration.size ? configuration.size : new Vector2D(32, 32)\r\n    this.scale = configuration.scale ? configuration.scale : new Vector2D(1, 1)\r\n    this.frameRate = configuration.frameRate ? configuration.frameRate : 24\r\n    this.animations = configuration.animations\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  playAnimation (name: string): void {    \r\n    if (!this.animationPlaying) {\r\n      this.animationPlaying = true\r\n      this.frame.x = 0\r\n      this.frame.y = this.animations[name][1]\r\n      this.reproduceAnimation(name)\r\n    }\r\n  }\r\n\r\n  reproduceAnimation (name: string): void {\r\n    this.x = this.size.x * this.frame.x\r\n    this.y = this.size.y * this.frame.y\r\n    this.frame.x += 1\r\n    if (this.frame.x >= this.animations[name][0]) {\r\n      this.animationPlaying = false\r\n    } else {\r\n      setTimeout(() => this.reproduceAnimation(name), this.frameRate)\r\n    }\r\n  }\r\n\r\n  mouseDown() {\r\n\r\n  }\r\n\r\n  onClick(func: Function): void { }\r\n\r\n  load(src: string): void {\r\n    this.image = new Image()\r\n    this.image.src = src\r\n  }\r\n\r\n  getSize() {\r\n    return new Vector2D(this.size.x * this.scale.x, this.size.y * this.scale.y)\r\n  }\r\n\r\n  render() {\r\n    this.context.drawImage(\r\n      this.image,\r\n      this.x,\r\n      this.y,\r\n      this.size.x, this.size.y,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size.x * this.scale.x,\r\n      this.size.y * this.scale.y\r\n    )\r\n  }\r\n\r\n  destroy() {\r\n    clearInterval(this.interval)\r\n  }\r\n}\r\n\r\nexport default Animation\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\nimport LinearGradient from '../LinearGradient'\r\n\r\nclass Ellipse extends Graphic {\r\n  public radiusX: number = 10\r\n  public radiusY: number = 5\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.lineWidth = configuration.lineWidth ? configuration.lineWidth : this.lineWidth\r\n      this.lineColor = configuration.lineColor ? configuration.lineColor : this.lineColor\r\n      this.radiusX = configuration.radiusX ? configuration.radiusX : this.radiusX\r\n      this.radiusY = configuration.radiusY ? configuration.radiusY : this.radiusY\r\n      this.stroke = configuration.stroke ? configuration.stroke : this.stroke\r\n      this.color = configuration.color ? configuration.color : this.color\r\n      this.fill = configuration.fill ? configuration.fill : this.fill\r\n      if (configuration.linearGradient) {\r\n        this.linearGradient = configuration.linearGradient\r\n        // this.render = this.renderGradient\r\n      }\r\n    }\r\n  }\r\n\r\n  renderGradient () {\r\n    this.color = new LinearGradient({\r\n      context: this.context,\r\n      colors: this.linearGradient,\r\n      size: new Vector2D(this.position.x, this.position.y + this.radiusY),\r\n      position: new Vector2D(this.position.x, this.position.y - this.radiusY / 2)\r\n    }).gradient\r\n\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this.renderGradient()\r\n    /*\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n    */\r\n  }\r\n}\r\n\r\nexport default Ellipse\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Poligon extends Graphic {\r\n  public cords: Array<Vector2D>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration.color) this.color = configuration.color\r\n    if (configuration.stroke) this.stroke = configuration.stroke\r\n    if (configuration.cords) this.cords = configuration.cords.slice(1, configuration.cords.length)\r\n    if (configuration.fill) this.fill = configuration.fill\r\n    this.position = configuration.cords.slice[0]\r\n    this.cords.filter((pnt) => {\r\n      return new Vector2D(pnt.x - this.position.x, pnt.y - this.position.y)\r\n    })\r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineCap = this.lineCap\r\n    this.context.fillStyle = this.color\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.moveTo(this.cords[0].x, this.cords[0].y)\r\n    for (var i = 0; i < this.cords.length; i++) {\r\n      this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y)\r\n    }\r\n\r\n    this.context.closePath()\r\n    this.context.fill()\r\n    if (this.stroke) this.context.stroke\r\n  }\r\n}\r\n\r\nexport default Poligon\r\n","\r\nimport CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Circle extends CircleEvents {\r\n  public radius: number = 5\r\n\r\n  constructor (config?: any) {\r\n    super(config)\r\n    if (config) {\r\n      this.radius = config.radius ? config.radius : 5\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  } \r\n}\r\n\r\nexport default Circle\r\n","import Graphic from './Graphic'\r\n\r\nclass Rect extends Graphic {\r\n  public width: number = 1\r\n  public height: number = 1\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data.width) this.width = data.width\r\n    if (data.height) this.height = data.height\r\n  }\r\n\r\n  selfRender(): void {\r\n    if (this.fill) {\r\n      this.context.fillRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.strokeRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Rect\r\n","import Graphic from './Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nclass Line extends Graphic {\r\n  public start: Vector2D = new Vector2D(0, 0)\r\n  public end: Vector2D = new Vector2D(1, 1)\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data) {\r\n      if (data.start) this.start = data.start\r\n      if (data.end) this.end = data.end\r\n      if (data.color) this.color = data.color\r\n      if (data.start) this.position = data.start\r\n      this.end = new Vector2D(this.end.x - this.start.x, this.end.y - this.start.y)\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    /*\r\n    this.context.strokeStyle = this.color\r\n    this.context.lineWidth = this.width\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    */\r\n   this.context.beginPath()\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.lineTo(this.end.x + this.position.x, this.end.y + this.position.y)\r\n    this.context.stroke()\r\n  }\r\n}\r\n\r\nexport default Line\r\n","import Graphic from './Graphic'\r\n\r\nclass Text extends Graphic {\r\n  public content: string\r\n  public fontConfig: string = ''\r\n  public lineHeight: number = 12\r\n  public maxWidth: number = 500\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.content = configuration.content ? configuration.content : ''\r\n    }\r\n  }\r\n\r\n  wrapText() {\r\n    let x = this.position.x\r\n    let y = this.position.y\r\n    var words = this.content.split(' ')\r\n    var line = ''\r\n  \r\n    for(var n = 0; n < words.length; n++) {\r\n      var testLine = line + words[n] + ' '\r\n      var metrics = this.context.measureText(testLine)\r\n      var testWidth = metrics.width\r\n      if (testWidth > this.maxWidth && n > 0) {\r\n        this.context.fillText(line, x, y)\r\n        line = words[n] + ' '\r\n        y += this.lineHeight\r\n      }\r\n      else {\r\n        line = testLine\r\n      }\r\n    }\r\n    this.context.fillText(line, x, y)\r\n  }\r\n\r\n  render(): void {\r\n    this.context.fillStyle = this.color\r\n    this.context.font = `${this.weight} ${this.size}px ${this.family}`\r\n    this.context.textAlign = this.textAlign\r\n    this.context.textBaseline = this.textBaseline\r\n    if (this.stroke) {\r\n      this.context.strokeText(this.content, this.position.x, this.position.y)\r\n    }\r\n    this.context.fillText(this.content, this.position.x, this.position.y)\r\n  }\r\n}\r\n\r\nexport default Text\r\n","import CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Arc extends CircleEvents {\r\n  public endAngle: number = 0\r\n  public startAngle: number = Math.PI\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.endAngle = configuration.endAngle ? configuration.endAngle : 0\r\n      this.startAngle = configuration.startAngle ? configuration.startAngle : Math.PI\r\n    }\r\n  }\r\n  \r\n  selfRender(): void {\r\n    this.context.arc(0, 0, this.radius, this.endAngle, this.startAngle, true)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Arc\r\n","import Graphic from './Graphic'\r\n\r\nclass BezierCurve extends Graphic {\r\n  public cords: Array<Array<number>>\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.cords = config.cords ? config.cords : [[10, 10], [80, 20], [30, 30]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.bezierCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1], this.cords[2][0], this.cords[2][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default BezierCurve\r\n","import Graphic from './Graphic'\r\n\r\nclass QuadraticCurve extends Graphic {\r\n  public color: string\r\n  public cords: Array<Array<number>>\r\n  public width: number\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.color = config.color ? config.color : 'black'\r\n    this.width = config.width ? config.width : 5\r\n    this.cords = config.cords ? config.cords : [[20, 100], [200, 20]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.lineWidth = this.width\r\n    this.context.strokeStyle = this.color\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.quadraticCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default QuadraticCurve\r\n","\r\ninterface EventsManager {\r\n  mousemove: Array<Function>,\r\n  mouseup: Array<Function>,\r\n  mousedown: Array<Function>,\r\n  mousemoveActive: Boolean,\r\n  mouseupActive: Boolean,\r\n  mousedownActive: Boolean,\r\n\r\n  keypress: Array<Function>,\r\n  keyup: Array<Function>,\r\n  keydown: Array<Function>,\r\n  keypressActive: Boolean,\r\n  keyupActive: Boolean,\r\n  keydownActive: Boolean,\r\n}\r\n\r\nclass Event {\r\n  public events: any = {\r\n    // Mouse\r\n    mousemove: [],\r\n    mouseup: [],\r\n    mousedown: [],\r\n    mousemoveActive: false,\r\n    mousedownActive: false,\r\n    mouseupActive: false,\r\n\r\n    // KeyBoard\r\n    keypress: [],\r\n    keyup: [],\r\n    keydown: [],\r\n    keypressActive: false,\r\n    keydownActive: false,\r\n    keyupActive: false\r\n  }\r\n\r\n  public initEvent (name: string): void {\r\n    document.addEventListener(name, (event) => {\r\n      this.events[name].forEach((func: Function) => func(this, event))\r\n    })\r\n  }\r\n}\r\n\r\nexport default Event\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport Event from './Event'\r\n\r\nclass Mouse extends Event {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public clicked: boolean = false\r\n\r\n  constructor () {\r\n    super()\r\n    this.move((self: any, event: any) => {\r\n      this.position.x = event.clientX\r\n      this.position.y = event.clientY\r\n    })\r\n  }\r\n\r\n  move (func: Function): void {\r\n    if (!this.events.mousemoveActive) {\r\n      this.initEvent('mousemove')\r\n      this.events.mousemoveActive = true\r\n    }\r\n    this.events.mousemove.push(func)\r\n  }\r\n\r\n  up (func: Function): void {\r\n    if (!this.events.mouseupActive) {\r\n      this.initEvent('mouseup')\r\n      this.events.mouseupActive = true\r\n    }\r\n  }\r\n\r\n  down (func: Function): void {\r\n    if (!this.events.mousedownActive) {\r\n      this.initEvent('mousedown')\r\n      this.events.mousedownActive = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default Mouse\r\n","\r\nimport Event from './Event'\r\n\r\nclass KeyBoard extends Event{\r\n  public keys: Array<string> = []\r\n\r\n  press (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      // console.log(event.key === key)\r\n      // console.log(event.key, key)\r\n      if (event.key === key) {\r\n        // console.log(func)\r\n        func(this, event)\r\n      }\r\n    }\r\n\r\n    if (!this.events.keypressActive) {\r\n      this.events.keypressActive = true\r\n      this.initEvent('keypress')\r\n    }\r\n    this.events.keypress.push(func2)\r\n  }\r\n\r\n  down (key: string, func: Function) {\r\n    func = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keydownActive) {\r\n      this.events.keydownActive = true\r\n      this.initEvent('keydown')\r\n    }\r\n    this.events.keydown.push(func)\r\n  }\r\n\r\n  up (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keyupActive) {\r\n      this.events.keyupActive = true\r\n      this.initEvent('keyup')\r\n    }\r\n    this.events.keyup.push(func2)\r\n  }\r\n}\r\n\r\nexport default KeyBoard\r\n","const defaultCss = document.createElement('style')\r\ndefaultCss.type = 'text/css'\r\ndefaultCss.innerHTML = `\r\n* {\r\n  margin:0%;\r\n  padding: 0%;\r\n}\r\n\r\ncanvas {\r\n  display: block;\r\n}\r\n`\r\n\r\ndocument.head.appendChild(defaultCss)\r\n\r\nimport Scene from './Scene'\r\nimport Render from './Render'\r\nimport LinearGradient from './LinearGradient'\r\nimport { Vector2D } from 'vector_class'\r\nimport Color from './Color'\r\n\r\n// Graphics\r\nimport Animation from './Media/Animation'\r\nimport Graphic from './graphics/Graphic'\r\nimport Ellipse from './graphics/Ellipse'\r\nimport Poligon from './graphics/Poligon'\r\nimport Picture from './Media/Picture'\r\nimport Circle from './graphics/Circle'\r\nimport Video from './Media/Video'\r\nimport Rect from './graphics/Rect'\r\nimport Line from './graphics/Line'\r\nimport Text from './graphics/Text'\r\nimport Arc from './graphics/Arc'\r\nimport BezierCurve from './graphics/BezierCurve'\r\nimport QuadraticCurve from './graphics/QuadraticCurve'\r\n\r\n// Events\r\nimport Mouse from './Events/Mouse'\r\nimport KeyBoard from './Events/KeyBoard'\r\n\r\nconst mouse = new Mouse()\r\nconst keyboard = new KeyBoard()\r\n\r\nexport {\r\n  QuadraticCurve,\r\n  Video,\r\n  BezierCurve,\r\n  LinearGradient,\r\n  Ellipse,\r\n  mouse,\r\n  keyboard,\r\n  Color,\r\n  Animation,\r\n  Rect,\r\n  Circle,\r\n  Vector2D,\r\n  Line,\r\n  Poligon,\r\n  Picture,\r\n  Text,\r\n  Arc,\r\n  Graphic,\r\n  Scene,\r\n  Render\r\n}\r\n"]}