{"version":3,"sources":["node_modules\\vector_class\\src\\Vector2D.ts","node_modules\\vector_class\\src\\Vector3D.ts","node_modules\\vector_class\\src\\index.ts","src\\Camera.ts","src\\Properties.ts","src\\graphics\\Graphic.ts","src\\Media\\Video.ts","src\\Events\\CircleEvents.ts","src\\Media\\Picture.ts","src\\Scene.ts","src\\Render.ts","src\\LinearGradient.ts","src\\Color.ts","src\\Media\\Animation.ts","src\\graphics\\Ellipse.ts","src\\graphics\\Poligon.ts","src\\graphics\\Circle.ts","src\\graphics\\Rect.ts","src\\graphics\\Line.ts","src\\graphics\\Text.ts","src\\graphics\\Arc.ts","src\\graphics\\BezierCurve.ts","src\\graphics\\QuadraticCurve.ts","src\\Events\\Event.ts","src\\Events\\Mouse.ts","src\\Events\\KeyBoard.ts","src\\index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAIE,gBAAa,CAAa,EAAE,CAAa;QAA5B,kBAAA,EAAA,KAAa;QAAE,kBAAA,EAAA,KAAa;QACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;IACZ,CAAC;IAED,oBAAG,GAAH,UAAK,MAAc;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;IACpB,CAAC;IAED,oBAAG,GAAH,UAAK,MAAc;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;IACpB,CAAC;IAED,qBAAI,GAAJ,UAAM,MAAc;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;IAClB,CAAC;IAED,oBAAG,GAAH,UAAK,MAAc;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;IAClB,CAAC;IAED,wBAAO,GAAP;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;IACd,CAAC;IAED,oBAAG,GAAH;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACrD,CAAC;IAED,oBAAG,GAAH,UAAK,MAAc;QACjB,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;IAC9C,CAAC;IAED,yBAAQ,GAAR,UAAU,MAAc;QACtB,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAA;IACvC,CAAC;IAED,sBAAK,GAAL;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IACnC,CAAC;IAED,qBAAI,GAAJ;QACE,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IACnC,CAAC;IAED,0BAAS,GAAT;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IACtB,CAAC;IAED,uBAAM,GAAN,UAAQ,GAAW;QACjB,IAAI,CAAC,SAAS,EAAE,CAAA;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAChB,CAAC;IAED,yBAAQ,GAAR,UAAU,KAAa;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAE5B,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACpC,IAAI,CAAC,CAAC,GAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IACvC,CAAC;IAED,yBAAQ,GAAR,UAAU,KAAa;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,CAAA;IACrC,CAAC;IAED,sBAAK,GAAL,UAAO,MAAc;QACnB,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SACpB;IACH,CAAC;IAED,4BAAW,GAAX,UAAa,MAAc,EAAE,KAAiB,EAAE,IAAgB;QAAnC,sBAAA,EAAA,SAAiB;QAAE,qBAAA,EAAA,QAAgB;QAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE;YAChC,IAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAA;YACvD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAChB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;SACf;IACH,CAAC;IAED,qBAAI,GAAJ;QACE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;IACZ,CAAC;IAEM,UAAG,GAAV,UAAY,OAAe,EAAE,OAAe;QAC1C,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAEM,UAAG,GAAV,UAAY,OAAe,EAAE,OAAe;QAC1C,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAEM,WAAI,GAAX,UAAa,MAAc,EAAE,MAAc;QACzC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;IACzD,CAAC;IAEM,UAAG,GAAV,UAAY,MAAc,EAAE,MAAc;QACxC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;IACzD,CAAC;IAEM,cAAO,GAAd,UAAgB,MAAc;QAC5B,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACjD,CAAC;IAEM,eAAQ,GAAf,UAAiB,OAAe,EAAE,OAAe;QAC/C,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;IACzC,CAAC;IAEM,gBAAS,GAAhB,UAAkB,MAAc;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAA;IACvC,CAAC;IAEM,YAAK,GAAZ,UAAc,OAAe,EAAE,OAAe;QAC5C,OAAO,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAA;IACtD,CAAC;IAEM,cAAO,GAAd,UAAgB,CAAS,EAAE,CAAS;QAClC,OAAO,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;IACzD,CAAC;IAEM,aAAM,GAAb,UAAe,CAAa,EAAE,CAAa;QAA5B,kBAAA,EAAA,KAAa;QAAE,kBAAA,EAAA,KAAa;QACzC,IAAI,EAAE,GAAG,CAAC,CAAA;QACV,IAAI,EAAE,GAAG,CAAC,CAAA;QACV,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;YAAE,EAAE,GAAG,CAAC,CAAC,CAAA;QAChC,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;YAAE,EAAE,GAAG,CAAC,CAAC,CAAA;QAChC,OAAO,IAAI,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAA;IACnE,CAAC;IACH,aAAC;AAAD,CAxIA,AAwIC,IAAA;AAED,qBAAe,MAAM,CAAA;;;;;ACzIrB;IAKE,kBAAa,CAAS,EAAE,CAAS,EAAE,CAAS;QAC1C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;IACZ,CAAC;IAED,sBAAG,GAAH,UAAK,MAAgB;QACnB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;IACpB,CAAC;IAED,sBAAG,GAAH,UAAK,MAAgB;QACnB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA;IACpB,CAAC;IAED,uBAAI,GAAJ,UAAM,MAAc;QAClB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;IAClB,CAAC;IAED,sBAAG,GAAH,UAAK,MAAc;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;QAChB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAA;IAClB,CAAC;IAED,0BAAO,GAAP;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;IACd,CAAC;IAED,sBAAG,GAAH;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,sBAAG,GAAH,UAAK,MAAgB;QACnB,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;IAClE,CAAC;IAED,2BAAQ,GAAR,UAAU,MAAgB;QACxB,OAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAA;IACzC,CAAC;IAED,wBAAK,GAAL;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IACnC,CAAC;IAED,uBAAI,GAAJ;QACE,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC;IAED,4BAAS,GAAT;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IACtB,CAAC;IAED,yBAAM,GAAN,UAAQ,GAAW;QACjB,IAAI,CAAC,SAAS,EAAE,CAAA;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAChB,CAAC;IAED,2BAAQ,GAAR,UAAU,KAAa;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAE5B,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACpC,IAAI,CAAC,CAAC,GAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IACvC,CAAC;IAED,2BAAQ,GAAR,UAAU,KAAa;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,CAAA;IACrC,CAAC;IAED,wBAAK,GAAL,UAAO,MAAc;QACnB,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SACpB;IACH,CAAC;IAED,8BAAW,GAAX,UAAa,MAAgB,EAAE,KAAa,EAAE,IAAY;QACxD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE;YAChC,IAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACvC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAChB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;SACf;IACH,CAAC;IAED,uBAAI,GAAJ;QACE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;IACZ,CAAC;IAEM,YAAG,GAAV,UAAY,OAAiB,EAAE,OAAiB;QAC9C,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;IAC1F,CAAC;IAEM,YAAG,GAAV,UAAY,OAAiB,EAAE,OAAiB;QAC9C,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;IAC1F,CAAC;IAEM,aAAI,GAAX,UAAa,MAAgB,EAAE,MAAc;QAC3C,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;IAC9E,CAAC;IAEM,YAAG,GAAV,UAAY,MAAgB,EAAE,MAAc;QAC1C,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;IAC9E,CAAC;IAEM,gBAAO,GAAd,UAAgB,MAAgB;QAC9B,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IAClE,CAAC;IAEM,iBAAQ,GAAf,UAAiB,OAAiB,EAAE,OAAiB;QACnD,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;IACzC,CAAC;IAEM,kBAAS,GAAhB,UAAkB,MAAgB;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAA;IACvC,CAAC;IAEM,cAAK,GAAZ,UAAc,OAAiB,EAAE,OAAiB;QAChD,OAAO,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAA;IACtD,CAAC;IAEM,eAAM,GAAb,UAAe,CAAS,EAAE,CAAS,EAAE,CAAS;QAC5C,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE;YACvB,OAAO,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;SAC7E;aAAM;YACL,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;SAChF;IACH,CAAC;IACH,eAAC;AAAD,CA5IA,AA4IC,IAAA;AAED,qBAAe,QAAQ,CAAA;AAEvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2FE;;;;;;;;AC3OF,wDAAiC;AAI/B,mBAJK,qBAAQ,CAIL;AAHV,wDAAiC;AAI/B,mBAJK,qBAAQ,CAIL;;;;;;ACNV,IAAA,iBAAA,QAAA,cAAA,CAAA;AAGA,IAAA,UAAA,QAAA,SAAA,CAAA;AAEA,IAAA,SAAA,aAAA,YAAA;AAaE,aAAA,MAAA,CAAa,OAAb,EAA8C;AAXvC,aAAA,MAAA,GAAS,EAAE,IAAI,GAAN,EAAW,MAAM,GAAjB,EAAsB,MAAM,GAA5B,EAAiC,OAAO,GAAxC,EAAT;AACA,aAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AAEC,aAAA,aAAA,GAA0B,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAA1B;AACA,aAAA,UAAA,GAAsB,KAAtB;AACA,aAAA,UAAA,GAAsB,KAAtB;AACA,aAAA,mBAAA,GAA+B,KAA/B;AACA,aAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,aAAA,YAAA,GAAyB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAzB;AACA,aAAA,QAAA,GAAmB,GAAnB;AAGN,aAAK,OAAL,GAAe,OAAf;AACD;AAED,WAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAwB;AACtB,aAAK,YAAL,CAAkB,GAAlB,CAAsB,KAAtB;AACD,KAFD;AAGF;;;;;;;;AAQE,WAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,eAAO,eAAA,QAAA,CAAS,GAAT,CAAa,QAAA,KAAA,CAAM,QAAnB,EAA6B,KAAK,QAAlC,CAAP;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,mBAAA,GAAA,YAAA,CAEC,CAFD;AAIA,WAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACE,aAAK,mBAAL,GAA2B,IAA3B;AACA,iBAAS,gBAAT,CAA0B,UAA1B,EAAsC,UAAC,CAAD,EAAE;AACtC,gBAAI,EAAE,GAAF,CAAM,WAAN,OAAwB,MAAK,MAAL,CAAY,EAAxC,EAA4C;AAC1C,sBAAK,QAAL,CAAc,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,EAAhB,CAAd;AACD;AACD,gBAAI,EAAE,GAAF,CAAM,WAAN,OAAwB,MAAK,MAAL,CAAY,IAAxC,EAA8C;AAC5C,sBAAK,QAAL,CAAc,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAC,EAAjB,CAAd;AACD;AACD,gBAAI,EAAE,GAAF,CAAM,WAAN,OAAwB,MAAK,MAAL,CAAY,IAAxC,EAA8C;AAC5C,sBAAK,QAAL,CAAc,IAAI,eAAA,QAAJ,CAAa,EAAb,EAAiB,CAAjB,CAAd;AACD;AACD,gBAAI,EAAE,GAAF,CAAM,WAAN,OAAwB,MAAK,MAAL,CAAY,KAAxC,EAA+C;AAC7C,sBAAK,QAAL,CAAc,IAAI,eAAA,QAAJ,CAAa,CAAC,EAAd,EAAkB,CAAlB,CAAd;AACD;AACF,SAbD;AAcD,KAhBD;AAkBA,WAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAAuB;AACrB,aAAK,gBAAL,GAAwB,QAAQ,QAAhC;AACA,aAAK,aAAL,GAAqB,KAAK,gBAAL,CAAsB,IAAtB,EAArB;AACA,aAAK,UAAL,GAAkB,IAAlB;AACA,aAAK,UAAL,GAAkB,IAAlB;AACD,KALD;AAOA,WAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,OAAR,EAAwB;AACtB,aAAK,gBAAL,GAAwB,QAAQ,QAAhC;AACA,aAAK,UAAL,GAAkB,IAAlB;AACD,KAHD;AAKA,WAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,OAAR,EAAwB;AACtB,aAAK,gBAAL,GAAwB,QAAQ,QAAhC;AACA,aAAK,UAAL,GAAkB,IAAlB;AACD,KAHD;AAKA,WAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,aAAK,UAAL,GAAkB,KAAlB;AACA,aAAK,UAAL,GAAkB,KAAlB;AACD,KAHD;AAKA,WAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,aAAK,UAAL,GAAkB,KAAlB;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,aAAK,UAAL,GAAkB,KAAlB;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,IAAA,GAAA,UAAK,KAAL,EAAsB,OAAtB,EAAuC;AACrC,aAAK,OAAL,CAAa,SAAb,CAAuB,MAAM,CAA7B,EAAgC,MAAM,CAAtC;AACA,aAAK,OAAL,CAAa,KAAb,CAAmB,QAAQ,CAA3B,EAA8B,QAAQ,CAAtC;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,CAAC,MAAM,CAA9B,EAAiC,CAAC,MAAM,CAAxC;AACD,KAJD;AAMA,WAAA,SAAA,CAAA,SAAA,GAAA,UAAU,CAAV,EAAqB,CAArB,EAA8B;AAC5B,aAAK,QAAL,CAAc,CAAd,IAAmB,CAAnB;AACA,aAAK,QAAL,CAAc,CAAd,IAAmB,CAAnB;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,CAAvB,EAA0B,CAA1B;AACD,KAJD;AAMA,WAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,YAAI,KAAK,mBAAT,EAA8B;AAC5B,iBAAK,QAAL,CAAc,GAAd,CAAkB,KAAK,YAAvB;AACA,iBAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAxB;AACA,iBAAK,SAAL,CAAe,KAAK,QAAL,CAAc,CAA7B,EAAgC,KAAK,QAAL,CAAc,CAA9C;AACA,iBAAK,QAAL,CAAc,GAAd,CAAkB,KAAK,QAAvB;AACA,iBAAK,YAAL,CAAkB,IAAlB;AACD;AACD,YAAI,KAAK,UAAL,IAAmB,KAAK,UAA5B,EAAwC;AACtC,gBAAM,SAAS,eAAA,QAAA,CAAS,GAAT,CAAa,KAAK,aAAlB,EAAiC,KAAK,gBAAtC,CAAf;AACA,iBAAK,aAAL,GAAqB,KAAK,gBAAL,CAAsB,IAAtB,EAArB;AACA,iBAAK,SAAL,CAAe,OAAO,CAAtB,EAAyB,OAAO,CAAhC;AACD;AACF,KAbD;AAcF,WAAA,MAAA;AA9GA,CAAA,EAAA;AAgHA,QAAA,SAAA,IAAe,MAAf;;;;;ACrHA,IAAY,OAAZ;AAAA,CAAA,UAAY,OAAZ,EAAmB;AACjB,YAAA,MAAA,IAAA,MAAA;AACA,YAAA,QAAA,IAAA,QAAA;AACA,YAAA,OAAA,IAAA,OAAA;AACD,CAJD,EAAY,UAAA,QAAA,OAAA,KAAA,QAAA,OAAA,GAAO,EAAP,CAAZ;AAMA,IAAY,QAAZ;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAClB,aAAA,OAAA,IAAA,OAAA;AACA,aAAA,OAAA,IAAA,OAAA;AACA,aAAA,OAAA,IAAA,OAAA;AACD,CAJD,EAAY,WAAA,QAAA,QAAA,KAAA,QAAA,QAAA,GAAQ,EAAR,CAAZ;AAMA,IAAY,OAAZ;AAAA,CAAA,UAAY,OAAZ,EAAmB;AACjB,YAAA,QAAA,IAAA,QAAA;AACA,YAAA,UAAA,IAAA,UAAA;AACA,YAAA,UAAA,IAAA,UAAA;AACA,YAAA,WAAA,IAAA,WAAA;AACD,CALD,EAAY,UAAA,QAAA,OAAA,KAAA,QAAA,OAAA,GAAO,EAAP,CAAZ;AAOA,IAAY,OAAZ;AAAA,CAAA,UAAY,OAAZ,EAAmB;AACjB,YAAA,SAAA,IAAA,SAAA;AACA,YAAA,QAAA,IAAA,QAAA;AACA,YAAA,QAAA,IAAA,QAAA;AACA,YAAA,MAAA,IAAA,MAAA;AACD,CALD,EAAY,UAAA,QAAA,OAAA,KAAA,QAAA,OAAA,GAAO,EAAP,CAAZ;;;;;ACnBA,IAAA,iBAAA,QAAA,cAAA,CAAA;AACA,IAAA,eAAA,QAAA,eAAA,CAAA;AAEA,IAAA,UAAA,aAAA,YAAA;AA0BE,aAAA,OAAA,CAAY,IAAZ,EAAsB;AAzBf,aAAA,MAAA,GAAkB,aAAA,OAAA,CAAQ,MAA1B;AAGA,aAAA,IAAA,GAAgB,IAAhB;AACA,aAAA,MAAA,GAAkB,KAAlB;AACA,aAAA,MAAA,GAAmB,IAAI,eAAA,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAnB;AACA,aAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,aAAA,KAAA,GAAgB,MAAhB;AACA,aAAA,MAAA,GAAiB,OAAjB;AACA,aAAA,OAAA,GAAkB,aAAA,OAAA,CAAQ,KAA1B;AACA,aAAA,QAAA,GAAmB,aAAA,QAAA,CAAS,KAA5B;AACA,aAAA,SAAA,GAAoB,cAApB;AACA,aAAA,SAAA,GAAoB,QAApB;AACA,aAAA,WAAA,GAAsB,kBAAtB;AACA,aAAA,YAAA,GAAuB,QAAvB;AACA,aAAA,IAAA,GAAe,EAAf;AACA,aAAA,QAAA,GAAmB,CAAnB;AACA,aAAA,OAAA,GAAkB,CAAlB;AACA,aAAA,SAAA,GAAoB,CAApB;AACA,aAAA,UAAA,GAAqB,EAArB;AACA,aAAA,UAAA,GAAqB,CAArB;AACA,aAAA,aAAA,GAAwB,CAAxB;AACA,aAAA,aAAA,GAAwB,CAAxB;AACA,aAAA,MAAA,GAAqB,EAArB;AAGL,YAAI,IAAJ,EAAU;AACR,gBAAI,KAAK,MAAL,KAAgB,SAApB,EAA+B;AAC7B,oBAAI,OAAO,KAAK,MAAZ,KAAuB,SAA3B,EAAsC;AACpC,yBAAK,MAAL,GAAc,KAAK,MAAnB;AACD,iBAFD,MAEO;AACL,4BAAQ,IAAR,CAAa,+BAAb;AACD;AACF,aAND,MAMO;AACL,qBAAK,MAAL,GAAc,KAAd;AACD;AACD,gBAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AAC3B,oBAAI,OAAO,KAAK,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,yBAAK,IAAL,GAAY,KAAK,IAAjB;AACD,iBAFD,MAEO;AACL,4BAAQ,IAAR,CAAa,6BAAb;AACD;AACF,aAND,MAMO;AACL,qBAAK,IAAL,GAAY,IAAZ;AACD;AACD,iBAAK,MAAL,GAAc,KAAK,OAAL,GAAe,KAAK,OAApB,GAA8B,aAAA,OAAA,CAAQ,MAApD;AACA,iBAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,IAAI,eAAA,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAA1C;AACA,iBAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,KAAK,QAArB,GAAgC,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhD;AACA,iBAAK,OAAL,GAAe,KAAK,OAAL,GAAe,KAAK,OAApB,GAA8B,CAA7C;AACA,iBAAK,UAAL,GAAkB,KAAK,UAAL,GAAkB,KAAK,UAAvB,GAAoC,CAAtD;AACA,iBAAK,aAAL,GAAqB,KAAK,aAAL,GAAqB,KAAK,aAA1B,GAA0C,CAA/D;AACA,iBAAK,aAAL,GAAqB,KAAK,aAAL,GAAqB,KAAK,aAA1B,GAA0C,CAA/D;AACA,iBAAK,WAAL,GAAmB,KAAK,WAAL,GAAmB,KAAK,WAAxB,GAAsC,eAAzD;AACA,iBAAK,UAAL,GAAkB,KAAK,UAAL,GAAkB,KAAK,UAAvB,GAAoC,EAAtD;AACA,iBAAK,OAAL,GAAe,KAAK,OAAL,GAAe,KAAK,OAApB,GAA8B,aAAA,OAAA,CAAQ,KAArD;AACA,iBAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,MAAvC;AACA,iBAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,OAA1C;AACA,iBAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,KAAK,QAArB,GAAgC,aAAA,QAAA,CAAS,KAAzD;AACA,iBAAK,SAAL,GAAiB,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAkC,iBAAnD;AACA,iBAAK,SAAL,GAAiB,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAkC,QAAnD;AACA,iBAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,KAAK,YAAzB,GAAwC,QAA5D;AACA,iBAAK,IAAL,GAAY,KAAK,IAAL,GAAY,KAAK,IAAjB,GAAwB,EAApC;AACA,iBAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,KAAK,QAArB,GAAgC,CAAhD;AACA,iBAAK,SAAL,GAAiB,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAkC,CAAnD;AACD;AACF;AAED,YAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAc;AACZ,cAAM,OAAN,GAAgB,KAAK,OAArB;AACA,aAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD,KAHD;AAKA,YAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAiB;AACf,aAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD,KAFD;AAIA,YAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,eAAU,KAAK,MAAL,GAAW,GAAX,GAAe,KAAK,IAApB,GAAwB,KAAxB,GAA8B,KAAK,MAA7C;AACD,KAFD;AAIA,YAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,IAAb,GAAoB,KAAK,OAAL,EAApB;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,KAA9B;AACA,aAAK,OAAL,CAAa,OAAb,GAAuB,KAAK,OAA5B;AACA,aAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,QAA7B;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,SAAhC;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAA9B;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAA9B;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,WAAhC;AACA,aAAK,OAAL,CAAa,YAAb,GAA4B,KAAK,YAAjC;AACA,aAAK,OAAL,CAAa,UAAb,GAA0B,KAAK,UAA/B;AACA,aAAK,OAAL,CAAa,UAAb,GAA0B,KAAK,UAA/B;AACA,aAAK,OAAL,CAAa,aAAb,GAA6B,KAAK,aAAlC;AACA,aAAK,OAAL,CAAa,aAAb,GAA6B,KAAK,aAAlC;AACD,KAdD;AAgBA;;;;;;;;AASA,YAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE;AACA,aAAK,OAAL,CAAa,SAAb;AACA;AACA,aAAK,QAAL;AACA,aAAK,UAAL;AACA;AACA;AACD,KARD;AAUA,YAAA,SAAA,CAAA,UAAA,GAAA,YAAA,CAAgB,CAAhB;AACF,WAAA,OAAA;AArHA,CAAA,EAAA;AAuHA,QAAA,SAAA,IAAe,OAAf;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,QAAA,aAAA,UAAA,MAAA,EAAA;AAAoB,cAAA,KAAA,EAAA,MAAA;AAclB,aAAA,KAAA,CAAY,IAAZ,EAAqB;AAArB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,IAAN,KAAW,IADb;AARO,cAAA,IAAA,GAAe,KAAf;AAEA,cAAA,KAAA,GAAiB,KAAjB;AACA,cAAA,IAAA,GAAwB,EAAxB;AACA,cAAA,MAAA,GAAqB,EAArB;AACA,cAAA,YAAA,GAAwB,KAAxB;AACA,cAAA,YAAA,GAA8B,EAA9B;AAIL,cAAK,KAAL,GAAa,SAAS,aAAT,CAAuB,OAAvB,CAAb;AACA,cAAK,KAAL,CAAW,GAAX,GAAiB,KAAK,GAAtB;AACA,cAAK,KAAL,CAAW,IAAX;AACA,cAAK,KAAL,CAAW,WAAX,GAAyB,WAAzB;AAEA,cAAK,KAAL,CAAW,gBAAX,CAA4B,gBAA5B,EAA8C,YAAA;AAC5C,kBAAK,KAAL,GAAa,IAAb;AACA,oBAAQ,IAAR,CAAa,WAAS,KAAK,GAAd,GAAiB,oBAA9B;AACA,oBAAQ,GAAR,CAAY,MAAK,IAAjB;AACA,oBAAQ,GAAR,CAAY,MAAK,MAAjB;AACA,kBAAK,IAAL,CAAU,OAAV,CAAkB,UAAC,GAAD,EAAM,CAAN,EAAO;AACvB,oBAAG,KAAH,CAAG,KAAA,CAAH,EAAO,MAAK,MAAL,CAAY,CAAZ,CAAP;AACD,aAFD;AAGD,SARD;AAUA,cAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;AACnC,oBAAQ,KAAR,CAAc,4BAAd;AACD,SAFD;AAGA,cAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,CAAvC;AACA,cAAK,OAAL,GAAe,KAAK,OAAL,GAAe,KAAK,OAApB,GAA8B,CAA7C;AACA,cAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,MAAK,KAAL,CAAW,KAAlD;AACA,cAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,MAAK,KAAL,CAAW,MAArD;;AACD;AAED,UAAA,SAAA,CAAA,MAAA,GAAA,YAAA,CAEC,CAFD;AAIA,UAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,YAAM,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAf;AACA;AACA,iBAAS,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACA,YAAM,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAhB;AACA,eAAO,KAAP,GAAe,KAAK,KAApB;AACA,eAAO,MAAP,GAAgB,KAAK,MAArB;AACA,gBAAQ,SAAR,CAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAAxC,EAAiD,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAAtE;AACA,gBAAQ,MAAR,CAAe,KAAK,KAApB;AACA,gBAAQ,SAAR,CAAkB,KAAK,KAAvB,EAA8B,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAAvB,CAA9B,EAA6D,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAAvB,CAA7D,EAA6F,KAAK,KAAlG,EAAyG,KAAK,MAA9G;AACA,iBAAS,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACA;AACA,eAAO,QAAQ,YAAR,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAAK,KAAjC,EAAwC,KAAK,MAA7C,CAAP;AACD,KAbD;AAcF;;;;;;;;;;;;;;;;;;;;;;;;AAwBE,UAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB,CAErB,CAFD;AAGA,UAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,eAAO,IAAI,eAAA,QAAJ,CAAa,KAAK,QAAL,CAAc,CAAd,GAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAArD,EAA6D,KAAK,QAAL,CAAc,CAAd,GAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAArG,CAAP;AACD,KAFD;AAIA,UAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,YAAI,KAAK,YAAT,EAAuB;AACrB,iBAAK,WAAL,CAAiB,KAAK,YAAL,CAAkB,CAAlB,CAAjB,EAAuC,KAAK,YAAL,CAAkB,CAAlB,CAAvC,EAA6D,KAAK,YAAL,CAAkB,CAAlB,CAA7D;AACD;AACH;AACE;AACA,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,IAAb;AACA;AACA;AACA;AACA;AACA,aAAK,OAAL,CAAa,YAAb,CAA0B,KAAK,IAA/B,EAAqC,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,MAAL,CAAY,CAAZ,GAAiB,KAAK,KAA7E,EAAqF,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,MAAL,CAAY,CAAZ,GAAiB,KAAK,MAA7H,EAZF,CAYuI;AACrI;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KAfD;AAiBA,UAAA,SAAA,CAAA,WAAA,GAAA,UAAY,CAAZ,EAAuB,CAAvB,EAAkC,CAAlC,EAA2C;AACzC,YAAI,KAAK,KAAT,EAAgB;AACd,iBAAK,YAAL,GAAoB,IAApB;AACA,iBAAK,YAAL,GAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB;AACA,gBAAI,QAAQ,KAAK,YAAL,EAAZ;AAEA,iBAAK,IAAI,QAAQ,CAAjB,EAAoB,QAAQ,MAAM,IAAN,CAAW,MAAvC,EAA+C,SAAS,CAAxD,EAA2D;AACzD,sBAAM,IAAN,CAAW,KAAX,KAAqB,CAArB;AACA,sBAAM,IAAN,CAAW,QAAQ,CAAnB,KAAyB,CAAzB;AACA,sBAAM,IAAN,CAAW,QAAQ,CAAnB,KAAyB,CAAzB;AACA;AACD;AAED,iBAAK,IAAL,GAAY,KAAZ;AACA,iBAAK,MAAL,GAAc,KAAK,UAAnB;AACD,SAdD,MAcO;AACL,iBAAK,IAAL,CAAU,IAAV,CAAe,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAf;AACA,iBAAK,MAAL,CAAY,IAAZ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB;AACD;AAEF,KApBD;AAsBA,UAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,QAAL,CAAc,CAArC,EAAwC,KAAK,QAAL,CAAc,CAAtD;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,KAAzB;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,OAAhC;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,KAA5B,EAAmC,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAAvB,CAAnC,EAAkE,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAAvB,CAAlE,EAAkG,KAAK,KAAvG,EAA8G,KAAK,MAAnH;AACA;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KATD;AAUF,WAAA,KAAA;AA1IA,CAAA,CAAoB,UAAA,SAAA,CAApB,CAAA;AA4IA,QAAA,SAAA,IAAe,KAAf;;;;;;;;;;;;;;;;;;;;;;;;AC/IA,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AAEA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAK,UAAL;AAAA,CAAA,UAAK,UAAL,EAAe;AACb,eAAA,WAAA,IAAA,WAAA;AACA,eAAA,WAAA,IAAA,WAAA;AACA,eAAA,SAAA,IAAA,SAAA;AACD,CAJD,EAAK,eAAA,aAAU,EAAV,CAAL;AAMA,IAAA,eAAA,aAAA,UAAA,MAAA,EAAA;AAA2B,cAAA,YAAA,EAAA,MAAA;AAmBzB,aAAA,YAAA,CAAY,aAAZ,EAA8B;AAA9B,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IADtB;AAjBA;AACQ,cAAA,WAAA,GAAuB,KAAvB;AACA,cAAA,YAAA,GAAwB,KAAxB;AACA,cAAA,cAAA,GAA0B,KAA1B;AACA,cAAA,cAAA,GAA0B,KAA1B;AACA,cAAA,cAAA,GAA0B,KAA1B;AACA,cAAA,gBAAA,GAA4B,KAA5B;AACA,cAAA,gBAAA,GAA4B,KAA5B;AAYN,cAAK,WAAL,GAAmB,EAAnB;AACA,cAAK,YAAL,GAAoB,EAApB;AACA,cAAK,cAAL,GAAsB,EAAtB;AACA,cAAK,cAAL,GAAsB,EAAtB;AACA,cAAK,cAAL,GAAsB,EAAtB;AACA,cAAK,gBAAL,GAAuB,EAAvB;AACA,cAAK,gBAAL,GAAwB,EAAxB;AAEA,YAAI,aAAJ,EAAmB;AACjB,gBAAI,cAAc,MAAlB,EAA0B,MAAK,MAAL,GAAc,cAAc,MAA5B;AAC3B;;AACF;AAED,iBAAA,SAAA,CAAA,aAAA,GAAA,UAAc,KAAd,EAA6B;AAC3B,eAAO,KAAK,QAAL,CAAc,QAAd,CAAuB,KAAvB,IAAgC,KAAK,MAA5C;AACD,KAFD;AAIQ,iBAAA,SAAA,CAAA,WAAA,GAAR,UAAqB,SAArB,EAA4C,OAA5C,EAAoE;AAApE,YAAA,QAAA,IAAA;AACE,YAAI,KAAJ;AAEA,iBAAS,gBAAT,CAA0B,SAA1B,EAAqC,UAAC,KAAD,EAAM;AACzC,oBAAQ,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAR;AACA,gBAAI,MAAK,aAAL,CAAmB,KAAnB,CAAJ,EAA+B;AAC7B,wBAAQ,OAAR,CAAgB,UAAC,MAAD,EAAiB;AAAK,2BAAA,OAAO,KAAP,CAAA;AAAa,iBAAnD;AACD;AACF,SALD;AAMD,KATO;AAWR,iBAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAwB;AACtB,YAAI,CAAC,KAAK,gBAAV,EAA4B;AAC1B,iBAAK,gBAAL,GAAwB,CAAC,KAAK,gBAA9B;AACA,iBAAK,WAAL,CAAiB,WAAW,SAA5B,EAAuC,KAAK,gBAA5C;AACD;AACD,aAAK,gBAAL,CAAsB,IAAtB,CAA2B,KAAK,IAAL,CAAU,IAAV,CAA3B;AACD,KAND;AAQA,iBAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB;AACpB,YAAI,CAAC,KAAK,cAAV,EAA0B;AACxB,iBAAK,cAAL,GAAsB,CAAC,KAAK,cAA5B;AACA,iBAAK,WAAL,CAAiB,WAAW,OAA5B,EAAqC,KAAK,cAA1C;AACD;AACD,aAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,IAAL,CAAU,IAAV,CAAzB;AACD,KAND;AAQA,iBAAA,SAAA,CAAA,KAAA,GAAA,UAAM,IAAN,EAAoB;AAClB,YAAI,CAAC,KAAK,YAAV,EAAwB;AACtB,iBAAK,YAAL,GAAoB,CAAC,KAAK,YAA1B;AACA,iBAAK,WAAL,CAAiB,WAAW,SAA5B,EAAuC,KAAK,YAA5C;AACD;AACD,aAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,IAAL,CAAU,IAAV,CAAvB;AACD,KAND;AAQA,iBAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAwB;AAAxB,YAAA,QAAA,IAAA;AACE,YAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,iBAAK,WAAL,GAAmB,CAAC,KAAK,WAAzB;AACA,gBAAI,OAAJ;AACA,qBAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAC,KAAD,EAAM;AAC3C,0BAAQ,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAR;AACA,sBAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAC,MAAD,EAAiB;AAAK,2BAAA,OAAO,OAAP,CAAA;AAAa,iBAA5D;AACD,aAHD;AAID;AACD,eAAO,KAAK,IAAL,CAAU,IAAV,CAAP;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACD,KAXD;AAcA,iBAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAwB;AACtB,aAAK,gBAAL,CAAsB,IAAtB,CAA2B,KAAK,IAAL,CAAU,IAAV,CAA3B;AACD,KAFD;AAIA,iBAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB;AACpB,aAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,IAAL,CAAU,IAAV,CAAzB;AACD,KAFD;AAIA,iBAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB;AACpB,aAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,IAAL,CAAU,IAAV,CAAzB;AACD,KAFD;AAIA,iBAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACE,YAAI,YAAY,KAAhB;AACA,YAAI,WAAqB,IAAI,eAAA,QAAJ,EAAzB;AAEA,iBAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAC,KAAD,EAAM;AAC3C,gBAAI,SAAJ,EAAe;AACb,sBAAK,QAAL,GAAgB,eAAA,QAAA,CAAS,GAAT,CAAa,QAAb,EAAuB,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAvB,CAAhB;AACA,sBAAK,cAAL,CAAoB,OAApB,CAA4B,UAAC,IAAD,EAAe;AAAK,2BAAA,MAAA;AAAM,iBAAtD;AACD;AACF,SALD;AAOA,aAAK,SAAL,CAAe,UAAC,KAAD,EAAgB;AAC7B,gBAAI,CAAC,SAAL,EAAgB;AACd,yBAAS,IAAT,CAAc,KAAd,CAAoB,MAApB,GAA6B,SAA7B;AACA,4BAAY,IAAZ;AACA,2BAAW,eAAA,QAAA,CAAS,GAAT,CAAa,MAAK,QAAlB,EAA4B,KAA5B,CAAX;AACA,sBAAK,QAAL,GAAgB,eAAA,QAAA,CAAS,GAAT,CAAa,QAAb,EAAuB,KAAvB,CAAhB;AACA,sBAAK,gBAAL,CAAsB,OAAtB,CAA8B,UAAC,IAAD,EAAe;AAAK,2BAAA,MAAA;AAAM,iBAAxD;AACD;AACF,SARD;AAUA,aAAK,OAAL,CAAa,YAAA;AACX,gBAAI,SAAJ,EAAe;AACb,yBAAS,IAAT,CAAc,KAAd,CAAoB,MAApB,GAA6B,SAA7B;AACA,4BAAY,KAAZ;AACA,sBAAK,cAAL,CAAoB,OAApB,CAA4B,UAAC,IAAD,EAAe;AAAK,2BAAA,MAAA;AAAM,iBAAtD;AACD;AACF,SAND;AAOD,KA5BD;AA6BF,WAAA,YAAA;AAhIA,CAAA,CAA2B,UAAA,SAAA,CAA3B,CAAA;AAkIA,QAAA,SAAA,IAAe,YAAf;;;;;;;;;;;;;;;;;;;;;;;;AC5IA,IAAA,iBAAA,QAAA,cAAA,CAAA;AACA,IAAA,iBAAA,gBAAA,QAAA,wBAAA,CAAA,CAAA;AAEA;AACA,IAAM,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAf;AACA,IAAM,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAhB;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAsB,cAAA,OAAA,EAAA,MAAA;AAcpB,aAAA,OAAA,CAAY,IAAZ,EAAqB;AAArB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,IAAN,KAAW,IADb;AAEE,cAAK,QAAL,GAAgB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhB;AACA,cAAK,MAAL,GAAc,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,cAAK,KAAL,GAAa,KAAb;AACA,cAAK,MAAL,GAAc,EAAd;AACA,cAAK,IAAL,GAAY,EAAZ;AAEA,cAAK,KAAL,GAAa,IAAI,KAAJ,EAAb;AACA,cAAK,KAAL,CAAW,GAAX,GAAiB,KAAK,GAAtB;AACA,gBAAQ,GAAR,CAAY,MAAK,KAAjB;AACA,cAAK,KAAL,CAAW,gBAAX,CAA4B,MAA5B,EAAoC,YAAA;AAClC,kBAAK,KAAL,GAAa,IAAb;AACA,kBAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,MAAK,KAAL,CAAW,KAAlD;AACA,kBAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,MAAK,KAAL,CAAW,MAArD;AACA,kBAAK,IAAL,CAAU,OAAV,CAAkB,UAAC,GAAD,EAAM,CAAN,EAAO;AACvB,oBAAG,KAAH,CAAG,KAAA,CAAH,EAAO,MAAK,MAAL,CAAY,CAAZ,CAAP;AACD,aAFD;AAGD,SAPD;AASA,cAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,UAAC,GAAD,EAAI;AACvC,oBAAQ,GAAR,CAAY,GAAZ;AACA,oBAAQ,KAAR,CAAc,4BAAd;AACD,SAHD;AAKA,cAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,CAAvC;AACA,cAAK,OAAL,GAAe,KAAK,OAAL,GAAe,KAAK,OAApB,GAA8B,CAA7C;AACA,cAAK,KAAL,GAAa,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,MAAK,KAAL,CAAW,KAAlD;AACA,cAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,MAAK,KAAL,CAAW,MAArD;;AACD;AAED,YAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,gBAAQ,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,OAAO,UAA/B,EAA2C,OAAO,WAAlD;AACA,eAAO,KAAP,GAAe,KAAK,KAApB;AACA,eAAO,MAAP,GAAgB,KAAK,MAArB;AACA,gBAAQ,SAAR,CAAkB,KAAK,KAAvB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,KAAK,KAAzC,EAAgD,KAAK,MAArD;AACA,eAAO,QAAQ,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAAK,KAAhC,EAAuC,KAAK,MAA5C,CAAP;AACD,KAND;AAOF;;;;;;;;;;;;;;;;;;;;;;;;AAwBE,YAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,eAAO,IAAI,eAAA,QAAJ,CAAa,KAAK,QAAL,CAAc,CAAd,GAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAArD,EAA6D,KAAK,QAAL,CAAc,CAAd,GAAmB,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAArG,CAAP;AACD,KAFD;AAGF;;;;;;;;;;;;;;;AAeE,YAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,QAAL,CAAc,CAArC,EAAwC,KAAK,QAAL,CAAc,CAAtD;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,KAAzB;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,OAAhC;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,KAA5B,EAAmC,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,KAAvB,CAAnC,EAAkE,EAAE,KAAK,MAAL,CAAY,CAAZ,GAAgB,KAAK,MAAvB,CAAlE,EAAkG,KAAK,KAAvG,EAA8G,KAAK,MAAnH;AACA;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KATD;AAUF,WAAA,OAAA;AAxGA,CAAA,CAAsB,eAAA,SAAA,CAAtB,CAAA;AA0GA,QAAA,SAAA,IAAe,OAAf;;;;;;;;AChHA,IAAA,WAAA,gBAAA,QAAA,UAAA,CAAA,CAAA;AACA,IAAA,UAAA,gBAAA,QAAA,eAAA,CAAA,CAAA;AACA,IAAA,YAAA,gBAAA,QAAA,iBAAA,CAAA,CAAA;AAGA,IAAA,QAAA,aAAA,YAAA;AASE,aAAA,KAAA,CAAY,QAAZ,EAA4B;AAC1B,aAAK,MAAL,GAAc,EAAd;AACA,aAAK,SAAL,GAAiB,CAAjB;AACA,aAAK,QAAL,GAAgB,QAAhB;AACA,aAAK,eAAL,GAAuB,OAAvB;AACA,aAAK,OAAL,GAAe,KAAK,QAAL,CAAc,OAA7B;AACA,aAAK,MAAL,GAAc,IAAI,SAAA,SAAA,CAAJ,CAAW,KAAK,OAAhB,CAAd;AACD;AAED,UAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE;AACA,YAAM,WAAW,KAAK,MAAL,CAAY,MAAZ,CAAmB,UAAC,KAAD,EAAM;AACxC,gBAAI,iBAAiB,UAAA,SAAA,CAArB,EAA8B,OAAO,IAAP;AAC9B,gBAAI,iBAAiB,QAAA,SAAA,CAArB,EAA4B,OAAO,IAAP;AAC5B,mBAAO,KAAP;AACD,SAJgB,CAAjB;AAMA;AACA,eAAO,CAAC,SAAS,IAAT,CAAc,UAAC,OAAD,EAAQ;AAAK,mBAAA,CAAC,QAAQ,KAAT;AAAc,SAAzC,CAAR;AACD,KAVD;AAYA,UAAA,SAAA,CAAA,GAAA,GAAA,UAAI,OAAJ,EAAgB;AACd,gBAAQ,OAAR,GAAkB,KAAK,OAAvB;AACA,aAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB;AACA,aAAK,gBAAL;AACD,KAJD;AAMA,UAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAAuB;AACrB,YAAI,QAAQ,KAAK,MAAL,CAAY,OAAZ,CAAoB,OAApB,CAAZ;AACA,YAAI,SAAS,CAAb,EAAgB;AACd,iBAAK,MAAL,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;AACD;AACF,KALD;AAOA,UAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,OAAL,CAAa,YAAb,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,eAA9B;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,OAAO,UAAnC,EAA+C,OAAO,WAAtD;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KAND;AAQA,UAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAoB;AAClB,YAAI,KAAK,OAAL,CAAa,qBAAjB,EAAwC;AACtC,iBAAK,OAAL,CAAa,qBAAb,GAAqC,KAArC;AACD,SAFD,MAEO,IAAI,KAAK,OAAL,CAAa,wBAAjB,EAA2C;AAChD,iBAAK,OAAL,CAAa,wBAAb,GAAwC,KAAxC;AACD,SAFM,MAEA,IAAI,KAAK,OAAL,CAAa,2BAAjB,EAA8C;AACnD,iBAAK,OAAL,CAAa,2BAAb,GAA2C,KAA3C;AACD;AACF,KARD;AAUA,UAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,aAAK,MAAL,CAAY,IAAZ,CAAiB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,mBAAA,EAAE,OAAF,GAAY,EAAE,OAAd;AAAqB,SAAhD;AACD,KAFD;AAIA,UAAA,SAAA,CAAA,UAAA,GAAA,UAAW,IAAX,EAA0B;AAA1B,YAAA,QAAA,IAAA;AACE,aAAK,QAAL,GAAgB,YAAY,YAAA;AAC1B,gBAAI,IAAJ,EAAU;AACV,kBAAK,MAAL;AACD,SAHe,EAGb,KAAK,SAHQ,CAAhB;AAID,KALD;AAOA,UAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,sBAAc,KAAK,QAAnB;AACD,KAFD;AAIA,UAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,YAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACtB,oBAAQ,IAAR,CAAa,+BAAb;AACA,uBAAW,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAX,EAAmC,GAAnC;AACD,SAHD,MAGO;AACL,iBAAK,WAAL;AACA,iBAAK,MAAL,CAAY,OAAZ,CAAoB,UAAA,KAAA,EAAK;AAAI,uBAAA,MAAM,MAAN,EAAA;AAAc,aAA3C;AACA,iBAAK,MAAL,CAAY,MAAZ;AACD;AACF,KATD;AAUF,WAAA,KAAA;AAtFA,CAAA,EAAA;AAwFA,QAAA,SAAA,IAAe,KAAf;;;;;AC7FA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,SAAA,aAAA,YAAA;AAME,aAAA,MAAA,CAAY,MAAZ,EAAwC,KAAxC,EAAwD,MAAxD,EAAuE;AAAvE,YAAA,QAAA,IAAA;AAFO,aAAA,SAAA,GAAoB,OAAO,EAA3B;AAGL,YAAI,MAAJ,EAAY;AACV,iBAAK,MAAL,GAAc,MAAd;AACD,SAFD,MAEO;AACL,iBAAK,MAAL,GAAc,SAAS,aAAT,CAAuB,QAAvB,CAAd;AACA,qBAAS,IAAT,CAAc,WAAd,CAA0B,KAAK,MAA/B;AACD;AAED,YAAI,SAAS,MAAb,EAAqB;AACnB,iBAAK,MAAL,CAAY,KAAZ,GAAoB,KAApB;AACA,iBAAK,MAAL,CAAY,MAAZ,GAAqB,MAArB;AACD,SAHD,MAGO;AACL,iBAAK,MAAL,CAAY,KAAZ,GAAoB,OAAO,UAA3B;AACA,iBAAK,MAAL,CAAY,MAAZ,GAAqB,OAAO,WAA5B;AACD;AAED,aAAK,OAAL,GAAe,KAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAAf;AACA,eAAO,gBAAP,CAAwB,QAAxB,EAAkC,YAAA;AAChC,kBAAK,MAAL,CAAY,KAAZ,GAAoB,OAAO,UAA3B;AACA,kBAAK,MAAL,CAAY,MAAZ,GAAqB,OAAO,WAA5B;AACD,SAHD;AAID;AAED,WAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,eAAO,KAAK,MAAL,CAAY,KAAnB;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,eAAO,KAAK,MAAL,CAAY,MAAnB;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,eAAO,IAAI,eAAA,QAAJ,CACL,KAAK,MAAL,CAAY,KADP,EAEL,KAAK,MAAL,CAAY,MAFP,CAAP;AAGD,KAJD;AAMA,WAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,eAAO,KAAK,MAAL,CAAY,SAAZ,EAAP;AACD,KAFD;AAIA,WAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACE,YAAI,SAAS,KAAb;AACA,iBAAS,gBAAT,CAA0B,OAA1B,EAAmC,YAAA;AACjC,gBAAI,CAAC,MAAL,EAAa;AACX,sBAAK,MAAL,CAAY,uBAAZ;AACD;AACF,SAJD;AAKD,KAPD;AASA,WAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAqB;AACnB,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,KAAL,CAAW,QAAX,GAAsB,IAAtB;AACA,aAAK,KAAL,CAAW,OAAX,GAAqB,KAAK,OAA1B;AACA,aAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB;AACD,KALD;AAMF,WAAA,MAAA;AA9DA,CAAA,EAAA;AAgEA,QAAA,SAAA,IAAe,MAAf;;;;;AClEA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,iBAAA,aAAA,YAAA;AAME,aAAA,cAAA,CAAY,MAAZ,EAAwB;AACtB,aAAK,OAAL,GAAe,OAAO,OAAtB;AACA,aAAK,IAAL,GAAY,OAAO,IAAP,GAAc,OAAO,IAArB,GAA4B,IAAI,eAAA,QAAJ,CAAa,GAAb,EAAkB,GAAlB,CAAxC;AACA,aAAK,QAAL,GAAgB,KAAK,OAAL,CAAa,oBAAb,CAAkC,KAAK,QAAL,CAAc,CAAhD,EAAmD,KAAK,QAAL,CAAc,CAAjE,EAAoE,KAAK,IAAL,CAAU,CAA9E,EAAiF,KAAK,IAAL,CAAU,CAA3F,CAAhB;AACA,YAAI,UAAU,CAAd;AACA,aAAkB,IAAA,KAAA,CAAA,EAAA,KAAA,OAAO,MAAzB,EAAkB,KAAA,GAAA,MAAlB,EAAkB,IAAlB,EAAiC;AAA5B,gBAAI,QAAK,GAAA,EAAA,CAAT;AACH,iBAAK,QAAL,CAAc,YAAd,CAA2B,OAA3B,EAAoC,KAApC;AACA;AACA,uBAAW,IAAI,OAAO,MAAP,CAAc,MAA7B;AACD;AACF;AACH,WAAA,cAAA;AAjBA,CAAA,EAAA;AAmBA,QAAA,SAAA,IAAe,cAAf;;;;;ACtBA,IAAA,QAAA,aAAA,YAAA;AAME,aAAA,KAAA,CAAa,GAAb,EAAsB,KAAtB,EAAiC,IAAjC,EAA2C,KAA3C,EAAoD;AAAvC,YAAA,QAAA,KAAA,CAAA,EAAA;AAAA,kBAAA,CAAA;AAAO;AAAE,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,CAAA;AAAS;AAAE,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,CAAA;AAAQ;AAAE,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,CAAA;AAAS;AAClD,aAAK,GAAL,GAAa,KAAK,KAAL,CAAW,MAAM,GAAjB,CAAb;AACA,aAAK,KAAL,GAAa,KAAK,KAAL,CAAW,QAAQ,GAAnB,CAAb;AACA,aAAK,IAAL,GAAa,KAAK,KAAL,CAAW,OAAO,GAAlB,CAAb;AACA,aAAK,KAAL,GAAa,KAAb;AAEA,YAAI,KAAK,GAAL,GAAW,GAAf,EAAoB,KAAK,GAAL,GAAW,GAAX,CAApB,KACK,IAAI,KAAK,GAAL,GAAW,CAAf,EAAkB,KAAK,GAAL,GAAW,CAAX;AAEvB,YAAI,KAAK,KAAL,GAAa,GAAjB,EAAsB,KAAK,KAAL,GAAa,GAAb,CAAtB,KACK,IAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB,KAAK,KAAL,GAAa,CAAb;AAEzB,YAAI,KAAK,IAAL,GAAY,GAAhB,EAAqB,KAAK,IAAL,GAAY,GAAZ,CAArB,KACK,IAAI,KAAK,IAAL,GAAY,CAAhB,EAAmB,KAAK,IAAL,GAAY,CAAZ;AAExB,YAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB,KAAK,KAAL,GAAa,CAAb,CAApB,KACK,IAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB,KAAK,KAAL,GAAa,CAAb;AAC1B;AAED,UAAA,SAAA,CAAA,MAAA,GAAA,UAAQ,KAAR,EAAqB;AACnB,YAAI,QAAQ,GAAZ,EAAiB;AACf,iBAAK,GAAL,GAAW,GAAX;AACD,SAFD,MAEO,IAAI,QAAQ,CAAZ,EAAe;AACpB,iBAAK,GAAL,GAAW,CAAX;AACD,SAFM,MAEA;AACL,iBAAK,GAAL,GAAW,KAAX;AACD;AACF,KARD;AAUA,UAAA,SAAA,CAAA,QAAA,GAAA,UAAU,KAAV,EAAuB;AACrB,YAAI,QAAQ,GAAZ,EAAiB;AACf,iBAAK,KAAL,GAAa,GAAb;AACD,SAFD,MAEO,IAAI,QAAQ,CAAZ,EAAe;AACpB,iBAAK,KAAL,GAAa,CAAb;AACD,SAFM,MAEA;AACL,iBAAK,KAAL,GAAa,KAAb;AACD;AACF,KARD;AAUA,UAAA,SAAA,CAAA,OAAA,GAAA,UAAS,KAAT,EAAsB;AACpB,YAAI,QAAQ,GAAZ,EAAiB;AACf,iBAAK,IAAL,GAAY,GAAZ;AACD,SAFD,MAEO,IAAI,QAAQ,CAAZ,EAAe;AACpB,iBAAK,IAAL,GAAY,CAAZ;AACD,SAFM,MAEA;AACL,iBAAK,IAAL,GAAY,KAAZ;AACD;AACF,KARD;AAUA,UAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,eAAO,UAAQ,KAAK,GAAb,GAAgB,IAAhB,GAAqB,KAAK,KAA1B,GAA+B,IAA/B,GAAoC,KAAK,IAAzC,GAA6C,IAA7C,GAAkD,KAAK,KAAvD,GAA4D,GAAnE;AACD,KAFD;AAIA,UAAA,SAAA,CAAA,GAAA,GAAA,YAAA;AACE,eAAO,SAAO,KAAK,GAAZ,GAAe,IAAf,GAAoB,KAAK,KAAzB,GAA8B,IAA9B,GAAmC,KAAK,IAAxC,GAA4C,GAAnD;AACD,KAFD;AAIO,UAAA,MAAA,GAAP,YAAA;AACE,eAAO,IAAI,KAAJ,CAAU,KAAK,MAAL,EAAV,EAAyB,KAAK,MAAL,EAAzB,EAAwC,KAAK,MAAL,EAAxC,CAAP;AACD,KAFM;AAGT,WAAA,KAAA;AAlEA,CAAA,EAAA;AAoEA,QAAA,SAAA,IAAe,KAAf;;;;;ACpEA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,YAAA,aAAA,YAAA;AAcE,aAAA,SAAA,CAAY,aAAZ,EAA8B;AAbvB,aAAA,IAAA,GAAgB,IAAhB;AACA,aAAA,IAAA,GAAiB,IAAI,eAAA,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAjB;AAOA,aAAA,KAAA,GAAiB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AAEA,aAAA,gBAAA,GAA4B,KAA5B;AAIL,aAAK,IAAL,CAAU,cAAc,GAAxB;AACA,aAAK,IAAL,GAAY,cAAc,IAAd,GAAqB,cAAc,IAAnC,GAA0C,IAAtD;AACA,aAAK,IAAL,GAAY,cAAc,IAAd,GAAqB,cAAc,IAAnC,GAA0C,IAAI,eAAA,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAtD;AACA,aAAK,KAAL,GAAa,cAAc,KAAd,GAAsB,cAAc,KAApC,GAA4C,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAzD;AACA,aAAK,SAAL,GAAiB,cAAc,SAAd,GAA0B,cAAc,SAAxC,GAAoD,EAArE;AACA,aAAK,UAAL,GAAkB,cAAc,UAAhC;AACA,aAAK,CAAL,GAAS,CAAT;AACA,aAAK,CAAL,GAAS,CAAT;AACD;AAED,cAAA,SAAA,CAAA,aAAA,GAAA,UAAe,IAAf,EAA2B;AACzB,YAAI,CAAC,KAAK,gBAAV,EAA4B;AAC1B,iBAAK,gBAAL,GAAwB,IAAxB;AACA,iBAAK,KAAL,CAAW,CAAX,GAAe,CAAf;AACA,iBAAK,KAAL,CAAW,CAAX,GAAe,KAAK,UAAL,CAAgB,IAAhB,EAAsB,CAAtB,CAAf;AACA,iBAAK,kBAAL,CAAwB,IAAxB;AACD;AACF,KAPD;AASA,cAAA,SAAA,CAAA,kBAAA,GAAA,UAAoB,IAApB,EAAgC;AAAhC,YAAA,QAAA,IAAA;AACE,aAAK,CAAL,GAAS,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAAlC;AACA,aAAK,CAAL,GAAS,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAAlC;AACA,aAAK,KAAL,CAAW,CAAX,IAAgB,CAAhB;AACA,YAAI,KAAK,KAAL,CAAW,CAAX,IAAgB,KAAK,UAAL,CAAgB,IAAhB,EAAsB,CAAtB,CAApB,EAA8C;AAC5C,iBAAK,gBAAL,GAAwB,KAAxB;AACD,SAFD,MAEO;AACL,uBAAW,YAAA;AAAM,uBAAA,MAAK,kBAAL,CAAwB,IAAxB,CAAA;AAA6B,aAA9C,EAAgD,KAAK,SAArD;AACD;AACF,KATD;AAWA,cAAA,SAAA,CAAA,SAAA,GAAA,YAAA,CAEC,CAFD;AAIA,cAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB,CAAW,CAAjC;AAEA,cAAA,SAAA,CAAA,IAAA,GAAA,UAAK,GAAL,EAAgB;AACd,aAAK,KAAL,GAAa,IAAI,KAAJ,EAAb;AACA,aAAK,KAAL,CAAW,GAAX,GAAiB,GAAjB;AACD,KAHD;AAKA,cAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,eAAO,IAAI,eAAA,QAAJ,CAAa,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAAtC,EAAyC,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAAlE,CAAP;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,SAAb,CACE,KAAK,KADP,EAEE,KAAK,CAFP,EAGE,KAAK,CAHP,EAIE,KAAK,IAAL,CAAU,CAJZ,EAIe,KAAK,IAAL,CAAU,CAJzB,EAKE,KAAK,QAAL,CAAc,CALhB,EAME,KAAK,QAAL,CAAc,CANhB,EAOE,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAP3B,EAQE,KAAK,IAAL,CAAU,CAAV,GAAc,KAAK,KAAL,CAAW,CAR3B;AAUD,KAXD;AAaA,cAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,sBAAc,KAAK,QAAnB;AACD,KAFD;AAGF,WAAA,SAAA;AA5EA,CAAA,EAAA;AA8EA,QAAA,SAAA,IAAe,SAAf;;;;;;;;;;;;;;;;;;;;;;;;AChFA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AACA,IAAA,mBAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAsB,cAAA,OAAA,EAAA,MAAA;AAIpB,aAAA,OAAA,CAAY,aAAZ,EAA+B;AAA/B,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IADtB;AAHO,cAAA,OAAA,GAAkB,EAAlB;AACA,cAAA,OAAA,GAAkB,CAAlB;AAIL,YAAI,aAAJ,EAAmB;AACjB,kBAAK,SAAL,GAAiB,cAAc,SAAd,GAA0B,cAAc,SAAxC,GAAoD,MAAK,SAA1E;AACA,kBAAK,SAAL,GAAiB,cAAc,SAAd,GAA0B,cAAc,SAAxC,GAAoD,MAAK,SAA1E;AACA,kBAAK,OAAL,GAAe,cAAc,OAAd,GAAwB,cAAc,OAAtC,GAAgD,MAAK,OAApE;AACA,kBAAK,OAAL,GAAe,cAAc,OAAd,GAAwB,cAAc,OAAtC,GAAgD,MAAK,OAApE;AACA,kBAAK,MAAL,GAAc,cAAc,MAAd,GAAuB,cAAc,MAArC,GAA8C,MAAK,MAAjE;AACA,kBAAK,KAAL,GAAa,cAAc,KAAd,GAAsB,cAAc,KAApC,GAA4C,MAAK,KAA9D;AACA,kBAAK,IAAL,GAAY,cAAc,IAAd,GAAqB,cAAc,IAAnC,GAA0C,MAAK,IAA3D;AACA,gBAAI,cAAc,cAAlB,EAAkC;AAChC,sBAAK,cAAL,GAAsB,cAAc,cAApC;AACA;AACD;AACF;;AACF;AAED,YAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,aAAK,KAAL,GAAa,IAAI,iBAAA,SAAA,CAAJ,CAAmB;AAC9B,qBAAS,KAAK,OADgB;AAE9B,oBAAQ,KAAK,cAFiB;AAG9B,kBAAM,IAAI,eAAA,QAAJ,CAAa,KAAK,QAAL,CAAc,CAA3B,EAA8B,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,OAArD,CAHwB;AAI9B,sBAAU,IAAI,eAAA,QAAJ,CAAa,KAAK,QAAL,CAAc,CAA3B,EAA8B,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,OAAL,GAAe,CAA/D;AAJoB,SAAnB,EAKV,QALH;AAOA,YAAI,KAAK,IAAT,EAAe;AACb,iBAAK,OAAL,CAAa,SAAb;AACA,iBAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,KAA9B;AACA,iBAAK,OAAL,CAAa,OAAb,CAAqB,KAAK,QAAL,CAAc,CAAnC,EAAsC,KAAK,QAAL,CAAc,CAApD,EAAuD,KAAK,OAA5D,EAAqE,KAAK,OAA1E,EAAmF,CAAnF,EAAsF,CAAtF,EAAyF,IAAI,KAAK,EAAlG;AACA,iBAAK,OAAL,CAAa,IAAb;AACD;AACD,YAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAA9B;AACA,iBAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,SAAhC;AACA,iBAAK,OAAL,CAAa,MAAb;AACD;AACF,KAnBD;AAqBA,YAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,cAAL;AACA;;;;;;;;;;;;;AAaD,KAfD;AAgBF,WAAA,OAAA;AA1DA,CAAA,CAAsB,UAAA,SAAA,CAAtB,CAAA;AA4DA,QAAA,SAAA,IAAe,OAAf;;;;;;;;;;;;;;;;;;;;;;;;AChEA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAsB,cAAA,OAAA,EAAA,MAAA;AAGpB,aAAA,OAAA,CAAY,aAAZ,EAA8B;AAA9B,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IADtB;AAEE,YAAI,cAAc,KAAlB,EAAyB,MAAK,KAAL,GAAa,cAAc,KAA3B;AACzB,YAAI,cAAc,MAAlB,EAA0B,MAAK,MAAL,GAAc,cAAc,MAA5B;AAC1B,YAAI,cAAc,KAAlB,EAAyB,MAAK,KAAL,GAAa,cAAc,KAAd,CAAoB,KAApB,CAA0B,CAA1B,EAA6B,cAAc,KAAd,CAAoB,MAAjD,CAAb;AACzB,YAAI,cAAc,IAAlB,EAAwB,MAAK,IAAL,GAAY,cAAc,IAA1B;AACxB,cAAK,QAAL,GAAgB,cAAc,KAAd,CAAoB,KAApB,CAA0B,CAA1B,CAAhB;AACA,cAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,GAAD,EAAI;AACpB,mBAAO,IAAI,eAAA,QAAJ,CAAa,IAAI,CAAJ,GAAQ,MAAK,QAAL,CAAc,CAAnC,EAAsC,IAAI,CAAJ,GAAQ,MAAK,QAAL,CAAc,CAA5D,CAAP;AACD,SAFD;;AAGD;AAED,YAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,SAAhC;AACA,aAAK,OAAL,CAAa,OAAb,GAAuB,KAAK,OAA5B;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,KAA9B;AACA,aAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,QAA7B;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,KAAL,CAAW,CAAX,EAAc,CAAlC,EAAqC,KAAK,KAAL,CAAW,CAAX,EAAc,CAAnD;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,iBAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,GAAkB,KAAK,QAAL,CAAc,CAApD,EAAuD,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,GAAkB,KAAK,QAAL,CAAc,CAAvF;AACD;AAED,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,IAAb;AACA,YAAI,KAAK,MAAT,EAAiB,KAAK,OAAL,CAAa,MAAb;AAClB,KAdD;AAeF,WAAA,OAAA;AA9BA,CAAA,CAAsB,UAAA,SAAA,CAAtB,CAAA;AAgCA,QAAA,SAAA,IAAe,OAAf;;;;;;;;;;;;;;;;;;;;;;;;AClCA,IAAA,iBAAA,gBAAA,QAAA,wBAAA,CAAA,CAAA;AAEA,IAAA,SAAA,aAAA,UAAA,MAAA,EAAA;AAAqB,cAAA,MAAA,EAAA,MAAA;AAGnB,aAAA,MAAA,CAAa,MAAb,EAAyB;AAAzB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf;AAFO,cAAA,MAAA,GAAiB,CAAjB;AAIL,YAAI,MAAJ,EAAY;AACV,kBAAK,MAAL,GAAc,OAAO,MAAP,GAAgB,OAAO,MAAvB,GAAgC,CAA9C;AACD;;AACF;AAED,WAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,GAAb,CAAiB,KAAK,QAAL,CAAc,CAA/B,EAAkC,KAAK,QAAL,CAAc,CAAhD,EAAmD,KAAK,MAAxD,EAAgE,CAAhE,EAAmE,IAAI,KAAK,EAA5E;AAEA,YAAI,KAAK,IAAT,EAAe;AACb,iBAAK,OAAL,CAAa,IAAb;AACD;AAED,YAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,OAAL,CAAa,MAAb;AACD;AACF,KAVD;AAWF,WAAA,MAAA;AArBA,CAAA,CAAqB,eAAA,SAAA,CAArB,CAAA;AAuBA,QAAA,SAAA,IAAe,MAAf;;;;;;;;;;;;;;;;;;;;;;;;AC1BA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AAEA,IAAA,OAAA,aAAA,UAAA,MAAA,EAAA;AAAmB,cAAA,IAAA,EAAA,MAAA;AAIjB,aAAA,IAAA,CAAY,IAAZ,EAAqB;AAArB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,IAAN,KAAW,IADb;AAHO,cAAA,KAAA,GAAgB,CAAhB;AACA,cAAA,MAAA,GAAiB,CAAjB;AAIL,YAAI,KAAK,KAAT,EAAgB,MAAK,KAAL,GAAa,KAAK,KAAlB;AAChB,YAAI,KAAK,MAAT,EAAiB,MAAK,MAAL,GAAc,KAAK,MAAnB;;AAClB;AAED,SAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,YAAI,KAAK,IAAT,EAAe;AACb,iBAAK,OAAL,CAAa,QAAb,CACE,KAAK,QAAL,CAAc,CADhB,EAEE,KAAK,QAAL,CAAc,CAFhB,EAGE,KAAK,KAHP,EAIE,KAAK,MAJP;AAMD;AAED,YAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,OAAL,CAAa,UAAb,CACE,KAAK,QAAL,CAAc,CADhB,EAEE,KAAK,QAAL,CAAc,CAFhB,EAGE,KAAK,KAHP,EAIE,KAAK,MAJP;AAMD;AACF,KAlBD;AAmBF,WAAA,IAAA;AA7BA,CAAA,CAAmB,UAAA,SAAA,CAAnB,CAAA;AA+BA,QAAA,SAAA,IAAe,IAAf;;;;;;;;;;;;;;;;;;;;;;;;ACjCA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,OAAA,aAAA,UAAA,MAAA,EAAA;AAAmB,cAAA,IAAA,EAAA,MAAA;AAIjB,aAAA,IAAA,CAAY,IAAZ,EAAqB;AAArB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,IAAN,KAAW,IADb;AAHO,cAAA,KAAA,GAAkB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACA,cAAA,GAAA,GAAgB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhB;AAIL,YAAI,IAAJ,EAAU;AACR,gBAAI,KAAK,KAAT,EAAgB,MAAK,KAAL,GAAa,KAAK,KAAlB;AAChB,gBAAI,KAAK,GAAT,EAAc,MAAK,GAAL,GAAW,KAAK,GAAhB;AACd,gBAAI,KAAK,KAAT,EAAgB,MAAK,KAAL,GAAa,KAAK,KAAlB;AAChB,gBAAI,KAAK,KAAT,EAAgB,MAAK,QAAL,GAAgB,KAAK,KAArB;AAChB,kBAAK,GAAL,GAAW,IAAI,eAAA,QAAJ,CAAa,MAAK,GAAL,CAAS,CAAT,GAAa,MAAK,KAAL,CAAW,CAArC,EAAwC,MAAK,GAAL,CAAS,CAAT,GAAa,MAAK,KAAL,CAAW,CAAhE,CAAX;AACD;;AACF;AAED,SAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE;;;;;;AAMD,aAAK,OAAL,CAAa,SAAb;AACC,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,QAAL,CAAc,CAAlC,EAAqC,KAAK,QAAL,CAAc,CAAnD;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,GAAL,CAAS,CAAT,GAAa,KAAK,QAAL,CAAc,CAA/C,EAAkD,KAAK,GAAL,CAAS,CAAT,GAAa,KAAK,QAAL,CAAc,CAA7E;AACA,aAAK,OAAL,CAAa,MAAb;AACD,KAXD;AAYF,WAAA,IAAA;AA3BA,CAAA,CAAmB,UAAA,SAAA,CAAnB,CAAA;AA6BA,QAAA,SAAA,IAAe,IAAf;;;;;;;;;;;;;;;;;;;;;;;;AChCA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AAEA,IAAA,OAAA,aAAA,UAAA,MAAA,EAAA;AAAmB,cAAA,IAAA,EAAA,MAAA;AAMjB,aAAA,IAAA,CAAY,aAAZ,EAA8B;AAA9B,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IADtB;AAJO,cAAA,UAAA,GAAqB,EAArB;AACA,cAAA,UAAA,GAAqB,EAArB;AACA,cAAA,QAAA,GAAmB,GAAnB;AAIL,YAAI,aAAJ,EAAmB;AACjB,kBAAK,OAAL,GAAe,cAAc,OAAd,GAAwB,cAAc,OAAtC,GAAgD,EAA/D;AACD;;AACF;AAED,SAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,YAAI,IAAI,KAAK,QAAL,CAAc,CAAtB;AACA,YAAI,IAAI,KAAK,QAAL,CAAc,CAAtB;AACA,YAAI,QAAQ,KAAK,OAAL,CAAa,KAAb,CAAmB,GAAnB,CAAZ;AACA,YAAI,OAAO,EAAX;AAEA,aAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,MAAM,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,gBAAI,WAAW,OAAO,MAAM,CAAN,CAAP,GAAkB,GAAjC;AACA,gBAAI,UAAU,KAAK,OAAL,CAAa,WAAb,CAAyB,QAAzB,CAAd;AACA,gBAAI,YAAY,QAAQ,KAAxB;AACA,gBAAI,YAAY,KAAK,QAAjB,IAA6B,IAAI,CAArC,EAAwC;AACtC,qBAAK,OAAL,CAAa,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+B,CAA/B;AACA,uBAAO,MAAM,CAAN,IAAW,GAAlB;AACA,qBAAK,KAAK,UAAV;AACD,aAJD,MAKK;AACH,uBAAO,QAAP;AACD;AACF;AACD,aAAK,OAAL,CAAa,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+B,CAA/B;AACD,KApBD;AAsBA,SAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,KAA9B;AACA,aAAK,OAAL,CAAa,IAAb,GAAuB,KAAK,MAAL,GAAW,GAAX,GAAe,KAAK,IAApB,GAAwB,KAAxB,GAA8B,KAAK,MAA1D;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAA9B;AACA,aAAK,OAAL,CAAa,YAAb,GAA4B,KAAK,YAAjC;AACA,YAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,OAAL,CAAa,UAAb,CAAwB,KAAK,OAA7B,EAAsC,KAAK,QAAL,CAAc,CAApD,EAAuD,KAAK,QAAL,CAAc,CAArE;AACD;AACD,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAK,OAA3B,EAAoC,KAAK,QAAL,CAAc,CAAlD,EAAqD,KAAK,QAAL,CAAc,CAAnE;AACD,KATD;AAUF,WAAA,IAAA;AA7CA,CAAA,CAAmB,UAAA,SAAA,CAAnB,CAAA;AA+CA,QAAA,SAAA,IAAe,IAAf;;;;;;;;;;;;;;;;;;;;;;;;ACjDA,IAAA,iBAAA,gBAAA,QAAA,wBAAA,CAAA,CAAA;AAEA,IAAA,MAAA,aAAA,UAAA,MAAA,EAAA;AAAkB,cAAA,GAAA,EAAA,MAAA;AAIhB,aAAA,GAAA,CAAY,aAAZ,EAA+B;AAA/B,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IADtB;AAHO,cAAA,QAAA,GAAmB,CAAnB;AACA,cAAA,UAAA,GAAqB,KAAK,EAA1B;AAIL,YAAI,aAAJ,EAAmB;AACjB,kBAAK,QAAL,GAAgB,cAAc,QAAd,GAAyB,cAAc,QAAvC,GAAkD,CAAlE;AACA,kBAAK,UAAL,GAAkB,cAAc,UAAd,GAA2B,cAAc,UAAzC,GAAsD,KAAK,EAA7E;AACD;;AACF;AAED,QAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,GAAb,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAK,MAA5B,EAAoC,KAAK,QAAzC,EAAmD,KAAK,UAAxD,EAAoE,IAApE;AAEA,YAAI,KAAK,IAAT,EAAe;AACb,iBAAK,OAAL,CAAa,IAAb;AACD;AAED,YAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,OAAL,CAAa,MAAb;AACD;AACF,KAVD;AAWF,WAAA,GAAA;AAvBA,CAAA,CAAkB,eAAA,SAAA,CAAlB,CAAA;AAyBA,QAAA,SAAA,IAAe,GAAf;;;;;;;;;;;;;;;;;;;;;;;;AC3BA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AAEA,IAAA,cAAA,aAAA,UAAA,MAAA,EAAA;AAA0B,cAAA,WAAA,EAAA,MAAA;AAGxB,aAAA,WAAA,CAAa,MAAb,EAAwB;AAAxB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf;AAEE,cAAK,KAAL,GAAa,OAAO,KAAP,GAAe,OAAO,KAAtB,GAA8B,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAW,CAAC,EAAD,EAAK,EAAL,CAAX,EAAqB,CAAC,EAAD,EAAK,EAAL,CAArB,CAA3C;;AACD;AAED,gBAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,OAAb,GAAuB,KAAK,OAA5B;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAA9B;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,SAAhC;AACA,aAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,QAA7B;AACA,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,QAAL,CAAc,CAArC,EAAwC,KAAK,QAAL,CAAc,CAAtD;AACA,aAAK,OAAL,CAAa,aAAb,CAA2B,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAA3B,EAA6C,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAA7C,EAA+D,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAA/D,EAAiF,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAjF,EAAmG,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAnG,EAAqH,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAArH;AACA,aAAK,OAAL,CAAa,MAAb;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KAXD;AAYF,WAAA,WAAA;AApBA,CAAA,CAA0B,UAAA,SAAA,CAA1B,CAAA;AAsBA,QAAA,SAAA,IAAe,WAAf;;;;;;;;;;;;;;;;;;;;;;;;ACxBA,IAAA,YAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AAEA,IAAA,iBAAA,aAAA,UAAA,MAAA,EAAA;AAA6B,cAAA,cAAA,EAAA,MAAA;AAK3B,aAAA,cAAA,CAAa,MAAb,EAAwB;AAAxB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf;AAEE,cAAK,KAAL,GAAa,OAAO,KAAP,GAAe,OAAO,KAAtB,GAA8B,OAA3C;AACA,cAAK,KAAL,GAAa,OAAO,KAAP,GAAe,OAAO,KAAtB,GAA8B,CAA3C;AACA,cAAK,KAAL,GAAa,OAAO,KAAP,GAAe,OAAO,KAAtB,GAA8B,CAAC,CAAC,EAAD,EAAK,GAAL,CAAD,EAAY,CAAC,GAAD,EAAM,EAAN,CAAZ,CAA3C;;AACD;AAED,mBAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,OAAL,CAAa,SAAb;AACA,aAAK,OAAL,CAAa,OAAb,GAAuB,KAAK,OAA5B;AACA,aAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,QAA7B;AACA,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,KAA9B;AACA,aAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,KAAhC;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,QAAL,CAAc,CAAlC,EAAqC,KAAK,QAAL,CAAc,CAAnD;AACA,aAAK,OAAL,CAAa,gBAAb,CAA8B,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAA9B,EAAgD,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAhD,EAAkE,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAlE,EAAoF,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAApF;AACA,aAAK,OAAL,CAAa,MAAb;AACA,aAAK,OAAL,CAAa,OAAb;AACD,KAXD;AAYF,WAAA,cAAA;AAxBA,CAAA,CAA6B,UAAA,SAAA,CAA7B,CAAA;AA0BA,QAAA,SAAA,IAAe,cAAf;;;;;ACXA,IAAA,QAAA,aAAA,YAAA;AAAA,aAAA,KAAA,GAAA;AACS,aAAA,MAAA,GAAc;AACnB;AACA,uBAAW,EAFQ;AAGnB,qBAAS,EAHU;AAInB,uBAAW,EAJQ;AAKnB,6BAAiB,KALE;AAMnB,6BAAiB,KANE;AAOnB,2BAAe,KAPI;AASnB;AACA,sBAAU,EAVS;AAWnB,mBAAO,EAXY;AAYnB,qBAAS,EAZU;AAanB,4BAAgB,KAbG;AAcnB,2BAAe,KAdI;AAenB,yBAAa;AAfM,SAAd;AAuBR;AALQ,UAAA,SAAA,CAAA,SAAA,GAAP,UAAkB,IAAlB,EAA8B;AAA9B,YAAA,QAAA,IAAA;AACE,iBAAS,gBAAT,CAA0B,IAA1B,EAAgC,UAAC,KAAD,EAAM;AACpC,kBAAK,MAAL,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAC,IAAD,EAAe;AAAK,uBAAA,KAAK,KAAL,EAAW,KAAX,CAAA;AAAiB,aAA/D;AACD,SAFD;AAGD,KAJM;AAKT,WAAA,KAAA;AAxBA,CAAA,EAAA;AA0BA,QAAA,SAAA,IAAe,KAAf;;;;;;;;;;;;;;;;;;;;;;;;AC1CA,IAAA,iBAAA,QAAA,cAAA,CAAA;AACA,IAAA,UAAA,gBAAA,QAAA,SAAA,CAAA,CAAA;AAEA,IAAA,QAAA,aAAA,UAAA,MAAA,EAAA;AAAoB,cAAA,KAAA,EAAA,MAAA;AAIlB,aAAA,KAAA,GAAA;AAAA,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,KAAO,IADT;AAHO,cAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,cAAA,OAAA,GAAmB,KAAnB;AAIL,cAAK,IAAL,CAAU,UAAC,IAAD,EAAY,KAAZ,EAAsB;AAC9B,kBAAK,QAAL,CAAc,CAAd,GAAkB,MAAM,OAAxB;AACA,kBAAK,QAAL,CAAc,CAAd,GAAkB,MAAM,OAAxB;AACD,SAHD;;AAID;AAED,UAAA,SAAA,CAAA,IAAA,GAAA,UAAM,IAAN,EAAoB;AAClB,YAAI,CAAC,KAAK,MAAL,CAAY,eAAjB,EAAkC;AAChC,iBAAK,SAAL,CAAe,WAAf;AACA,iBAAK,MAAL,CAAY,eAAZ,GAA8B,IAA9B;AACD;AACD,aAAK,MAAL,CAAY,SAAZ,CAAsB,IAAtB,CAA2B,IAA3B;AACD,KAND;AAQA,UAAA,SAAA,CAAA,EAAA,GAAA,UAAI,IAAJ,EAAkB;AAChB,YAAI,CAAC,KAAK,MAAL,CAAY,aAAjB,EAAgC;AAC9B,iBAAK,SAAL,CAAe,SAAf;AACA,iBAAK,MAAL,CAAY,aAAZ,GAA4B,IAA5B;AACD;AACF,KALD;AAOA,UAAA,SAAA,CAAA,IAAA,GAAA,UAAM,IAAN,EAAoB;AAClB,YAAI,CAAC,KAAK,MAAL,CAAY,eAAjB,EAAkC;AAChC,iBAAK,SAAL,CAAe,WAAf;AACA,iBAAK,MAAL,CAAY,eAAZ,GAA8B,IAA9B;AACD;AACF,KALD;AAMF,WAAA,KAAA;AAjCA,CAAA,CAAoB,QAAA,SAAA,CAApB,CAAA;AAmCA,QAAA,SAAA,IAAe,KAAf;;;;;;;;;;;;;;;;;;;;;;;;ACtCA,IAAA,UAAA,gBAAA,QAAA,SAAA,CAAA,CAAA;AAEA,IAAA,WAAA,aAAA,UAAA,MAAA,EAAA;AAAuB,cAAA,QAAA,EAAA,MAAA;AAAvB,aAAA,QAAA,GAAA;AAAA,YAAA,QAAA,WAAA,IAAA,IAAA,OAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACS,cAAA,IAAA,GAAsB,EAAtB;;AA0CR;AAxCC,aAAA,SAAA,CAAA,KAAA,GAAA,UAAO,GAAP,EAAoB,IAApB,EAAkC;AAAlC,YAAA,QAAA,IAAA;AACE,YAAM,QAAQ,SAAR,KAAQ,CAAC,IAAD,EAAY,KAAZ,EAAsB;AAClC;AACA;AACA,gBAAI,MAAM,GAAN,KAAc,GAAlB,EAAuB;AACrB;AACA,qBAAK,KAAL,EAAW,KAAX;AACD;AACF,SAPD;AASA,YAAI,CAAC,KAAK,MAAL,CAAY,cAAjB,EAAiC;AAC/B,iBAAK,MAAL,CAAY,cAAZ,GAA6B,IAA7B;AACA,iBAAK,SAAL,CAAe,UAAf;AACD;AACD,aAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,KAA1B;AACD,KAfD;AAiBA,aAAA,SAAA,CAAA,IAAA,GAAA,UAAM,GAAN,EAAmB,KAAnB,EAAiC;AAAjC,YAAA,QAAA,IAAA;AACE,gBAAO,cAAC,IAAD,EAAY,KAAZ,EAAsB;AAC3B,gBAAI,MAAM,GAAN,KAAc,GAAlB,EAAuB,MAAK,KAAL,EAAW,KAAX;AACxB,SAFD;AAIA,YAAI,CAAC,KAAK,MAAL,CAAY,aAAjB,EAAgC;AAC9B,iBAAK,MAAL,CAAY,aAAZ,GAA4B,IAA5B;AACA,iBAAK,SAAL,CAAe,SAAf;AACD;AACD,aAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAAyB,KAAzB;AACD,KAVD;AAYA,aAAA,SAAA,CAAA,EAAA,GAAA,UAAI,GAAJ,EAAiB,IAAjB,EAA+B;AAA/B,YAAA,QAAA,IAAA;AACE,YAAM,QAAQ,SAAR,KAAQ,CAAC,IAAD,EAAY,KAAZ,EAAsB;AAClC,gBAAI,MAAM,GAAN,KAAc,GAAlB,EAAuB,KAAK,KAAL,EAAW,KAAX;AACxB,SAFD;AAIA,YAAI,CAAC,KAAK,MAAL,CAAY,WAAjB,EAA8B;AAC5B,iBAAK,MAAL,CAAY,WAAZ,GAA0B,IAA1B;AACA,iBAAK,SAAL,CAAe,OAAf;AACD;AACD,aAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,KAAvB;AACD,KAVD;AAWF,WAAA,QAAA;AA3CA,CAAA,CAAuB,QAAA,SAAA,CAAvB,CAAA;AA6CA,QAAA,SAAA,IAAe,QAAf;;;;;;;;AChDA,IAAM,aAAa,SAAS,aAAT,CAAuB,OAAvB,CAAnB;AACA,WAAW,IAAX,GAAkB,UAAlB;AACA,WAAW,SAAX,GAAuB,8EAAvB;AAWA,SAAS,IAAT,CAAc,WAAd,CAA0B,UAA1B;AAEA,IAAA,UAAA,gBAAA,QAAA,SAAA,CAAA,CAAA;AA+CE,QAAA,KAAA,GA/CK,QAAA,SAAA,CA+CL;AA9CF,IAAA,WAAA,gBAAA,QAAA,UAAA,CAAA,CAAA;AA+CE,QAAA,MAAA,GA/CK,SAAA,SAAA,CA+CL;AA9CF,IAAA,mBAAA,gBAAA,QAAA,kBAAA,CAAA,CAAA;AA8BE,QAAA,cAAA,GA9BK,iBAAA,SAAA,CA8BL;AA7BF,IAAA,iBAAA,QAAA,cAAA,CAAA;AAqCE,QAAA,QAAA,GArCO,eAAA,QAqCP;AApCF,IAAA,UAAA,gBAAA,QAAA,SAAA,CAAA,CAAA;AAgCE,QAAA,KAAA,GAhCK,QAAA,SAAA,CAgCL;AA9BF;AACA,IAAA,cAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AA8BE,QAAA,SAAA,GA9BK,YAAA,SAAA,CA8BL;AA7BF,IAAA,YAAA,gBAAA,QAAA,oBAAA,CAAA,CAAA;AAsCE,QAAA,OAAA,GAtCK,UAAA,SAAA,CAsCL;AArCF,IAAA,YAAA,gBAAA,QAAA,oBAAA,CAAA,CAAA;AAwBE,QAAA,OAAA,GAxBK,UAAA,SAAA,CAwBL;AAvBF,IAAA,YAAA,gBAAA,QAAA,oBAAA,CAAA,CAAA;AAgCE,QAAA,OAAA,GAhCK,UAAA,SAAA,CAgCL;AA/BF,IAAA,YAAA,gBAAA,QAAA,iBAAA,CAAA,CAAA;AAgCE,QAAA,OAAA,GAhCK,UAAA,SAAA,CAgCL;AA/BF,IAAA,WAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AA2BE,QAAA,MAAA,GA3BK,SAAA,SAAA,CA2BL;AA1BF,IAAA,UAAA,gBAAA,QAAA,eAAA,CAAA,CAAA;AAiBE,QAAA,KAAA,GAjBK,QAAA,SAAA,CAiBL;AAhBF,IAAA,SAAA,gBAAA,QAAA,iBAAA,CAAA,CAAA;AAwBE,QAAA,IAAA,GAxBK,OAAA,SAAA,CAwBL;AAvBF,IAAA,SAAA,gBAAA,QAAA,iBAAA,CAAA,CAAA;AA0BE,QAAA,IAAA,GA1BK,OAAA,SAAA,CA0BL;AAzBF,IAAA,SAAA,gBAAA,QAAA,iBAAA,CAAA,CAAA;AA4BE,QAAA,IAAA,GA5BK,OAAA,SAAA,CA4BL;AA3BF,IAAA,QAAA,gBAAA,QAAA,gBAAA,CAAA,CAAA;AA4BE,QAAA,GAAA,GA5BK,MAAA,SAAA,CA4BL;AA3BF,IAAA,gBAAA,gBAAA,QAAA,wBAAA,CAAA,CAAA;AAaE,QAAA,WAAA,GAbK,cAAA,SAAA,CAaL;AAZF,IAAA,mBAAA,gBAAA,QAAA,2BAAA,CAAA,CAAA;AAUE,QAAA,cAAA,GAVK,iBAAA,SAAA,CAUL;AARF;AACA,IAAA,UAAA,gBAAA,QAAA,gBAAA,CAAA,CAAA;AACA,IAAA,aAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AAEA,IAAM,QAAQ,IAAI,QAAA,SAAA,CAAJ,EAAd;AASE,QAAA,KAAA,GAAA,KAAA;AARF,IAAM,WAAW,IAAI,WAAA,SAAA,CAAJ,EAAjB;AASE,QAAA,QAAA,GAAA,QAAA","file":"src.be64ce74.map","sourceRoot":"..","sourcesContent":["class Vector {\r\n  public x: number\r\n  public y: number\r\n\r\n  constructor (x: number = 0, y: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  add (vector: Vector): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  sub (vector: Vector): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  dot (vector: Vector): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  distance (vector: Vector): number {\r\n    return Vector.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle: number): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector, speed: number = 1, stop: number = 1): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector.normalize(Vector.sub(vector, this))\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  static add (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x + vector2.x, vector1.y + vector2.y)\r\n  }\r\n\r\n  static sub (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x - vector2.x, vector1.y - vector2.y)\r\n  }\r\n\r\n  static mult (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  static div (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector): Vector {\r\n    return new Vector(vector.x * -1, vector.y * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector, vector2: Vector): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector): Vector {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector, vector2: Vector): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static randomP (x: number, y: number): Vector {\r\n    return new Vector(x * Math.random(), y * Math.random())\r\n  }\r\n\r\n  static random (x: number = 1, y: number = 1): Vector {\r\n    let s1 = 1\r\n    let s2 = 1\r\n    if (Math.random() > 0.5) s1 = -1\r\n    if (Math.random() > 0.5) s2 = -1\r\n    return new Vector(x * Math.random() * s1, y * Math.random() * s2)\r\n  }\r\n}\r\n\r\nexport default Vector\r\n  ","\r\nclass Vector3D {\r\n  public x: number\r\n  public y: number\r\n  public z: number\r\n\r\n  constructor (x: number, y: number, z: number) {\r\n    this.x = x\r\n    this.y = y\r\n    this.z = z\r\n  }\r\n\r\n  add (vector: Vector3D): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n    this.z += vector.z\r\n  }\r\n\r\n  sub (vector: Vector3D): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n    this.z -= vector.z\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n    this.z *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n    this.z /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n    this.z *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n  }\r\n\r\n  dot (vector: Vector3D): number {\r\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z\r\n  }\r\n\r\n  distance (vector: Vector3D): number {\r\n    return Vector3D.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector3D {\r\n    return new Vector3D(this.x, this.y, this.z)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle: number): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector3D, speed: number, stop: number): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector3D.normalize(vector)\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n    this.z = 0\r\n  }\r\n\r\n  static add (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x + vector2.x, vector1.y + vector2.y, vector1.z + vector2.z)\r\n  }\r\n\r\n  static sub (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x - vector2.x, vector1.y - vector2.y, vector1.z - vector2.z)\r\n  }\r\n\r\n  static mult (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x * scalar, vector.y * scalar, vector.z * scalar)\r\n  }\r\n\r\n  static div (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x / scalar, vector.y / scalar, vector.z / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector3D): Vector3D {\r\n    return new Vector3D(vector.x * -1, vector.y * -1, vector.z * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector3D, vector2: Vector3D): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector3D): Vector3D {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector3D, vector2: Vector3D): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static random (x: number, y: number, z: number): Vector3D {\r\n    if (Math.random() > 0.5) {\r\n      return new Vector3D(x * Math.random(), y * Math.random(), z * Math.random())\r\n    } else {\r\n      return new Vector3D(-x * Math.random(), -y * Math.random(), -z * Math.random())\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vector3D\r\n\r\n/*\r\n\r\nTO ADD\r\n\r\nimport vector from '../vector'\r\n\r\nfunction rotate (x, y, z, center, vec) {\r\n  let vecR\r\n  vecR = vector.sub(vec, center)\r\n  vecR = rotateX(vecR, x)\r\n  vecR = rotateY(vecR, y)\r\n  vecR = rotateZ(vecR, z)\r\n  vecR = vector.add(vecR, center)\r\n  return vecR\r\n}\r\n\r\nfunction rotateX (vec, t) {\r\n  let vecR = vec\r\n  let newy = vec[1] * Math.cos(t) - vec[2] * Math.sin(t)\r\n  let newz = vec[1] * Math.sin(t) + vec[2] * Math.cos(t)\r\n  vecR[1] = newy\r\n  vecR[2] = newz\r\n  return vecR\r\n}\r\n\r\nfunction rotateY (vec, t) {\r\n  let vecR = vec\r\n  let newz = vec[2] * Math.cos(t) - vec[0] * Math.sin(t)\r\n  let newx = vec[2] * Math.sin(t) + vec[0] * Math.cos(t)\r\n  vecR[2] = newz\r\n  vecR[0] = newx\r\n  return vecR\r\n}\r\n\r\nfunction rotateZ (vec, t) {\r\n  let vecR = vec\r\n  let newx = vec[0] * Math.cos(t) - vec[1] * Math.sin(t)\r\n  let newy = vec[0] * Math.sin(t) + vec[1] * Math.cos(t)\r\n  vecR[0] = newx\r\n  vecR[1] = newy\r\n  return vecR\r\n}\r\n\r\nconst memlength = (vec) => Math.pow(Math.pow(vec[0], 2) + Math.pow(vec[1], 2) + Math.pow(vec[2], 2), 0.5)\r\n\r\nconst normal = (v1, v2, v3) => vector.cross(vector.sub(v2, v1), vector.sub(v3, v1))\r\n\r\nfunction isInTriangle (vec, triangle) {\r\n  let u = vector.sub(triangle.v2, triangle.v1)\r\n  let v = vector.sub(triangle.v3, triangle.v1)\r\n  let w = vector.sub(vec, triangle.v1)\r\n\r\n  let vCrossW = vector.cross(v, w)\r\n  let vCrossU = vector.cross(v, u)\r\n\r\n  if (vector3.dot(vCrossW, vCrossU) < 0) return false\r\n\r\n  let uCrossW = vector.cross(u, w)\r\n  let uCrossV = vector.cross(u, v)\r\n\r\n  if (vector3.dot(uCrossW, uCrossV) < 0) return false\r\n\r\n  let denom = memlength(uCrossV)\r\n  let r = memlength(vCrossW) / denom\r\n  let t = memlength(uCrossW) / denom\r\n\r\n  return (r + t <= 1)\r\n}\r\n\r\nfunction getTriangleArea (triangle) {\r\n  let temp = vector.cross(vector.sub(triangle.v3, triangle.v1), vector.sub(triangle.v3, triangle.v2))\r\n  let x = Math.pow(temp[0], 2)\r\n  let y = Math.pow(temp[1], 2)\r\n  let z = Math.pow(temp[2], 2)\r\n  return Math.pow(x + y + z, 0.5) / 2\r\n}\r\n\r\nfunction dot (vec1, vec2) {\r\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1] + vec1[2] * vec2[2]\r\n}\r\n\r\nfunction getPlaneIntersect (line1, line2, triangle) {\r\n  let normal = triangle.normal\r\n  let u = vector3.dot(normal, vector.sub(triangle.v1, line1)) / vector3.dot(normal, vector.sub(line2, line1))\r\n  return vector.add(line1, vector.mult(vector.sub(line2, line1), u))\r\n}\r\n\r\nconst vector3 = { dot, rotate, normal, isInTriangle, getTriangleArea, getPlaneIntersect, memlength }\r\n\r\nexport default vector3\r\n\r\n*/","\r\nimport Vector2D from './Vector2D'\r\nimport Vector3D from './Vector3D'\r\n\r\nexport {\r\n  Vector2D,\r\n  Vector3D\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport Graphic from './graphics/Graphic'\r\nimport Scene from './Scene'\r\nimport {mouse} from './index'\r\n\r\nclass Camera {\r\n  public context: CanvasRenderingContext2D\r\n  public keyMap = { up: 'w', down: 's', left: 'a', right: 'd' }\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  private followedPosition: Vector2D\r\n  private fLastPosition: Vector2D = new Vector2D(0, 0)\r\n  private followingX: boolean = false\r\n  private followingY: boolean = false\r\n  private keyTranslateEnabled: boolean = false\r\n  private velocity: Vector2D = new Vector2D(0, 0)\r\n  private acceleration: Vector2D = new Vector2D(0, 0)\r\n  private friction: number = 0.9\r\n\r\n  constructor (context: CanvasRenderingContext2D) {\r\n    this.context = context\r\n  }\r\n\r\n  addForce(force: Vector2D): void {\r\n    this.acceleration.add(force)\r\n  }\r\n/*\r\n  enable() {\r\n    document.addEventListener('mousemove', (e) => {\r\n      this.mouse.position.x = e.clientX\r\n      this.mouse.position.y = e.clientY\r\n    })\r\n  }\r\n*/\r\n  getMouse () {\r\n    return Vector2D.add(mouse.position, this.position)\r\n  }\r\n\r\n  disableKeyTranslate() {\r\n\r\n  }\r\n\r\n  enableKeyTranslate() {\r\n    this.keyTranslateEnabled = true\r\n    document.addEventListener('keypress', (e) => {\r\n      if (e.key.toLowerCase() === this.keyMap.up) {\r\n        this.addForce(new Vector2D(0, 10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.down) {\r\n        this.addForce(new Vector2D(0, -10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.left) {\r\n        this.addForce(new Vector2D(10, 0))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.right) {\r\n        this.addForce(new Vector2D(-10, 0))\r\n      }\r\n    })\r\n  }\r\n\r\n  follow(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.fLastPosition = this.followedPosition.copy()\r\n    this.followingX = true\r\n    this.followingY = true\r\n  }\r\n\r\n  followX(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingX = true\r\n  }\r\n\r\n  followY(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingY = true\r\n  }\r\n\r\n  stopFollowing(): void {\r\n    this.followingX = false\r\n    this.followingY = false\r\n  }\r\n\r\n  stopFollowingX(): void {\r\n    this.followingX = false\r\n  }\r\n\r\n  stopFollowingY(): void {\r\n    this.followingY = false\r\n  }\r\n\r\n  zoom(where: Vector2D, howMuch: Vector2D): void {\r\n    this.context.translate(where.x, where.y)\r\n    this.context.scale(howMuch.x, howMuch.y)\r\n    this.context.translate(-where.x, -where.y)\r\n  }\r\n\r\n  translate(x: number, y: number): void {\r\n    this.position.x -= x\r\n    this.position.y -= y\r\n    this.context.translate(x, y)\r\n  }\r\n\r\n  update() {\r\n    if (this.keyTranslateEnabled) {\r\n      this.velocity.add(this.acceleration)\r\n      this.velocity.mult(this.friction)\r\n      this.translate(this.velocity.x, this.velocity.y)\r\n      this.position.add(this.velocity)\r\n      this.acceleration.zero()\r\n    }\r\n    if (this.followingX || this.followingY) {\r\n      const change = Vector2D.sub(this.fLastPosition, this.followedPosition)\r\n      this.fLastPosition = this.followedPosition.copy()\r\n      this.translate(change.x, change.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Camera\r\n","export enum LineCap {\r\n  butt = 'butt',\r\n  square = 'square',\r\n  round = 'round'\r\n}\r\n\r\nexport enum LineJoin {\r\n  bevel = 'bevel',\r\n  round = 'round',\r\n  miter = 'miter'\r\n}\r\n\r\nexport enum Pattern {\r\n  repeat = 'repeat',\r\n  repeat_x = 'repeat-x',\r\n  repeat_y = 'repeat-y',\r\n  no_repeat = 'no-repeat'\r\n}\r\n\r\nexport enum weights {\r\n  lighter = 'lighter',\r\n  normal = 'normal',\r\n  bolder = 'bolder',\r\n  bold = 'bold'\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport { weights, LineCap, LineJoin } from '../Properties'\r\n\r\nclass Graphic {\r\n  public weight: weights = weights.normal\r\n  public context: any\r\n  public linearGradient: any\r\n  public fill: Boolean = true\r\n  public stroke: Boolean = false\r\n  public anchor: Vector2D = new Vector2D(0.5, 0.5)\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public color: String = 'grey'\r\n  public family: String = 'Arial'\r\n  public lineCap: String = LineCap.round\r\n  public lineJoin: String = LineJoin.round\r\n  public lineColor: String = 'rgb(0, 0, 0)'\r\n  public textAlign: String = 'center'\r\n  public shadowColor: String = 'rgba(0, 0, 0, 0)'\r\n  public textBaseline: String = 'middle'\r\n  public size: Number = 12\r\n  public rotation: Number = 0\r\n  public z_index: Number = 1\r\n  public lineWidth: Number = 1\r\n  public miterLimit: Number = 10\r\n  public shadowBlur: Number = 0\r\n  public shadowOffsetX: Number = 0\r\n  public shadowOffsetY: Number = 0\r\n  public childs: Array<any> = []\r\n\r\n  constructor(data?: any) {\r\n    if (data) {\r\n      if (data.stroke !== undefined) {\r\n        if (typeof data.stroke === 'boolean') {\r\n          this.stroke = data.stroke\r\n        } else {\r\n          console.info(`Type of stroke is not boolean`)\r\n        }\r\n      } else {\r\n        this.stroke = false\r\n      }\r\n      if (data.fill !== undefined) {\r\n        if (typeof data.fill === 'boolean') {\r\n          this.fill = data.fill\r\n        } else {\r\n          console.info(`Type of fill is not boolean`)\r\n        }\r\n      } else {\r\n        this.fill = true\r\n      }\r\n      this.weight = data.weights ? data.weights : weights.normal\r\n      this.anchor = data.anchor ? data.anchor : new Vector2D(0.5, 0.5)\r\n      this.position = data.position ? data.position : new Vector2D(0, 0)\r\n      this.z_index = data.z_index ? data.z_index : 1\r\n      this.shadowBlur = data.shadowBlur ? data.shadowBlur : 0\r\n      this.shadowOffsetX = data.shadowOffsetX ? data.shadowOffsetX : 0\r\n      this.shadowOffsetY = data.shadowOffsetY ? data.shadowOffsetY : 0\r\n      this.shadowColor = data.shadowColor ? data.shadowColor : 'rgba(0,0,0,0)'\r\n      this.miterLimit = data.miterLimit ? data.miterLimit : 10\r\n      this.lineCap = data.lineCap ? data.lineCap : LineCap.round\r\n      this.color = data.color ? data.color : 'grey'\r\n      this.family = data.family ? data.family : 'Arial'\r\n      this.lineJoin = data.lineJoin ? data.lineJoin : LineJoin.round\r\n      this.lineColor = data.lineColor ? data.lineColor : 'rgb(50, 50, 50)'\r\n      this.textAlign = data.textAlign ? data.textAlign : 'center'\r\n      this.textBaseline = data.textBaseline ? data.textBaseline : 'middle'\r\n      this.size = data.size ? data.size : 12\r\n      this.rotation = data.rotation ? data.rotation : 0\r\n      this.lineWidth = data.lineWidth ? data.lineWidth : 1\r\n    }\r\n  }\r\n\r\n  add(child: any): void {\r\n    child.context = this.context\r\n    this.childs.push(child)\r\n  }\r\n\r\n  remove(child: any): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  getFont() {\r\n    return `${this.weight} ${this.size}px ${this.family}`\r\n  }\r\n\r\n  setStyle(): void {\r\n    this.context.font = this.getFont()\r\n    this.context.fillStyle = this.color\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.textAlign = this.textAlign\r\n    this.context.shadowColor = this.shadowColor\r\n    this.context.textBaseline = this.textBaseline\r\n    this.context.miterLimit = this.miterLimit\r\n    this.context.shadowBlur = this.shadowBlur\r\n    this.context.shadowOffsetX = this.shadowOffsetX\r\n    this.context.shadowOffsetY = this.shadowOffsetY\r\n  }\r\n\r\n  /*\r\n      Most be somewhere here\r\n  \r\n      this.childs.forEach(c => c.context = this.context)\r\n      this.childs.forEach(c => c.render())\r\n  \r\n  \r\n  */\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.context.beginPath()\r\n    // if (this.context.fill || this.context.stroke) {\r\n    this.setStyle()\r\n    this.selfRender()\r\n    // }\r\n    // this.context.restore()\r\n  }\r\n\r\n  selfRender() { }\r\n}\r\n\r\nexport default Graphic\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n-------------------------------- GRUPO --------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Graphic from './graphics/Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nexport default class Group {\r\n  private childs: Array<Graphic> = []\r\n  private context: CanvasRenderingContext2D\r\n  public position: Vector2D = new Vector2D(0, 0) // la posicion tu la tenias publica, asi que no tiene sentido ese metodo de translate que querias hacer\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number\r\n\r\n  add(child: Graphic): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  scaleObject(child: any) {\r\n    if (child.type == \"arc\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else if (child.type == \"line\") {\r\n      child.end = new Vector(child.end.x * this.scale.x, child.end.y * this.scale.y)\r\n      child.render()\r\n      child.end = new Vector(child.end.x / this.scale.x, child.end.y / this.scale.y)\r\n    } else if (child.type == \"img\" || child.type == \"rect\") {\r\n      child.width *= this.scale.x\r\n      child.height *= this.scale.y\r\n      child.render()\r\n      child.width /= this.scale.x\r\n      child.height /= this.scale.y\r\n    } else if (child.type == \"poligon\") {\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x * this.scale.x, pnt.y * this.scale.y)\r\n      })\r\n      child.render()\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x / this.scale.x, pnt.y / this.scale.y)\r\n      })\r\n    } else if (child.type == \"circle\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else {\r\n      throw \"error, no se puede escalar dicho objeto\"\r\n    }\r\n    return child\r\n  }\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.childs.forEach((child) => {\r\n      child.position.add(this.position)\r\n      child.context = this.context\r\n      child.render()\r\n      child.position.sub(this.position)\r\n    })\r\n    // this.context.restore()\r\n  }\r\n}\r\n\r\n*/","import Graphic from '../graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Video extends Graphic {\r\n  public width: number\r\n  public height: number\r\n  public opacity: number\r\n  public video: HTMLVideoElement\r\n  public angle: number\r\n  public type: string = \"img\"\r\n  public data: any\r\n  public ready: boolean = false\r\n  public todo: Array<Function> = []\r\n  public params: Array<any> = []\r\n  public filterEnable: boolean = false\r\n  public filterColors: Array<number> = []\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.video = document.createElement('video')\r\n    this.video.src = data.src\r\n    this.video.play()\r\n    this.video.crossOrigin = \"Anonymous\"\r\n\r\n    this.video.addEventListener('loadedmetadata', () => {\r\n      this.ready = true\r\n      console.info(`Video ${data.src} correctly loaded.`)\r\n      console.log(this.todo)\r\n      console.log(this.params)\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n\r\n    this.video.addEventListener('error', () => {\r\n      console.error('Error loading the video...')\r\n    })\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.video.width\r\n    this.height = data.height ? data.height : this.video.height\r\n  }\r\n\r\n  filter() {\r\n\r\n  }\r\n\r\n  getImageData() {\r\n    const canvas = document.createElement('canvas')\r\n    // console.log(canvas)\r\n    document.body.appendChild(canvas)\r\n    const context = canvas.getContext('2d')\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.translate((this.anchor.x * this.width), (this.anchor.y * this.height))\r\n    context.rotate(this.angle)\r\n    context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    document.body.removeChild(canvas)\r\n    // return context.getImageData( -this.width / 2 , - this.height/2, this.width + this.width/2, this.height + this.height/2)\r\n    return context.getImageData( 0, 0, this.width, this.height)\r\n  }\r\n/*\r\n  removeColor(color: Array<number>) {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n*/\r\n  onClick(func: Function): void {\r\n\r\n  }\r\n  realPosition() {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n\r\n  renderData(): void {\r\n    if (this.filterEnable) {\r\n      this.filterColor(this.filterColors[0], this.filterColors[1], this.filterColors[2])\r\n    }\r\n  //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    // this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n\r\n  filterColor(r: number, g: number, b: number) {\r\n    if (this.ready) {\r\n      this.filterEnable = true\r\n      this.filterColors = [r, g, b]\r\n      let image = this.getImageData()\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        image.data[pixel] += r\r\n        image.data[pixel + 1] += g\r\n        image.data[pixel + 2] += b\r\n        // image.data[pixel + 3]\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.filterColor.bind(this))\r\n      this.params.push([r, g, b])\r\n    }\r\n    \r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Video\r\n","import Graphic from '../graphics/Graphic'\r\nimport Events from '../Events'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nenum EventNames {\r\n  mousemove = 'mousemove',\r\n  mousedown = 'mousedown',\r\n  mouseup = 'mouseup',\r\n}\r\n\r\nclass CircleEvents extends Graphic implements Events {\r\n  public radius: number\r\n  // Private\r\n  private moveEnabled: boolean = false\r\n  private hoverEnabled: boolean = false\r\n  private dragEndEnabled: boolean = false\r\n  private dragingEnabled: boolean = false\r\n  private mouseUpEnabled: boolean = false\r\n  private dragStartEnabled: boolean = false\r\n  private mouseDownEnabled: boolean = false\r\n\r\n  private moveMethods: Array<Function>\r\n  private hoverMethods: Array<Function>\r\n  private mouseUpMethods: Array<Function>\r\n  private dragingMethods: Array<Function>\r\n  private dragEndMethods: Array<Function>\r\n  private mouseDownMethods: Array<Function>\r\n  private dragStartMethods: Array<Function>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    this.moveMethods = []\r\n    this.hoverMethods = []\r\n    this.mouseUpMethods = []\r\n    this.dragingMethods = []\r\n    this.dragEndMethods = []\r\n    this.dragStartMethods =[]\r\n    this.mouseDownMethods = []\r\n\r\n    if (configuration) {\r\n      if (configuration.radius) this.radius = configuration.radius\r\n    }\r\n  }\r\n\r\n  checkIfInside(point: Vector2D): boolean {\r\n    return this.position.distance(point) < this.radius\r\n  }\r\n\r\n  private enableEvent (eventName: EventNames, methods: Array<Function>): void {\r\n    let mouse: Vector2D\r\n\r\n    document.addEventListener(eventName, (event) => {\r\n      mouse = new Vector2D(event.clientX, event.clientY)\r\n      if (this.checkIfInside(mouse)) {\r\n        methods.forEach((method: Function) => method(mouse))\r\n      }\r\n    })\r\n  }\r\n\r\n  mouseDown(func: Function): void {\r\n    if (!this.mouseDownEnabled) {\r\n      this.mouseDownEnabled = !this.mouseDownEnabled\r\n      this.enableEvent(EventNames.mousedown, this.mouseDownMethods)\r\n    }\r\n    this.mouseDownMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseUp(func: Function): void {\r\n    if (!this.mouseUpEnabled) {\r\n      this.mouseUpEnabled = !this.mouseUpEnabled\r\n      this.enableEvent(EventNames.mouseup, this.mouseUpMethods)\r\n    }\r\n    this.mouseUpMethods.push(func.bind(this))\r\n  }\r\n\r\n  hover(func: Function): void {\r\n    if (!this.hoverEnabled) {\r\n      this.hoverEnabled = !this.hoverEnabled\r\n      this.enableEvent(EventNames.mousemove, this.hoverMethods)\r\n    }\r\n    this.hoverMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseMove(func: Function): void {\r\n    if (!this.moveEnabled) {\r\n      this.moveEnabled = !this.moveEnabled\r\n      let mouse: any\r\n      document.addEventListener('mousemove', (event) => {\r\n        mouse = new Vector2D(event.clientX, event.clientY)\r\n        this.moveMethods.forEach((method: Function) => method(mouse))\r\n      })\r\n    }\r\n    func = func.bind(this)\r\n    this.moveMethods.push(func)\r\n  }\r\n\r\n\r\n  dragStart(func: Function): void {\r\n    this.dragStartMethods.push(func.bind(this))\r\n  }\r\n\r\n  draging(func: Function): void {\r\n    this.dragingMethods.push(func.bind(this))\r\n  }\r\n\r\n  dragEnd(func: Function): void {\r\n    this.dragEndMethods.push(func.bind(this))\r\n  }\r\n\r\n  enableMouseDrag() {\r\n    let isDraging = false\r\n    let distance: Vector2D = new Vector2D()\r\n\r\n    document.addEventListener('mousemove', (event) => {\r\n      if (isDraging) {\r\n        this.position = Vector2D.add(distance, new Vector2D(event.clientX, event.clientY))\r\n        this.dragingMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseDown((mouse: Vector2D) => {\r\n      if (!isDraging) {\r\n        document.body.style.cursor = 'pointer'\r\n        isDraging = true\r\n        distance = Vector2D.sub(this.position, mouse)\r\n        this.position = Vector2D.add(distance, mouse)\r\n        this.dragStartMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseUp(() => {\r\n      if (isDraging) {\r\n        document.body.style.cursor = 'default'\r\n        isDraging = false\r\n        this.dragEndMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n  }  \r\n}\r\n\r\nexport default CircleEvents\r\n","import { Vector2D } from 'vector_class'\r\nimport CircleEvents from '../Events/CircleEvents'\r\n\r\n// Imaginary canvas\r\nconst canvas = document.createElement('canvas')\r\nconst context = canvas.getContext('2d')\r\n\r\nclass Picture extends CircleEvents {\r\n  public data: any\r\n  public angle: number\r\n  public width: number\r\n  public height: number\r\n  public ready: boolean\r\n  public opacity: number\r\n  public anchor: Vector2D\r\n  public params: Array<any>\r\n  public position: Vector2D\r\n  public todo: Array<Function>\r\n  public image: HTMLImageElement\r\n  public context: CanvasRenderingContext2D\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.position = new Vector2D(0, 0)\r\n    this.anchor = new Vector2D(0, 0)\r\n    this.ready = false\r\n    this.params = []\r\n    this.todo = []\r\n\r\n    this.image = new Image()\r\n    this.image.src = data.src\r\n    console.log(this.image)\r\n    this.image.addEventListener('load', () => {\r\n      this.ready = true\r\n      this.width = data.width ? data.width : this.image.width\r\n      this.height = data.height ? data.height : this.image.height\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n\r\n    this.image.addEventListener('error', (err) => {\r\n      console.log(err)\r\n      console.error('Error loading the image...')\r\n    })\r\n\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.image.width\r\n    this.height = data.height ? data.height : this.image.height\r\n  }\r\n\r\n  getImageData() {\r\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight)\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.drawImage(this.image, 0, 0, this.width, this.height)\r\n    return context.getImageData(0, 0, this.width, this.height)\r\n  }\r\n/*\r\n  removeColor(color: Array<number>): void {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n*/\r\n  realPosition(): Vector2D {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n/*\r\n  renderData(): void {\r\n    //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    //this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n*/\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.image, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Picture\r\n","import Render from './Render'\r\nimport Camera from './Camera'\r\nimport Video from './Media/Video'\r\nimport Picture from './Media/Picture'\r\nimport Graphic from './graphics/Graphic'\r\n\r\nclass Scene {\r\n  public backgroundColor: string\r\n  public camera: Camera\r\n  public renderer: Render\r\n  public childs: Array<any>\r\n  public frameRate: number\r\n  public interval: any\r\n  public context: CanvasRenderingContext2D\r\n\r\n  constructor(renderer: Render) {\r\n    this.childs = []\r\n    this.frameRate = 0\r\n    this.renderer = renderer\r\n    this.backgroundColor = 'black'\r\n    this.context = this.renderer.context\r\n    this.camera = new Camera(this.context)\r\n  }\r\n\r\n  dataLoaded(): boolean {\r\n    // Gets all the pictures and videos from the scene.\r\n    const elements = this.childs.filter((child) => {\r\n      if (child instanceof Picture) return true\r\n      if (child instanceof Video) return true\r\n      return false\r\n    })\r\n\r\n    // If there is an image that is not loaded returns false\r\n    return !elements.some((element) => !element.ready)\r\n  }\r\n\r\n  add(element: any): void {\r\n    element.context = this.context\r\n    this.childs.push(element)\r\n    this.organizeByZindex()\r\n  }\r\n\r\n  remove(element: Graphic): void {\r\n    let index = this.childs.indexOf(element)\r\n    if (index >= 0) {\r\n      this.childs.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  clearScreen(): void {\r\n    this.context.save()\r\n    this.context.setTransform(1, 0, 0, 1, 0, 0)\r\n    this.context.fillStyle = this.backgroundColor\r\n    this.context.fillRect(0, 0, window.innerWidth, window.innerHeight)\r\n    this.context.restore()\r\n  }\r\n\r\n  smoth(state: boolean): void {\r\n    if (this.context.imageSmoothingEnabled) {\r\n      this.context.imageSmoothingEnabled = state\r\n    } else if (this.context.mozImageSmoothingEnabled) {\r\n      this.context.mozImageSmoothingEnabled = state\r\n    } else if (this.context.webkitImageSmoothingEnabled) {\r\n      this.context.webkitImageSmoothingEnabled = state\r\n    }\r\n  }\r\n\r\n  organizeByZindex(): void {\r\n    this.childs.sort((a, b) => a.z_index - b.z_index)\r\n  }\r\n\r\n  autoRender(func?: Function): void {\r\n    this.interval = setInterval(() => {\r\n      if (func) func()\r\n      this.render()\r\n    }, this.frameRate)\r\n  }\r\n\r\n  stopAutoRender(): void {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  render(): void {\r\n    if (!this.dataLoaded()) {\r\n      console.info('Waiting for images to load...')\r\n      setTimeout(this.render.bind(this), 100)\r\n    } else {\r\n      this.clearScreen()\r\n      this.childs.forEach(child => child.render())\r\n      this.camera.update()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scene\r\n","import Scene from './Scene'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Render {\r\n  public scene: Scene\r\n  public canvas: HTMLCanvasElement\r\n  public context: CanvasRenderingContext2D\r\n  public frameRate: number = 1000 / 60\r\n\r\n  constructor(canvas?: HTMLCanvasElement, width?: number, height?: number) {\r\n    if (canvas) {\r\n      this.canvas = canvas\r\n    } else {\r\n      this.canvas = document.createElement('canvas')\r\n      document.body.appendChild(this.canvas)\r\n    }\r\n\r\n    if (width && height) {\r\n      this.canvas.width = width\r\n      this.canvas.height = height\r\n    } else {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    }\r\n\r\n    this.context = this.canvas.getContext('2d')\r\n    window.addEventListener('resize', () => {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    })\r\n  }\r\n\r\n  getWidth(): number {\r\n    return this.canvas.width\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.canvas.height\r\n  }\r\n\r\n  getSize(): Vector2D {\r\n    return new Vector2D(\r\n      this.canvas.width,\r\n      this.canvas.height)\r\n  }\r\n\r\n  getCanvasImage(): string {\r\n    return this.canvas.toDataURL()\r\n  }\r\n\r\n  fullScreen(): void {\r\n    let isFull = false\r\n    document.addEventListener('click', () => {\r\n      if (!isFull) {\r\n        this.canvas.webkitRequestFullScreen()\r\n      }\r\n    })\r\n  }\r\n\r\n  setScene(scene: Scene): void {\r\n    this.scene = scene\r\n    this.scene.renderer = this\r\n    this.scene.context = this.context\r\n    this.scene.smoth(false)\r\n  }\r\n}\r\n\r\nexport default Render\r\n","import Graphic from './graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass LinearGradient {\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D\r\n  public gradient: any\r\n  public size: Vector2D\r\n\r\n  constructor(config?: any) {\r\n    this.context = config.context\r\n    this.size = config.size ? config.size : new Vector2D(100, 100)\r\n    this.gradient = this.context.createLinearGradient(this.position.x, this.position.y, this.size.x, this.size.y)\r\n    let counter = 0\r\n    for (let color of config.colors) {\r\n      this.gradient.addColorStop(counter, color)\r\n      // console.log(1 / config.colors.length)\r\n      counter += 1 / config.colors.length\r\n    }\r\n  }\r\n}\r\n\r\nexport default LinearGradient\r\n","class Color {\r\n  public red  : number\r\n  public green: number\r\n  public blue : number\r\n  public alpha: number\r\n\r\n  constructor (red = 0, green = 0, blue = 0, alpha = 1) {\r\n    this.red   = Math.round(red * 255)\r\n    this.green = Math.round(green * 255)\r\n    this.blue  = Math.round(blue * 255)\r\n    this.alpha = alpha\r\n  \r\n    if (this.red > 255) this.red = 255\r\n    else if (this.red < 0) this.red = 0\r\n\r\n    if (this.green > 255) this.green = 255\r\n    else if (this.green < 0) this.green = 0\r\n\r\n    if (this.blue > 255) this.blue = 255\r\n    else if (this.blue < 0) this.blue = 0\r\n\r\n    if (this.alpha > 1) this.alpha = 1\r\n    else if (this.alpha < 0) this.alpha = 0\r\n  }\r\n\r\n  setRed (color: number) {\r\n    if (color > 255) {\r\n      this.red = 255\r\n    } else if (color < 0) {\r\n      this.red = 0\r\n    } else {\r\n      this.red = color\r\n    }\r\n  }\r\n\r\n  setGreen (color: number) {\r\n    if (color > 255) {\r\n      this.green = 255\r\n    } else if (color < 0) {\r\n      this.green = 0\r\n    } else {\r\n      this.green = color\r\n    }\r\n  }\r\n\r\n  setBlue (color: number) {\r\n    if (color > 255) {\r\n      this.blue = 255\r\n    } else if (color < 0) {\r\n      this.blue = 0\r\n    } else {\r\n      this.blue = color\r\n    }\r\n  }\r\n\r\n  rgba () {\r\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`\r\n  }\r\n\r\n  rgb () {\r\n    return `rgb(${this.red}, ${this.green}, ${this.blue})`\r\n  }\r\n\r\n  static random () {\r\n    return new Color(Math.random(), Math.random(), Math.random())\r\n  }\r\n}\r\n\r\nexport default Color\r\n","import { Vector2D } from 'vector_class'\r\n\r\nclass Animation {\r\n  public loop: boolean = true\r\n  public size: Vector2D = new Vector2D(32, 32)\r\n  public scale: Vector2D\r\n  public frameRate: number\r\n  public x: number\r\n  public y: number\r\n  public image: HTMLImageElement\r\n  public interval: any\r\n  public frame:Vector2D = new Vector2D(0, 0)\r\n  public animations: any\r\n  public animationPlaying: boolean = false\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D  \r\n  constructor(configuration: any) {\r\n    this.load(configuration.src)\r\n    this.loop = configuration.loop ? configuration.loop : true\r\n    this.size = configuration.size ? configuration.size : new Vector2D(32, 32)\r\n    this.scale = configuration.scale ? configuration.scale : new Vector2D(1, 1)\r\n    this.frameRate = configuration.frameRate ? configuration.frameRate : 24\r\n    this.animations = configuration.animations\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  playAnimation (name: string): void {    \r\n    if (!this.animationPlaying) {\r\n      this.animationPlaying = true\r\n      this.frame.x = 0\r\n      this.frame.y = this.animations[name][1]\r\n      this.reproduceAnimation(name)\r\n    }\r\n  }\r\n\r\n  reproduceAnimation (name: string): void {\r\n    this.x = this.size.x * this.frame.x\r\n    this.y = this.size.y * this.frame.y\r\n    this.frame.x += 1\r\n    if (this.frame.x >= this.animations[name][0]) {\r\n      this.animationPlaying = false\r\n    } else {\r\n      setTimeout(() => this.reproduceAnimation(name), this.frameRate)\r\n    }\r\n  }\r\n\r\n  mouseDown() {\r\n\r\n  }\r\n\r\n  onClick(func: Function): void { }\r\n\r\n  load(src: string): void {\r\n    this.image = new Image()\r\n    this.image.src = src\r\n  }\r\n\r\n  getSize() {\r\n    return new Vector2D(this.size.x * this.scale.x, this.size.y * this.scale.y)\r\n  }\r\n\r\n  render() {\r\n    this.context.drawImage(\r\n      this.image,\r\n      this.x,\r\n      this.y,\r\n      this.size.x, this.size.y,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size.x * this.scale.x,\r\n      this.size.y * this.scale.y\r\n    )\r\n  }\r\n\r\n  destroy() {\r\n    clearInterval(this.interval)\r\n  }\r\n}\r\n\r\nexport default Animation\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\nimport LinearGradient from '../LinearGradient'\r\n\r\nclass Ellipse extends Graphic {\r\n  public radiusX: number = 10\r\n  public radiusY: number = 5\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.lineWidth = configuration.lineWidth ? configuration.lineWidth : this.lineWidth\r\n      this.lineColor = configuration.lineColor ? configuration.lineColor : this.lineColor\r\n      this.radiusX = configuration.radiusX ? configuration.radiusX : this.radiusX\r\n      this.radiusY = configuration.radiusY ? configuration.radiusY : this.radiusY\r\n      this.stroke = configuration.stroke ? configuration.stroke : this.stroke\r\n      this.color = configuration.color ? configuration.color : this.color\r\n      this.fill = configuration.fill ? configuration.fill : this.fill\r\n      if (configuration.linearGradient) {\r\n        this.linearGradient = configuration.linearGradient\r\n        // this.render = this.renderGradient\r\n      }\r\n    }\r\n  }\r\n\r\n  renderGradient () {\r\n    this.color = new LinearGradient({\r\n      context: this.context,\r\n      colors: this.linearGradient,\r\n      size: new Vector2D(this.position.x, this.position.y + this.radiusY),\r\n      position: new Vector2D(this.position.x, this.position.y - this.radiusY / 2)\r\n    }).gradient\r\n\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this.renderGradient()\r\n    /*\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n    */\r\n  }\r\n}\r\n\r\nexport default Ellipse\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Poligon extends Graphic {\r\n  public cords: Array<Vector2D>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration.color) this.color = configuration.color\r\n    if (configuration.stroke) this.stroke = configuration.stroke\r\n    if (configuration.cords) this.cords = configuration.cords.slice(1, configuration.cords.length)\r\n    if (configuration.fill) this.fill = configuration.fill\r\n    this.position = configuration.cords.slice[0]\r\n    this.cords.filter((pnt) => {\r\n      return new Vector2D(pnt.x - this.position.x, pnt.y - this.position.y)\r\n    })\r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineCap = this.lineCap\r\n    this.context.fillStyle = this.color\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.moveTo(this.cords[0].x, this.cords[0].y)\r\n    for (var i = 0; i < this.cords.length; i++) {\r\n      this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y)\r\n    }\r\n\r\n    this.context.closePath()\r\n    this.context.fill()\r\n    if (this.stroke) this.context.stroke\r\n  }\r\n}\r\n\r\nexport default Poligon\r\n","\r\nimport CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Circle extends CircleEvents {\r\n  public radius: number = 5\r\n\r\n  constructor (config?: any) {\r\n    super(config)\r\n    if (config) {\r\n      this.radius = config.radius ? config.radius : 5\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  } \r\n}\r\n\r\nexport default Circle\r\n","import Graphic from './Graphic'\r\n\r\nclass Rect extends Graphic {\r\n  public width: number = 1\r\n  public height: number = 1\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data.width) this.width = data.width\r\n    if (data.height) this.height = data.height\r\n  }\r\n\r\n  selfRender(): void {\r\n    if (this.fill) {\r\n      this.context.fillRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.strokeRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Rect\r\n","import Graphic from './Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nclass Line extends Graphic {\r\n  public start: Vector2D = new Vector2D(0, 0)\r\n  public end: Vector2D = new Vector2D(1, 1)\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data) {\r\n      if (data.start) this.start = data.start\r\n      if (data.end) this.end = data.end\r\n      if (data.color) this.color = data.color\r\n      if (data.start) this.position = data.start\r\n      this.end = new Vector2D(this.end.x - this.start.x, this.end.y - this.start.y)\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    /*\r\n    this.context.strokeStyle = this.color\r\n    this.context.lineWidth = this.width\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    */\r\n   this.context.beginPath()\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.lineTo(this.end.x + this.position.x, this.end.y + this.position.y)\r\n    this.context.stroke()\r\n  }\r\n}\r\n\r\nexport default Line\r\n","import Graphic from './Graphic'\r\n\r\nclass Text extends Graphic {\r\n  public content: string\r\n  public fontConfig: string = ''\r\n  public lineHeight: number = 12\r\n  public maxWidth: number = 500\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.content = configuration.content ? configuration.content : ''\r\n    }\r\n  }\r\n\r\n  wrapText() {\r\n    let x = this.position.x\r\n    let y = this.position.y\r\n    var words = this.content.split(' ')\r\n    var line = ''\r\n  \r\n    for(var n = 0; n < words.length; n++) {\r\n      var testLine = line + words[n] + ' '\r\n      var metrics = this.context.measureText(testLine)\r\n      var testWidth = metrics.width\r\n      if (testWidth > this.maxWidth && n > 0) {\r\n        this.context.fillText(line, x, y)\r\n        line = words[n] + ' '\r\n        y += this.lineHeight\r\n      }\r\n      else {\r\n        line = testLine\r\n      }\r\n    }\r\n    this.context.fillText(line, x, y)\r\n  }\r\n\r\n  render(): void {\r\n    this.context.fillStyle = this.color\r\n    this.context.font = `${this.weight} ${this.size}px ${this.family}`\r\n    this.context.textAlign = this.textAlign\r\n    this.context.textBaseline = this.textBaseline\r\n    if (this.stroke) {\r\n      this.context.strokeText(this.content, this.position.x, this.position.y)\r\n    }\r\n    this.context.fillText(this.content, this.position.x, this.position.y)\r\n  }\r\n}\r\n\r\nexport default Text\r\n","import CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Arc extends CircleEvents {\r\n  public endAngle: number = 0\r\n  public startAngle: number = Math.PI\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.endAngle = configuration.endAngle ? configuration.endAngle : 0\r\n      this.startAngle = configuration.startAngle ? configuration.startAngle : Math.PI\r\n    }\r\n  }\r\n  \r\n  selfRender(): void {\r\n    this.context.arc(0, 0, this.radius, this.endAngle, this.startAngle, true)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Arc\r\n","import Graphic from './Graphic'\r\n\r\nclass BezierCurve extends Graphic {\r\n  public cords: Array<Array<number>>\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.cords = config.cords ? config.cords : [[10, 10], [80, 20], [30, 30]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.bezierCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1], this.cords[2][0], this.cords[2][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default BezierCurve\r\n","import Graphic from './Graphic'\r\n\r\nclass QuadraticCurve extends Graphic {\r\n  public color: string\r\n  public cords: Array<Array<number>>\r\n  public width: number\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.color = config.color ? config.color : 'black'\r\n    this.width = config.width ? config.width : 5\r\n    this.cords = config.cords ? config.cords : [[20, 100], [200, 20]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.lineWidth = this.width\r\n    this.context.strokeStyle = this.color\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.quadraticCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default QuadraticCurve\r\n","\r\ninterface EventsManager {\r\n  mousemove: Array<Function>,\r\n  mouseup: Array<Function>,\r\n  mousedown: Array<Function>,\r\n  mousemoveActive: Boolean,\r\n  mouseupActive: Boolean,\r\n  mousedownActive: Boolean,\r\n\r\n  keypress: Array<Function>,\r\n  keyup: Array<Function>,\r\n  keydown: Array<Function>,\r\n  keypressActive: Boolean,\r\n  keyupActive: Boolean,\r\n  keydownActive: Boolean,\r\n}\r\n\r\nclass Event {\r\n  public events: any = {\r\n    // Mouse\r\n    mousemove: [],\r\n    mouseup: [],\r\n    mousedown: [],\r\n    mousemoveActive: false,\r\n    mousedownActive: false,\r\n    mouseupActive: false,\r\n\r\n    // KeyBoard\r\n    keypress: [],\r\n    keyup: [],\r\n    keydown: [],\r\n    keypressActive: false,\r\n    keydownActive: false,\r\n    keyupActive: false\r\n  }\r\n\r\n  public initEvent (name: string): void {\r\n    document.addEventListener(name, (event) => {\r\n      this.events[name].forEach((func: Function) => func(this, event))\r\n    })\r\n  }\r\n}\r\n\r\nexport default Event\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport Event from './Event'\r\n\r\nclass Mouse extends Event {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public clicked: boolean = false\r\n\r\n  constructor () {\r\n    super()\r\n    this.move((self: any, event: any) => {\r\n      this.position.x = event.clientX\r\n      this.position.y = event.clientY\r\n    })\r\n  }\r\n\r\n  move (func: Function): void {\r\n    if (!this.events.mousemoveActive) {\r\n      this.initEvent('mousemove')\r\n      this.events.mousemoveActive = true\r\n    }\r\n    this.events.mousemove.push(func)\r\n  }\r\n\r\n  up (func: Function): void {\r\n    if (!this.events.mouseupActive) {\r\n      this.initEvent('mouseup')\r\n      this.events.mouseupActive = true\r\n    }\r\n  }\r\n\r\n  down (func: Function): void {\r\n    if (!this.events.mousedownActive) {\r\n      this.initEvent('mousedown')\r\n      this.events.mousedownActive = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default Mouse\r\n","\r\nimport Event from './Event'\r\n\r\nclass KeyBoard extends Event{\r\n  public keys: Array<string> = []\r\n\r\n  press (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      // console.log(event.key === key)\r\n      // console.log(event.key, key)\r\n      if (event.key === key) {\r\n        // console.log(func)\r\n        func(this, event)\r\n      }\r\n    }\r\n\r\n    if (!this.events.keypressActive) {\r\n      this.events.keypressActive = true\r\n      this.initEvent('keypress')\r\n    }\r\n    this.events.keypress.push(func2)\r\n  }\r\n\r\n  down (key: string, func: Function) {\r\n    func = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keydownActive) {\r\n      this.events.keydownActive = true\r\n      this.initEvent('keydown')\r\n    }\r\n    this.events.keydown.push(func)\r\n  }\r\n\r\n  up (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keyupActive) {\r\n      this.events.keyupActive = true\r\n      this.initEvent('keyup')\r\n    }\r\n    this.events.keyup.push(func2)\r\n  }\r\n}\r\n\r\nexport default KeyBoard\r\n","const defaultCss = document.createElement('style')\r\ndefaultCss.type = 'text/css'\r\ndefaultCss.innerHTML = `\r\n\r\n* {\r\n  margin:0%;\r\n  padding: 0%;\r\n}\r\n\r\ncanvas {\r\n  display: block;\r\n}\r\n`\r\ndocument.head.appendChild(defaultCss)\r\n\r\nimport Scene from './Scene'\r\nimport Render from './Render'\r\nimport LinearGradient from './LinearGradient'\r\nimport { Vector2D } from 'vector_class'\r\nimport Color from './Color'\r\n\r\n// Graphics\r\nimport Animation from './Media/Animation'\r\nimport Graphic from './graphics/Graphic'\r\nimport Ellipse from './graphics/Ellipse'\r\nimport Poligon from './graphics/Poligon'\r\nimport Picture from './Media/Picture'\r\nimport Circle from './graphics/Circle'\r\nimport Video from './Media/Video'\r\nimport Rect from './graphics/Rect'\r\nimport Line from './graphics/Line'\r\nimport Text from './graphics/Text'\r\nimport Arc from './graphics/Arc'\r\nimport BezierCurve from './graphics/BezierCurve'\r\nimport QuadraticCurve from './graphics/QuadraticCurve'\r\n\r\n// Events\r\nimport Mouse from './Events/Mouse'\r\nimport KeyBoard from './Events/KeyBoard'\r\n\r\nconst mouse = new Mouse()\r\nconst keyboard = new KeyBoard()\r\n\r\nexport {\r\n  QuadraticCurve,\r\n  Video,\r\n  BezierCurve,\r\n  LinearGradient,\r\n  Ellipse,\r\n  mouse,\r\n  keyboard,\r\n  Color,\r\n  Animation,\r\n  Rect,\r\n  Circle,\r\n  Vector2D,\r\n  Line,\r\n  Poligon,\r\n  Picture,\r\n  Text,\r\n  Arc,\r\n  Graphic,\r\n  Scene,\r\n  Render\r\n}\r\n"]}